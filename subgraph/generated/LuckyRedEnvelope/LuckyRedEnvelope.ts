// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ClaimPrize extends ethereum.Event {
  get params(): ClaimPrize__Params {
    return new ClaimPrize__Params(this);
  }
}

export class ClaimPrize__Params {
  _event: ClaimPrize;

  constructor(event: ClaimPrize) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get totalAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get autoClaim(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class DefaultChange extends ethereum.Event {
  get params(): DefaultChange__Params {
    return new DefaultChange__Params(this);
  }
}

export class DefaultChange__Params {
  _event: DefaultChange;

  constructor(event: DefaultChange) {
    this._event = event;
  }

  get defaultTicketPirce(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get defaultAutoClaim(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class NewOperatorAddress extends ethereum.Event {
  get params(): NewOperatorAddress__Params {
    return new NewOperatorAddress__Params(this);
  }
}

export class NewOperatorAddress__Params {
  _event: NewOperatorAddress;

  constructor(event: NewOperatorAddress) {
    this._event = event;
  }

  get operatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PrizeDrawn extends ethereum.Event {
  get params(): PrizeDrawn__Params {
    return new PrizeDrawn__Params(this);
  }
}

export class PrizeDrawn__Params {
  _event: PrizeDrawn;

  constructor(event: PrizeDrawn) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get autoClaim(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class RedEnvelopeClaimable extends ethereum.Event {
  get params(): RedEnvelopeClaimable__Params {
    return new RedEnvelopeClaimable__Params(this);
  }
}

export class RedEnvelopeClaimable__Params {
  _event: RedEnvelopeClaimable;

  constructor(event: RedEnvelopeClaimable) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RedEnvelopeClosed extends ethereum.Event {
  get params(): RedEnvelopeClosed__Params {
    return new RedEnvelopeClosed__Params(this);
  }
}

export class RedEnvelopeClosed__Params {
  _event: RedEnvelopeClosed;

  constructor(event: RedEnvelopeClosed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get userTickets(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get injectTickets(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RedEnvelopeCreated extends ethereum.Event {
  get params(): RedEnvelopeCreated__Params {
    return new RedEnvelopeCreated__Params(this);
  }
}

export class RedEnvelopeCreated__Params {
  _event: RedEnvelopeCreated;

  constructor(event: RedEnvelopeCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get maxTickets(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get ticketPirce(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get autoClaim(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class TicketsInject extends ethereum.Event {
  get params(): TicketsInject__Params {
    return new TicketsInject__Params(this);
  }
}

export class TicketsInject__Params {
  _event: TicketsInject;

  constructor(event: TicketsInject) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ticketNumbers(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TicketsPurchase extends ethereum.Event {
  get params(): TicketsPurchase__Params {
    return new TicketsPurchase__Params(this);
  }
}

export class TicketsPurchase__Params {
  _event: TicketsPurchase;

  constructor(event: TicketsPurchase) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiveAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ticketNumbers(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LuckyRedEnvelope extends ethereum.SmartContract {
  static bind(address: Address): LuckyRedEnvelope {
    return new LuckyRedEnvelope("LuckyRedEnvelope", address);
  }

  currentId(): BigInt {
    let result = super.call("currentId", "currentId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("currentId", "currentId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultAutoClaim(): boolean {
    let result = super.call(
      "defaultAutoClaim",
      "defaultAutoClaim():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_defaultAutoClaim(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "defaultAutoClaim",
      "defaultAutoClaim():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  defaultTicketPirce(): BigInt {
    let result = super.call(
      "defaultTicketPirce",
      "defaultTicketPirce():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_defaultTicketPirce(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultTicketPirce",
      "defaultTicketPirce():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operatorAddress(): Address {
    let result = super.call(
      "operatorAddress",
      "operatorAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_operatorAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "operatorAddress",
      "operatorAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  redEnvelopeStatus(_id: BigInt): i32 {
    let result = super.call(
      "redEnvelopeStatus",
      "redEnvelopeStatus(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_id)],
    );

    return result[0].toI32();
  }

  try_redEnvelopeStatus(_id: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "redEnvelopeStatus",
      "redEnvelopeStatus(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(_id)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  ticketToken(): Address {
    let result = super.call("ticketToken", "ticketToken():(address)", []);

    return result[0].toAddress();
  }

  try_ticketToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("ticketToken", "ticketToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _defaultTicketPirce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _operatorAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyTicketsCall extends ethereum.Call {
  get inputs(): BuyTicketsCall__Inputs {
    return new BuyTicketsCall__Inputs(this);
  }

  get outputs(): BuyTicketsCall__Outputs {
    return new BuyTicketsCall__Outputs(this);
  }
}

export class BuyTicketsCall__Inputs {
  _call: BuyTicketsCall;

  constructor(call: BuyTicketsCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _receiveAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _ticketNumbers(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BuyTicketsCall__Outputs {
  _call: BuyTicketsCall;

  constructor(call: BuyTicketsCall) {
    this._call = call;
  }
}

export class ClaimPrizeCall extends ethereum.Call {
  get inputs(): ClaimPrizeCall__Inputs {
    return new ClaimPrizeCall__Inputs(this);
  }

  get outputs(): ClaimPrizeCall__Outputs {
    return new ClaimPrizeCall__Outputs(this);
  }
}

export class ClaimPrizeCall__Inputs {
  _call: ClaimPrizeCall;

  constructor(call: ClaimPrizeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimPrizeCall__Outputs {
  _call: ClaimPrizeCall;

  constructor(call: ClaimPrizeCall) {
    this._call = call;
  }
}

export class CreateRedEnvelopeCall extends ethereum.Call {
  get inputs(): CreateRedEnvelopeCall__Inputs {
    return new CreateRedEnvelopeCall__Inputs(this);
  }

  get outputs(): CreateRedEnvelopeCall__Outputs {
    return new CreateRedEnvelopeCall__Outputs(this);
  }
}

export class CreateRedEnvelopeCall__Inputs {
  _call: CreateRedEnvelopeCall;

  constructor(call: CreateRedEnvelopeCall) {
    this._call = call;
  }

  get _endTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxTickets(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _injectTickets(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _secret(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateRedEnvelopeCall__Outputs {
  _call: CreateRedEnvelopeCall;

  constructor(call: CreateRedEnvelopeCall) {
    this._call = call;
  }
}

export class DrawPrizeCall extends ethereum.Call {
  get inputs(): DrawPrizeCall__Inputs {
    return new DrawPrizeCall__Inputs(this);
  }

  get outputs(): DrawPrizeCall__Outputs {
    return new DrawPrizeCall__Outputs(this);
  }
}

export class DrawPrizeCall__Inputs {
  _call: DrawPrizeCall;

  constructor(call: DrawPrizeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DrawPrizeCall__Outputs {
  _call: DrawPrizeCall;

  constructor(call: DrawPrizeCall) {
    this._call = call;
  }
}

export class EndRedEnvelopeCall extends ethereum.Call {
  get inputs(): EndRedEnvelopeCall__Inputs {
    return new EndRedEnvelopeCall__Inputs(this);
  }

  get outputs(): EndRedEnvelopeCall__Outputs {
    return new EndRedEnvelopeCall__Outputs(this);
  }
}

export class EndRedEnvelopeCall__Inputs {
  _call: EndRedEnvelopeCall;

  constructor(call: EndRedEnvelopeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndRedEnvelopeCall__Outputs {
  _call: EndRedEnvelopeCall;

  constructor(call: EndRedEnvelopeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDefaultAutoClaimCall extends ethereum.Call {
  get inputs(): SetDefaultAutoClaimCall__Inputs {
    return new SetDefaultAutoClaimCall__Inputs(this);
  }

  get outputs(): SetDefaultAutoClaimCall__Outputs {
    return new SetDefaultAutoClaimCall__Outputs(this);
  }
}

export class SetDefaultAutoClaimCall__Inputs {
  _call: SetDefaultAutoClaimCall;

  constructor(call: SetDefaultAutoClaimCall) {
    this._call = call;
  }

  get _defaultAutoClaim(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetDefaultAutoClaimCall__Outputs {
  _call: SetDefaultAutoClaimCall;

  constructor(call: SetDefaultAutoClaimCall) {
    this._call = call;
  }
}

export class SetDefaultTicketPirceCall extends ethereum.Call {
  get inputs(): SetDefaultTicketPirceCall__Inputs {
    return new SetDefaultTicketPirceCall__Inputs(this);
  }

  get outputs(): SetDefaultTicketPirceCall__Outputs {
    return new SetDefaultTicketPirceCall__Outputs(this);
  }
}

export class SetDefaultTicketPirceCall__Inputs {
  _call: SetDefaultTicketPirceCall;

  constructor(call: SetDefaultTicketPirceCall) {
    this._call = call;
  }

  get _defaultTicketPirce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultTicketPirceCall__Outputs {
  _call: SetDefaultTicketPirceCall;

  constructor(call: SetDefaultTicketPirceCall) {
    this._call = call;
  }
}

export class SetOperatorAddressCall extends ethereum.Call {
  get inputs(): SetOperatorAddressCall__Inputs {
    return new SetOperatorAddressCall__Inputs(this);
  }

  get outputs(): SetOperatorAddressCall__Outputs {
    return new SetOperatorAddressCall__Outputs(this);
  }
}

export class SetOperatorAddressCall__Inputs {
  _call: SetOperatorAddressCall;

  constructor(call: SetOperatorAddressCall) {
    this._call = call;
  }

  get _operatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOperatorAddressCall__Outputs {
  _call: SetOperatorAddressCall;

  constructor(call: SetOperatorAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
