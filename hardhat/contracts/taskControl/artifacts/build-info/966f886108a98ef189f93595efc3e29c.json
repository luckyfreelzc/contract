{
	"id": "966f886108a98ef189f93595efc3e29c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/taskControl/TaskControlWithToken.sol": {
				"content": "    // SPDX-License-Identifier: MIT\n    // Compatible with OpenZeppelin Contracts ^5.0.0\n    pragma solidity ^0.8.19;\n\n    import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n    import \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n    import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n    import \"@openzeppelin/contracts/access/Ownable.sol\";\n    import \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n    import \"../interfaces/IRedEnvelope.sol\";\n    import \"../interfaces/ITaskControlWithToken.sol\";\n    import \"../interfaces/ItaskCallee.sol\";\n\n    contract TaskControlWithToken is ITaskControlWithToken,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {\n        using SafeERC20 for IERC20;\n        address public redEnvelopeAddr;\n        bool public allowBuyTicket;\n        bool public allowSendTicket;\n\n        mapping(address => uint256) public _tasks;     //记录任务及权重\n\n        event TaskAdd(address taskAddr,uint256 weight);\n\n        constructor(address _redEnvelopeAddr,bool _allowBuyTicket,bool _allowSendTicket)\n            ERC20(\"lotteryTicket\", \"Ticket\")\n            Ownable(address(msg.sender))\n        {\n            //_mint(msg.sender, 10000 * 10 ** decimals());\n            redEnvelopeAddr = _redEnvelopeAddr;\n            allowBuyTicket = _allowBuyTicket;\n            allowSendTicket = _allowSendTicket;\n            \n        }\n\n        /*\n        function decimals() public view override virtual returns (uint8) {\n            return 6;\n        }*/\n\n        //设置任务及权重，若权重为0，则等同删除任务\n        function setTask(address _taskAddr,uint256 _weight)external onlyOwner{\n            _tasks[_taskAddr] = _weight;\n            emit TaskAdd(_taskAddr, _weight);\n        }\n        function getTask(address _taskAddr)external view  returns(uint256) {\n            return _tasks[_taskAddr];\n        }\n\n\n        function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data) external virtual override nonReentrant{\n            require(_tasks[_taskAddr] != 0,\"no set as task\");\n\n            //实际铸造token数为runTask返回值*权重\n            uint256 amount = ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr];\n            _mint(_receiveAddress, amount);\n            emit TokenMint(address(msg.sender),_taskAddr,_receiveAddress,amount);\n        }\n\n        function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){\n            bool buy = true;\n            RedEnvelope memory redEnvelope = IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id);\n            if (redEnvelope.sendAllowAddr == address(0)){      \n                require(allowBuyTicket == true, \"buy ticket no allow\");\n                uint256 approveAmount = redEnvelope.ticketPirce * _ticketNumbers;\n                IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount);       \n                IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers);\n            }else{\n                require(allowSendTicket == true, \"send ticket no allow\");                \n                IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers);\n                buy = false;\n            }\n            return buy;\n        }\n\n        function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external virtual override {\n            uint256 amount = _ticketNumbers * 10 ** decimals();\n            burn(amount);\n            bool buy = _getTicket(_id,_receiveAddress,_ticketNumbers);\n\n            emit TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy);\n        }\n        function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external virtual override {\n            uint256 amount = _ticketNumbers * 10 ** decimals();\n            burnFrom(_fromAddress,amount);\n            bool buy = _getTicket(_id,_receiveAddress,_ticketNumbers);\n\n            emit TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy);\n        }\n\n        //提取第三方代币\n        function withdraw(address _token,address _to,uint256 _value)external virtual onlyOwner{\n            IERC20(_token).transfer(_to,_value);\n        }\n    }"
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.19;\n\ninterface ItaskCallee{\n    //执行具体领取任务\n    function taskCall(address sender,bytes calldata data) external  returns(uint256);\n}\n"
			},
			"contracts/interfaces/ITaskControlWithToken.sol": {
				"content": "    // SPDX-License-Identifier: MIT\n    // Compatible with OpenZeppelin Contracts ^5.0.0\n    pragma solidity ^0.8.19;\n\n    interface ITaskControlWithToken  {\n        event TokenMint(address sender,address taskAddr,address receiveAddress,uint256 amount);\n        event TicketGet(uint256 id,address fromAddress,address receiveAddress,uint256 amount,uint256 ticketNumbers,bool buy);\n        \n        //执行_taskAddr合约任务，并发放任务代币\n        function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data)  external;\n        //花费自身任务代币并参与抽奖\n        function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)  external;\n        //花费第三方授权任务代币并参与抽奖\n        function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)  external;\n    }"
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity ^0.8.19;\r\n\r\n\r\n\r\nenum Status {\r\n    Pending,\r\n    Open,\r\n    Close,\r\n    Claimable\r\n}\r\nstruct RedEnvelope{\r\n    address ticketToken;\r\n    Status status;\r\n    uint256 endTime;\r\n    uint256 maxTickets;\r\n    uint256 maxPrizeNum;    //最大中奖数\r\n    uint256 buyTickets;    //用户购买投注数\r\n    uint256 sendTickets;     //用户获取投注数\r\n    uint256 injectTickets;  //捐赠数\r\n    uint256 userAddrNum;\r\n    uint256 userTxNum;\r\n    uint256 injectAddrNum;\r\n    uint256 ticketPirce;\r\n    address sendAllowAddr;  //可调用领取接口的地址，若设置非0x0，则仅允许getTickets，否则仅允许buyTickets\r\n    uint256 secret;\r\n    bool autoClaim; \r\n}\r\n\r\nstruct Ticket{\r\n    uint256 totalNumbers;\r\n    address receiveAddress;\r\n    bool buy;\r\n}\r\n\r\ninterface IRedEnvelope{\r\n event RedEnvelopeCreated(\r\n        uint256 indexed id,\r\n        uint256 endTime,\r\n        uint256 maxTickets, \r\n        uint256 maxPrizeNum,\r\n        uint256 ticketPirce,\r\n        address ticketToken,\r\n        address sendAllowAddr,\r\n        bool autoClaim\r\n    );\r\n\r\n    event RedEnvelopeClosed(\r\n        uint256 indexed id,\r\n        uint256 endTime,\r\n        uint256 buyTickets,\r\n        uint256 sendTickets,\r\n        uint256 injectTickets\r\n    );\r\n\r\n    event RedEnvelopeClaimable(\r\n        uint256 indexed id,\r\n        uint256 endTime\r\n    );\r\n\r\n    //ticketIndex表明购注的起始编号\r\n    //若ticketIndex为23，ticketNumbers为1，则奖注的编号为23\r\n    //若ticketIndex为0，ticketNumbers为10，则奖注的编号为0-9\r\n    event TicketsPurchase(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        address indexed receiveAddress,\r\n        uint256 ticketIndex,    \r\n        uint256 ticketNumbers\r\n    );\r\n\r\n    event TicketsGet(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        address indexed receiveAddress,\r\n        uint256 ticketIndex,\r\n        uint256 ticketNumbers\r\n    );\r\n\r\n    event TicketsInject(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        uint256 ticketNumbers\r\n    );\r\n\r\n\r\n    event PrizeDrawn(\r\n        uint256 indexed id,\r\n        address indexed winner,\r\n        uint256 indexed index,\r\n        uint256 amount,\r\n        bool autoClaim\r\n    );\r\n\r\n    event ClaimPrize(\r\n        uint256 indexed id,\r\n        address indexed winner,\r\n        uint256 totalAmount,\r\n        bool autoClaim\r\n    );\r\n    /**\r\n     * @notice create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式\r\n     * @dev Callable by operator\r\n     * @param _endTime: endTime of the RedEnvelope，0 = no limit\r\n     * @param _maxTickets: max ticket of the RedEnvelope，0 = no limit\r\n     * @param _maxPrizeNum: prize num of the RedEnvelope，0为100%中奖\r\n     * @param _secret: \r\n     */\r\n    function createRedEnvelope(\r\n        uint256 _endTime,\r\n        uint256 _maxTickets,\r\n        uint256 _maxPrizeNum,\r\n        uint256 _secret\r\n    )external;\r\n    \r\n    //精细化创建红包，指定该批次红包的代币及奖注价格，\r\n    function createRedEnvelopeDetail(\r\n        address _tokenAddress,  //代币地址\r\n        uint256 _ticketPirce,\r\n        uint256 _endTime,\r\n        uint256 _maxTickets,\r\n        uint256 _maxPrizeNum,\r\n        address _injectAddress,     //可在创建活动时即向该红包奖池捐赠代币，需approve额度\r\n        uint256 _injectTicketNum,   //初始化时捐赠额度，0为不捐赠\r\n        address _sendAllowAddr,     //若为0x0，则表明为buyTickets模式，仅允许buyTickets；若为非0x0地址，则为sendTickets模式，仅允许_sendTicketAddr地址对第三方通过sendTickets赠送奖注\r\n        uint256 _secret,\r\n        bool _autoClaim             //是否自动领取，若为false，需要中奖用户自行通过claimPrize领奖\r\n    )external;\r\n\r\n    //向奖池捐赠资产额度，不参与抽奖，任何地址可调用，需要approve授权\r\n    function injectTickets(uint256 _id,uint256 _ticketNumbers)external;\r\n\r\n    //在sendTickets模式下可被SendAllowAddr地址调用，指定领取奖注额度\r\n    function sendTickets(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external;\r\n\r\n    //在buyTickets模式下可被任何地址调用，需要approve额度\r\n    function buyTickets(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external;\r\n\r\n    //结束投注，调用后该红包不再接受injectTickets/getTickets/buyTickets\r\n    function endRedEnvelope(uint256 _id)external;\r\n\r\n    //开奖，若_autoClaim为true，则自动向中奖用户派奖\r\n    function drawPrize(uint256 _id,uint256 _nonce)external;\r\n\r\n    //开奖后，若_autoClaim为false，需要中奖用户调用该接口手动领奖\r\n    function claimPrize(uint256 _id)external;\r\n\r\n    //查询指定红包状态\r\n    function viewRedEnvelopeStatus(uint256 _id)external view  returns (uint);\r\n    //查询最新红包id\r\n    function viewCurrentRedEnvelopeId() external view returns(uint256);\r\n    //查询红包详情\r\n    function viewRedEnvelope(uint256 _id)external view returns (RedEnvelope memory);\r\n    //查询指定用户可领取的中奖金额\r\n    function viewRedEnvelopeClaimPrize(uint256 _id,address _user)external view returns(uint256);\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122074aeab300127711436f935847cce2b9230318f8f1c3ad5dd678023a8f41bdb4e64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122074aeab300127711436f935847cce2b9230318f8f1c3ad5dd678023a8f41bdb4e64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xAEAB300127711436F935847CCE2B9230318F8F1C3A 0xD5 0xDD PUSH8 0x8023A8F41BDB4E64 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "751:5018:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122074aeab300127711436f935847cce2b9230318f8f1c3ad5dd678023a8f41bdb4e64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xAEAB300127711436F935847CCE2B9230318F8F1C3A 0xD5 0xDD PUSH8 0x8023A8F41BDB4E64 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "751:5018:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074aeab300127711436f935847cce2b9230318f8f1c3ad5dd678023a8f41bdb4e64736f6c63430008190033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/interfaces/IRedEnvelope.sol",
								"contracts/interfaces/ITaskControlWithToken.sol",
								"contracts/interfaces/ItaskCallee.sol",
								"contracts/taskControl/TaskControlWithToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 POP KECCAK256 BYTE LOG3 0xFB 0x2A MCOPY 0xF6 POP SSTORE DUP6 AND 0xDB 0xE4 0x2D 0xCD COINBASE XOR SHL 0xC9 GAS 0xDA 0xB2 0xBD ADDMOD EXP PUSH20 0x85ED789264736F6C634300081900330000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 POP KECCAK256 BYTE LOG3 0xFB 0x2A MCOPY 0xF6 POP SSTORE DUP6 AND 0xDB 0xE4 0x2D 0xCD COINBASE XOR SHL 0xC9 GAS 0xDA 0xB2 0xBD ADDMOD EXP PUSH20 0x85ED789264736F6C634300081900330000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/interfaces/IRedEnvelope.sol",
								"contracts/interfaces/ITaskControlWithToken.sol",
								"contracts/interfaces/ItaskCallee.sol",
								"contracts/taskControl/TaskControlWithToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1569,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"IRedEnvelope": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "ClaimPrize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "PrizeDrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "RedEnvelopeClaimable",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "buyTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sendTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "injectTickets",
									"type": "uint256"
								}
							],
							"name": "RedEnvelopeClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxPrizeNum",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketPirce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "ticketToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sendAllowAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "RedEnvelopeCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsGet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsInject",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsPurchase",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "buyTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "claimPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTickets",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPrizeNum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_secret",
									"type": "uint256"
								}
							],
							"name": "createRedEnvelope",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketPirce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTickets",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPrizeNum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_injectAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_injectTicketNum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sendAllowAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_secret",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_autoClaim",
									"type": "bool"
								}
							],
							"name": "createRedEnvelopeDetail",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								}
							],
							"name": "drawPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "endRedEnvelope",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "injectTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "sendTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCurrentRedEnvelopeId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "viewRedEnvelope",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "ticketToken",
											"type": "address"
										},
										{
											"internalType": "enum Status",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPrizeNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "buyTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "sendTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "injectTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "userAddrNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "userTxNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "injectAddrNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "ticketPirce",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "sendAllowAddr",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "secret",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "autoClaim",
											"type": "bool"
										}
									],
									"internalType": "struct RedEnvelope",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "viewRedEnvelopeClaimPrize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "viewRedEnvelopeStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createRedEnvelope(uint256,uint256,uint256,uint256)": {
								"details": "Callable by operator",
								"params": {
									"_endTime": ": endTime of the RedEnvelope，0 = no limit",
									"_maxPrizeNum": ": prize num of the RedEnvelope，0为100%中奖",
									"_maxTickets": ": max ticket of the RedEnvelope，0 = no limit",
									"_secret": ": "
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTickets(uint256,address,uint256)": "c5e7bb33",
							"claimPrize(uint256)": "d7098154",
							"createRedEnvelope(uint256,uint256,uint256,uint256)": "0e9e1262",
							"createRedEnvelopeDetail(address,uint256,uint256,uint256,uint256,address,uint256,address,uint256,bool)": "4a42c8f6",
							"drawPrize(uint256,uint256)": "bce3468d",
							"endRedEnvelope(uint256)": "3834efe1",
							"injectTickets(uint256,uint256)": "559f24bc",
							"sendTickets(uint256,address,uint256)": "5c42e0c5",
							"viewCurrentRedEnvelopeId()": "94456fa4",
							"viewRedEnvelope(uint256)": "8f91cd17",
							"viewRedEnvelopeClaimPrize(uint256,address)": "dc912a81",
							"viewRedEnvelopeStatus(uint256)": "fe5c5976"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"ClaimPrize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"PrizeDrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"RedEnvelopeClaimable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sendTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"injectTickets\",\"type\":\"uint256\"}],\"name\":\"RedEnvelopeClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPrizeNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketPirce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ticketToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendAllowAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"RedEnvelopeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsInject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsPurchase\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"buyTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_secret\",\"type\":\"uint256\"}],\"name\":\"createRedEnvelope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPirce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_injectAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_injectTicketNum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sendAllowAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_secret\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_autoClaim\",\"type\":\"bool\"}],\"name\":\"createRedEnvelopeDetail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"drawPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"endRedEnvelope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"injectTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"sendTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCurrentRedEnvelopeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"viewRedEnvelope\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ticketToken\",\"type\":\"address\"},{\"internalType\":\"enum Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sendTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"injectTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAddrNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userTxNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"injectAddrNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPirce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sendAllowAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"secret\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"internalType\":\"struct RedEnvelope\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"viewRedEnvelopeClaimPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"viewRedEnvelopeStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createRedEnvelope(uint256,uint256,uint256,uint256)\":{\"details\":\"Callable by operator\",\"params\":{\"_endTime\":\": endTime of the RedEnvelope\\uff0c0 = no limit\",\"_maxPrizeNum\":\": prize num of the RedEnvelope\\uff0c0\\u4e3a100%\\u4e2d\\u5956\",\"_maxTickets\":\": max ticket of the RedEnvelope\\uff0c0 = no limit\",\"_secret\":\": \"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createRedEnvelope(uint256,uint256,uint256,uint256)\":{\"notice\":\"create the RedEnvelope\\uff0c\\u91c7\\u7528\\u9ed8\\u8ba4\\u4ee3\\u5e01\\u5730\\u5740\\u53ca\\u914d\\u7f6e\\uff0c\\u9ed8\\u8ba4\\u4e3a\\u4ec5\\u652f\\u6301buyTickets\\u6a21\\u5f0f\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRedEnvelope.sol\":\"IRedEnvelope\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRedEnvelope.sol\":{\"keccak256\":\"0x59aba94fd75d769066dc8dc6db6f2511d424656acca2f8c7f60c66cff2dc1f7e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba2e181d89ef297a064a31f72797ca71e53368e8cda85c59bc834e581daa91d6\",\"dweb:/ipfs/QmXvVjSi3xpbSyEnjtRf69AAReEnzQQh6RzikYJajqK5R2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createRedEnvelope(uint256,uint256,uint256,uint256)": {
								"notice": "create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ITaskControlWithToken.sol": {
				"ITaskControlWithToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fromAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "buy",
									"type": "bool"
								}
							],
							"name": "TicketGet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenMint",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "getTicket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_fromAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "getTicketFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTicket(uint256,address,uint256)": "012c911e",
							"getTicketFrom(uint256,address,address,uint256)": "6ebd327b",
							"mintToken(address,address,bytes)": "d896fc10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"}],\"name\":\"TicketGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenMint\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"getTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"getTicketFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ITaskControlWithToken.sol\":\"ITaskControlWithToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ITaskControlWithToken.sol\":{\"keccak256\":\"0xa300dbb4a946e2796b51b2f5454ea167daa18f5feff236936a79ef4c2cc0c0e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae372eeba68d16832a7f82dbc0bdd321d6d5c39fc9fa21927cdd927480d7a579\",\"dweb:/ipfs/QmWbF24urbpFcSFxANqWuw2Beh7P5pQUZMtzcUjCKM7bLw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"ItaskCallee": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "taskCall",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"taskCall(address,bytes)": "e1ac8d26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"taskCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ItaskCallee.sol\":\"ItaskCallee\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ItaskCallee.sol\":{\"keccak256\":\"0x96f9931598e1fad8b2f9c5a1f560835657f1e1be9481ea2fb8f6d1f1f6dd5596\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://26f94f8a89fbe5944c9061d2e7c6e55b0e08c707b2eaffdc0d32573edee53a8b\",\"dweb:/ipfs/QmXFMoPoHe5H42gHtZLDXLPDZQF2wuF9mBhupXURgzPRAs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/taskControl/TaskControlWithToken.sol": {
				"TaskControlWithToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_redEnvelopeAddr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_allowBuyTicket",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_allowSendTicket",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "TaskAdd",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fromAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "buy",
									"type": "bool"
								}
							],
							"name": "TicketGet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_tasks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allowBuyTicket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allowSendTicket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								}
							],
							"name": "getTask",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "getTicket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_fromAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "getTicketFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redEnvelopeAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "setTask",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/taskControl/TaskControlWithToken.sol\":597:4310  contract TaskControlWithToken is ITaskControlWithToken,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":995:1395  constructor(address _redEnvelopeAddr,bool _allowBuyTicket,bool _allowSendTicket)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":1149:1159  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x9a, 0x1b1bdd1d195c9e551a58dad95d)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd2, 0x151a58dad95d)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x05\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  sstore\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3469:3520   */\n  mstore\n    /* \"#utility.yul\":3442:3460   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":1243:1258  redEnvelopeAddr */\n  0x07\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":1243:1277  redEnvelopeAddr = _redEnvelopeAddr */\n  dup1\n  sload\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":1337:1371  allowSendTicket = _allowSendTicket */\n  swap2\n  iszero\n  iszero\n  shl(0xa8, 0x01)\n  mul\n  not(shl(0xa8, 0xff))\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":1291:1323  allowBuyTicket = _allowBuyTicket */\n  swap4\n  iszero\n  iszero\n  shl(0xa0, 0x01)\n  mul\n  not(sub(shl(0xa8, 0x01), 0x01))\n  swap1\n  swap4\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":1243:1277  redEnvelopeAddr = _redEnvelopeAddr */\n  swap1\n  swap6\n  and\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":1291:1323  allowBuyTicket = _allowBuyTicket */\n  swap5\n  swap1\n  swap5\n  or\n  swap2\n  swap1\n  swap2\n  or\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":1337:1371  allowSendTicket = _allowSendTicket */\n  swap2\n  swap1\n  swap2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":597:4310  contract TaskControlWithToken is ITaskControlWithToken,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:178   */\ntag_22:\n    /* \"#utility.yul\":90:103   */\n  dup1\n  mload\n    /* \"#utility.yul\":139:152   */\n  dup1\n  iszero\n    /* \"#utility.yul\":132:153   */\n  iszero\n    /* \"#utility.yul\":122:154   */\n  dup2\n  eq\n    /* \"#utility.yul\":112:172   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":168:169   */\n  0x00\n    /* \"#utility.yul\":165:166   */\n  dup1\n    /* \"#utility.yul\":158:170   */\n  revert\n    /* \"#utility.yul\":112:172   */\ntag_30:\n    /* \"#utility.yul\":14:178   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":183:631   */\ntag_3:\n    /* \"#utility.yul\":265:271   */\n  0x00\n    /* \"#utility.yul\":273:279   */\n  dup1\n    /* \"#utility.yul\":281:287   */\n  0x00\n    /* \"#utility.yul\":334:336   */\n  0x60\n    /* \"#utility.yul\":322:331   */\n  dup5\n    /* \"#utility.yul\":313:320   */\n  dup7\n    /* \"#utility.yul\":309:332   */\n  sub\n    /* \"#utility.yul\":305:337   */\n  slt\n    /* \"#utility.yul\":302:354   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":350:351   */\n  0x00\n    /* \"#utility.yul\":347:348   */\n  dup1\n    /* \"#utility.yul\":340:352   */\n  revert\n    /* \"#utility.yul\":302:354   */\ntag_32:\n    /* \"#utility.yul\":376:392   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":421:452   */\n  dup2\n  and\n    /* \"#utility.yul\":411:453   */\n  dup2\n  eq\n    /* \"#utility.yul\":401:471   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":467:468   */\n  0x00\n    /* \"#utility.yul\":464:465   */\n  dup1\n    /* \"#utility.yul\":457:469   */\n  revert\n    /* \"#utility.yul\":401:471   */\ntag_33:\n    /* \"#utility.yul\":490:495   */\n  swap3\n  pop\n    /* \"#utility.yul\":514:560   */\n  tag_34\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":541:559   */\n  dup6\n  add\n    /* \"#utility.yul\":514:560   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":504:560   */\n  swap2\n  pop\n    /* \"#utility.yul\":579:625   */\n  tag_35\n    /* \"#utility.yul\":621:623   */\n  0x40\n    /* \"#utility.yul\":610:619   */\n  dup6\n    /* \"#utility.yul\":606:624   */\n  add\n    /* \"#utility.yul\":579:625   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":569:625   */\n  swap1\n  pop\n    /* \"#utility.yul\":183:631   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":636:763   */\ntag_23:\n    /* \"#utility.yul\":697:707   */\n  0x4e487b71\n    /* \"#utility.yul\":692:695   */\n  0xe0\n    /* \"#utility.yul\":688:708   */\n  shl\n    /* \"#utility.yul\":685:686   */\n  0x00\n    /* \"#utility.yul\":678:709   */\n  mstore\n    /* \"#utility.yul\":728:732   */\n  0x41\n    /* \"#utility.yul\":725:726   */\n  0x04\n    /* \"#utility.yul\":718:733   */\n  mstore\n    /* \"#utility.yul\":752:756   */\n  0x24\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":742:757   */\n  revert\n    /* \"#utility.yul\":768:1148   */\ntag_24:\n    /* \"#utility.yul\":847:848   */\n  0x01\n    /* \"#utility.yul\":843:855   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":890:902   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":911:972   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":965:969   */\n  0x7f\n    /* \"#utility.yul\":957:963   */\n  dup3\n    /* \"#utility.yul\":953:970   */\n  and\n    /* \"#utility.yul\":943:970   */\n  swap2\n  pop\n    /* \"#utility.yul\":911:972   */\ntag_38:\n    /* \"#utility.yul\":1018:1020   */\n  0x20\n    /* \"#utility.yul\":1010:1016   */\n  dup3\n    /* \"#utility.yul\":1007:1021   */\n  lt\n    /* \"#utility.yul\":987:1005   */\n  dup2\n    /* \"#utility.yul\":984:1022   */\n  sub\n    /* \"#utility.yul\":981:1142   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1064:1074   */\n  0x4e487b71\n    /* \"#utility.yul\":1059:1062   */\n  0xe0\n    /* \"#utility.yul\":1055:1075   */\n  shl\n    /* \"#utility.yul\":1052:1053   */\n  0x00\n    /* \"#utility.yul\":1045:1076   */\n  mstore\n    /* \"#utility.yul\":1099:1103   */\n  0x22\n    /* \"#utility.yul\":1096:1097   */\n  0x04\n    /* \"#utility.yul\":1089:1104   */\n  mstore\n    /* \"#utility.yul\":1127:1131   */\n  0x24\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1117:1132   */\n  revert\n    /* \"#utility.yul\":981:1142   */\ntag_39:\n  pop\n    /* \"#utility.yul\":768:1148   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1279:1797   */\ntag_26:\n    /* \"#utility.yul\":1381:1383   */\n  0x1f\n    /* \"#utility.yul\":1376:1379   */\n  dup3\n    /* \"#utility.yul\":1373:1384   */\n  gt\n    /* \"#utility.yul\":1370:1791   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1417:1422   */\n  dup1\n    /* \"#utility.yul\":1414:1415   */\n  0x00\n    /* \"#utility.yul\":1407:1423   */\n  mstore\n    /* \"#utility.yul\":1461:1465   */\n  0x20\n    /* \"#utility.yul\":1458:1459   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  keccak256\n    /* \"#utility.yul\":1531:1533   */\n  0x1f\n    /* \"#utility.yul\":1519:1529   */\n  dup5\n    /* \"#utility.yul\":1515:1534   */\n  add\n    /* \"#utility.yul\":1512:1513   */\n  0x05\n    /* \"#utility.yul\":1508:1535   */\n  shr\n    /* \"#utility.yul\":1502:1506   */\n  dup2\n    /* \"#utility.yul\":1498:1536   */\n  add\n    /* \"#utility.yul\":1567:1571   */\n  0x20\n    /* \"#utility.yul\":1555:1565   */\n  dup6\n    /* \"#utility.yul\":1552:1572   */\n  lt\n    /* \"#utility.yul\":1549:1596   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":1590:1594   */\n  dup1\n    /* \"#utility.yul\":1549:1596   */\ntag_43:\n    /* \"#utility.yul\":1645:1647   */\n  0x1f\n    /* \"#utility.yul\":1640:1643   */\n  dup5\n    /* \"#utility.yul\":1636:1648   */\n  add\n    /* \"#utility.yul\":1633:1634   */\n  0x05\n    /* \"#utility.yul\":1629:1649   */\n  shr\n    /* \"#utility.yul\":1623:1627   */\n  dup3\n    /* \"#utility.yul\":1619:1650   */\n  add\n    /* \"#utility.yul\":1609:1650   */\n  swap2\n  pop\n    /* \"#utility.yul\":1700:1781   */\ntag_44:\n    /* \"#utility.yul\":1718:1720   */\n  dup2\n    /* \"#utility.yul\":1711:1716   */\n  dup2\n    /* \"#utility.yul\":1708:1721   */\n  lt\n    /* \"#utility.yul\":1700:1781   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1777:1778   */\n  0x00\n    /* \"#utility.yul\":1763:1779   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1744:1745   */\n  0x01\n    /* \"#utility.yul\":1733:1746   */\n  add\n    /* \"#utility.yul\":1700:1781   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":1704:1707   */\n  pop\n  pop\n    /* \"#utility.yul\":1370:1791   */\ntag_42:\n    /* \"#utility.yul\":1279:1797   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1973:3318   */\ntag_10:\n    /* \"#utility.yul\":2093:2103   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2115:2145   */\n  dup2\n  gt\n    /* \"#utility.yul\":2112:2168   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2148:2166   */\n  tag_50\n  tag_23\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2177:2274   */\n  tag_51\n    /* \"#utility.yul\":2267:2273   */\n  dup2\n    /* \"#utility.yul\":2227:2265   */\n  tag_52\n    /* \"#utility.yul\":2259:2263   */\n  dup5\n    /* \"#utility.yul\":2253:2264   */\n  sload\n    /* \"#utility.yul\":2227:2265   */\n  tag_24\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2221:2225   */\n  dup5\n    /* \"#utility.yul\":2177:2274   */\n  tag_26\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2329:2333   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2386:2388   */\n  0x1f\n    /* \"#utility.yul\":2375:2389   */\n  dup4\n  gt\n    /* \"#utility.yul\":2403:2404   */\n  0x01\n    /* \"#utility.yul\":2398:3061   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3105:3106   */\n  0x00\n    /* \"#utility.yul\":3122:3128   */\n  dup5\n    /* \"#utility.yul\":3119:3208   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":3174:3193   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3168:3194   */\n  mload\n    /* \"#utility.yul\":3119:3208   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":1930:1931   */\n  0x03\n    /* \"#utility.yul\":1926:1937   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1922:1946   */\n  shr\n    /* \"#utility.yul\":1918:1947   */\n  not\n    /* \"#utility.yul\":1908:1948   */\n  and\n    /* \"#utility.yul\":1954:1955   */\n  0x01\n    /* \"#utility.yul\":1950:1961   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1905:1962   */\n  or\n    /* \"#utility.yul\":3221:3302   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2368:3312   */\n  jump(tag_53)\n    /* \"#utility.yul\":2398:3061   */\ntag_54:\n    /* \"#utility.yul\":1226:1227   */\n  0x00\n    /* \"#utility.yul\":1219:1233   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1263:1267   */\n  0x20\n    /* \"#utility.yul\":1250:1268   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2434:2454   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2552:2788   */\ntag_58:\n    /* \"#utility.yul\":2566:2573   */\n  dup3\n    /* \"#utility.yul\":2563:2564   */\n  dup2\n    /* \"#utility.yul\":2560:2574   */\n  lt\n    /* \"#utility.yul\":2552:2788   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2655:2674   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2649:2675   */\n  mload\n    /* \"#utility.yul\":2634:2676   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2747:2774   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2715:2716   */\n  0x01\n    /* \"#utility.yul\":2703:2717   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2582:2601   */\n  dup5\n  add\n    /* \"#utility.yul\":2552:2788   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":2556:2559   */\n  pop\n    /* \"#utility.yul\":2816:2822   */\n  dup6\n    /* \"#utility.yul\":2807:2814   */\n  dup3\n    /* \"#utility.yul\":2804:2823   */\n  lt\n    /* \"#utility.yul\":2801:3002   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2877:2896   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2871:2897   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2960:2961   */\n  0x03\n    /* \"#utility.yul\":2956:2970   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2972:2975   */\n  0xf8\n    /* \"#utility.yul\":2952:2976   */\n  and\n    /* \"#utility.yul\":2948:2985   */\n  shr\n    /* \"#utility.yul\":2944:2986   */\n  not\n    /* \"#utility.yul\":2929:2987   */\n  and\n    /* \"#utility.yul\":2914:2988   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2801:3002   */\ntag_61:\n  pop\n  pop\n    /* \"#utility.yul\":3048:3049   */\n  0x01\n    /* \"#utility.yul\":3039:3045   */\n  dup5\n    /* \"#utility.yul\":3036:3037   */\n  0x01\n    /* \"#utility.yul\":3032:3046   */\n  shl\n    /* \"#utility.yul\":3028:3050   */\n  add\n    /* \"#utility.yul\":3022:3026   */\n  dup6\n    /* \"#utility.yul\":3015:3051   */\n  sstore\n    /* \"#utility.yul\":2368:3312   */\ntag_53:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1973:3318   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3323:3526   */\ntag_28:\n    /* \"contracts/taskControl/TaskControlWithToken.sol\":597:4310  contract TaskControlWithToken is ITaskControlWithToken,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":597:4310  contract TaskControlWithToken is ITaskControlWithToken,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc7ff23bb\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xc7ff23bb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd896fc10\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd9caed12\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe405663f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb4309a9c\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x18160ddd\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6ebd327b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x012c911e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x019f232a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06e2a29a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x082921a5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3328:3700  function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external virtual override {... */\n    tag_3:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1774:1890  function getTask(address _taskAddr)external view  returns(uint256) {... */\n    tag_4:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1862:1879  _tasks[_taskAddr] */\n      and\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1832:1839  uint256 */\n      0x00\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1862:1879  _tasks[_taskAddr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1862:1868  _tasks */\n      0x08\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1862:1879  _tasks[_taskAddr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1774:1890  function getTask(address _taskAddr)external view  returns(uint256) {... */\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":936:961   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":924:926   */\n      0x20\n        /* \"#utility.yul\":909:927   */\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1774:1890  function getTask(address _taskAddr)external view  returns(uint256) {... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":820:847  bool public allowSendTicket */\n    tag_5:\n      sload(0x07)\n      tag_40\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1137:1151   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1130:1152   */\n      iszero\n        /* \"#utility.yul\":1112:1153   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1100:1102   */\n      0x20\n        /* \"#utility.yul\":1085:1103   */\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":820:847  bool public allowSendTicket */\n      tag_38\n        /* \"#utility.yul\":972:1159   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1598:1765  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n    tag_7:\n      tag_30\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_40\n      tag_53\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_34)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_40\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":2510:2546   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2498:2500   */\n      0x20\n        /* \"#utility.yul\":2483:2501   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_38\n        /* \"#utility.yul\":2368:2552   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_12:\n      tag_30\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3709:4116  function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external virtual override {... */\n    tag_13:\n      tag_30\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_34\n      tag_77\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_30\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_16:\n      tag_30\n      tag_83\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_85:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3436:3468   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3418:3469   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3406:3408   */\n      0x20\n        /* \"#utility.yul\":3391:3409   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_38\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_44\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_40\n      tag_93\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":784:810  bool public allowBuyTicket */\n    tag_20:\n      sload(0x07)\n      tag_40\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":744:774  address public redEnvelopeAddr */\n    tag_21:\n      sload(0x07)\n      tag_85\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1901:2392  function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data) external virtual override nonReentrant{... */\n    tag_22:\n      tag_30\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4158:4304  function withdraw(address _token,address _to,uint256 _value)external virtual onlyOwner{... */\n    tag_23:\n      tag_30\n      tag_107\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_34\n      tag_110\n      calldatasize\n      0x04\n      tag_111\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":858:899  mapping(address => uint256) public _tasks */\n    tag_25:\n      tag_34\n      tag_115\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_115:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_30\n      tag_119\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3328:3700  function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external virtual override {... */\n    tag_33:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3446:3460  uint256 amount */\n      0x00\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3480:3496  10 ** decimals() */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3480:3482  10 */\n      0x0a\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3480:3496  10 ** decimals() */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3463:3496  _ticketNumbers * 10 ** decimals() */\n      tag_125\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3463:3477  _ticketNumbers */\n      dup4\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3463:3496  _ticketNumbers * 10 ** decimals() */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3446:3496  uint256 amount = _ticketNumbers * 10 ** decimals() */\n      swap1\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3510:3522  burn(amount) */\n      tag_127\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3515:3521  amount */\n      dup2\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3510:3514  burn */\n      tag_71\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3510:3522  burn(amount) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3536:3544  bool buy */\n      0x00\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3547:3593  _getTicket(_id,_receiveAddress,_ticketNumbers) */\n      tag_128\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3558:3561  _id */\n      dup6\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3562:3577  _receiveAddress */\n      dup6\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3578:3592  _ticketNumbers */\n      dup6\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3547:3557  _getTicket */\n      tag_129\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3547:3593  _getTicket(_id,_receiveAddress,_ticketNumbers) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3613:3689  TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6708:6733   */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3635:3645  msg.sender */\n      caller\n        /* \"#utility.yul\":6802:6804   */\n      0x20\n        /* \"#utility.yul\":6787:6805   */\n      dup3\n      add\n        /* \"#utility.yul\":6780:6823   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6859:6874   */\n      dup8\n      and\n        /* \"#utility.yul\":6839:6857   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":6832:6875   */\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x60\n        /* \"#utility.yul\":6891:6909   */\n      dup2\n      add\n        /* \"#utility.yul\":6884:6918   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":6949:6952   */\n      0x80\n        /* \"#utility.yul\":6934:6953   */\n      dup2\n      add\n        /* \"#utility.yul\":6927:6962   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":7006:7020   */\n      dup3\n      iszero\n        /* \"#utility.yul\":6999:7021   */\n      iszero\n        /* \"#utility.yul\":6760:6763   */\n      0xa0\n        /* \"#utility.yul\":6978:6997   */\n      dup3\n      add\n        /* \"#utility.yul\":6971:7022   */\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3613:3689  TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy) */\n      swap1\n      mload\n        /* \"#utility.yul\":7006:7020   */\n      swap2\n      swap3\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3613:3689  TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy) */\n      0xebc14ddbdd1e1ebc5a287d8957bd1ca84faef18f192f27829b8459fd15f5195d\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6695:6698   */\n      0xc0\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3613:3689  TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy) */\n      add\n      swap1\n      log1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3432:3700  {... */\n      pop\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3328:3700  function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_135\n      jump\t// in\n    tag_136:\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1598:1765  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1681:1698  _tasks[_taskAddr] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1681:1687  _tasks */\n      0x08\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1681:1698  _tasks[_taskAddr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1681:1708  _tasks[_taskAddr] = _weight */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1727:1754  TaskAdd(_taskAddr, _weight) */\n      dup2\n      mload\n        /* \"#utility.yul\":7592:7643   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":7659:7677   */\n      dup3\n      add\n        /* \"#utility.yul\":7652:7686   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1727:1754  TaskAdd(_taskAddr, _weight) */\n      0xd7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8\n      swap2\n        /* \"#utility.yul\":7565:7583   */\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1727:1754  TaskAdd(_taskAddr, _weight) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1598:1765  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_146:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_156:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3709:4116  function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external virtual override {... */\n    tag_75:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3852:3866  uint256 amount */\n      0x00\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3886:3902  10 ** decimals() */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3886:3888  10 */\n      0x0a\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3886:3902  10 ** decimals() */\n      tag_124\n      jump\t// in\n    tag_165:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3869:3902  _ticketNumbers * 10 ** decimals() */\n      tag_166\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3869:3883  _ticketNumbers */\n      dup4\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3869:3902  _ticketNumbers * 10 ** decimals() */\n      tag_126\n      jump\t// in\n    tag_166:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3852:3902  uint256 amount = _ticketNumbers * 10 ** decimals() */\n      swap1\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3916:3945  burnFrom(_fromAddress,amount) */\n      tag_167\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3925:3937  _fromAddress */\n      dup5\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3938:3944  amount */\n      dup3\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3916:3924  burnFrom */\n      tag_84\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3916:3945  burnFrom(_fromAddress,amount) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3959:3967  bool buy */\n      0x00\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3970:4016  _getTicket(_id,_receiveAddress,_ticketNumbers) */\n      tag_168\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3981:3984  _id */\n      dup7\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3985:4000  _receiveAddress */\n      dup6\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4001:4015  _ticketNumbers */\n      dup6\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3970:3980  _getTicket */\n      tag_129\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3970:4016  _getTicket(_id,_receiveAddress,_ticketNumbers) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4036:4105  TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6708:6733   */\n      dup9\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6807:6822   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":6802:6804   */\n      0x20\n        /* \"#utility.yul\":6787:6805   */\n      dup4\n      add\n        /* \"#utility.yul\":6780:6823   */\n      mstore\n        /* \"#utility.yul\":6859:6874   */\n      dup8\n      and\n        /* \"#utility.yul\":6839:6857   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":6832:6875   */\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x60\n        /* \"#utility.yul\":6891:6909   */\n      dup2\n      add\n        /* \"#utility.yul\":6884:6918   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":6949:6952   */\n      0x80\n        /* \"#utility.yul\":6934:6953   */\n      dup2\n      add\n        /* \"#utility.yul\":6927:6962   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":7006:7020   */\n      dup3\n      iszero\n        /* \"#utility.yul\":6999:7021   */\n      iszero\n        /* \"#utility.yul\":6760:6763   */\n      0xa0\n        /* \"#utility.yul\":6978:6997   */\n      dup3\n      add\n        /* \"#utility.yul\":6971:7022   */\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4036:4105  TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy) */\n      swap1\n      mload\n        /* \"#utility.yul\":7006:7020   */\n      swap2\n      swap3\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4036:4105  TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy) */\n      0xebc14ddbdd1e1ebc5a287d8957bd1ca84faef18f192f27829b8459fd15f5195d\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6695:6698   */\n      0xc0\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4036:4105  TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy) */\n      add\n      swap1\n      log1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3838:4116  {... */\n      pop\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3709:4116  function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1901:2392  function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data) external virtual override nonReentrant{... */\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_191\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_192\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2044:2061  _tasks[_taskAddr] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2044:2050  _tasks */\n      0x08\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2044:2061  _tasks[_taskAddr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2044:2066  _tasks[_taskAddr] != 0 */\n      swap1\n      sub\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2036:2084  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7899:7901   */\n      0x20\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2036:2084  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7881:7902   */\n      mstore\n        /* \"#utility.yul\":7938:7940   */\n      0x0e\n        /* \"#utility.yul\":7918:7936   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7911:7941   */\n      mstore\n      shl(0x90, 0x6e6f20736574206173207461736b)\n        /* \"#utility.yul\":7957:7975   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7950:7994   */\n      mstore\n        /* \"#utility.yul\":8011:8029   */\n      0x64\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2036:2084  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2238:2255  _tasks[_taskAddr] */\n      dup5\n      and\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2160:2174  uint256 amount */\n      0x00\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2238:2255  _tasks[_taskAddr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2238:2244  _tasks */\n      0x08\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2238:2255  _tasks[_taskAddr] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2177:2235  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      swap1\n      mload\n      shl(0xe1, 0x70d64693)\n      dup2\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2160:2174  uint256 amount */\n      swap2\n      swap3\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2238:2255  _tasks[_taskAddr] */\n      swap1\n      swap2\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2177:2208  ItaskCallee(_taskAddr).taskCall */\n      0xe1ac8d26\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2177:2235  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      tag_197\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2217:2227  msg.sender */\n      caller\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2229:2234  _data */\n      dup9\n      swap1\n      dup9\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2177:2235  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      0x04\n      add\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2177:2255  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr] */\n      tag_203\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2160:2255  uint256 amount = ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr] */\n      swap1\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2269:2299  _mint(_receiveAddress, amount) */\n      tag_204\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2275:2290  _receiveAddress */\n      dup5\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2292:2298  amount */\n      dup3\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2269:2274  _mint */\n      tag_205\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2269:2299  _mint(_receiveAddress, amount) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2318:2381  TokenMint(address(msg.sender),_taskAddr,_receiveAddress,amount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2336:2346  msg.sender */\n      caller\n        /* \"#utility.yul\":8988:9022   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9058:9073   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":9053:9055   */\n      0x20\n        /* \"#utility.yul\":9038:9056   */\n      dup4\n      add\n        /* \"#utility.yul\":9031:9074   */\n      mstore\n        /* \"#utility.yul\":9110:9125   */\n      dup7\n      and\n        /* \"#utility.yul\":9090:9108   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":9083:9126   */\n      mstore\n        /* \"#utility.yul\":9157:9159   */\n      0x60\n        /* \"#utility.yul\":9142:9160   */\n      dup2\n      add\n        /* \"#utility.yul\":9135:9169   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2318:2381  TokenMint(address(msg.sender),_taskAddr,_receiveAddress,amount) */\n      swap1\n      mload\n      0x4d914fbdb28a885441bb0f6e06bb01dfdfe8a8b6902391853b46eb747ae136ef\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8937:8940   */\n      0x80\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2318:2381  TokenMint(address(msg.sender),_taskAddr,_receiveAddress,amount) */\n      add\n      swap1\n      log1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2022:2392  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_208\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x05\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n    tag_208:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":1901:2392  function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data) external virtual override nonReentrant{... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4158:4304  function withdraw(address _token,address _to,uint256 _value)external virtual onlyOwner{... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4258:4293  IERC20(_token).transfer(_to,_value) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7610:7642   */\n      dup4\n      dup2\n      and\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4258:4293  IERC20(_token).transfer(_to,_value) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7592:7643   */\n      mstore\n        /* \"#utility.yul\":7659:7677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7652:7686   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4258:4281  IERC20(_token).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7565:7583   */\n      0x44\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":4258:4293  IERC20(_token).transfer(_to,_value) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_195\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2402:3318  function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){... */\n    tag_129:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2592:2607  redEnvelopeAddr */\n      sload(0x07)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2579:2629  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      mload(0x40)\n      shl(0xe0, 0x8f91cd17)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":936:961   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2498:2502  bool */\n      0x00\n      swap2\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2528:2532  true */\n      0x01\n      swap2\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2498:2502  bool */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2592:2607  redEnvelopeAddr */\n      and\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2579:2624  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope */\n      0x8f91cd17\n      swap1\n        /* \"#utility.yul\":909:927   */\n      0x24\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2579:2629  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      0x01e0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2647:2672  redEnvelope.sendAllowAddr */\n      0x0180\n      dup2\n      add\n      mload\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2546:2629  RedEnvelope memory redEnvelope = IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2647:2686  redEnvelope.sendAllowAddr == address(0) */\n      and\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2643:3284  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n      tag_231\n      jumpi\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2719:2733  allowBuyTicket */\n      sload(0x07)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2719:2741  allowBuyTicket == true */\n      iszero\n      iszero\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2737:2741  true */\n      0x01\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2719:2741  allowBuyTicket == true */\n      eq\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2711:2765  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11764:11766   */\n      0x20\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2711:2765  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11746:11767   */\n      mstore\n        /* \"#utility.yul\":11803:11805   */\n      0x13\n        /* \"#utility.yul\":11783:11801   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11776:11806   */\n      mstore\n      shl(0x68, 0x627579207469636b6574206e6f20616c6c6f77)\n        /* \"#utility.yul\":11822:11840   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11815:11864   */\n      mstore\n        /* \"#utility.yul\":11881:11899   */\n      0x64\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2711:2765  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      tag_195\n        /* \"#utility.yul\":11562:11905   */\n      jump\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2711:2765  require(allowBuyTicket == true, \"buy ticket no allow\") */\n    tag_232:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2783:2804  uint256 approveAmount */\n      0x00\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2833:2847  _ticketNumbers */\n      dup5\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2807:2818  redEnvelope */\n      dup3\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2807:2830  redEnvelope.ticketPirce */\n      0x0160\n      add\n      mload\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2807:2847  redEnvelope.ticketPirce * _ticketNumbers */\n      tag_235\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_235:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2872:2895  redEnvelope.ticketToken */\n      dup3\n      mload\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2905:2920  redEnvelopeAddr */\n      sload(0x07)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2865:2935  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2905:2920  redEnvelopeAddr */\n      swap2\n      dup3\n      and\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2865:2935  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7592:7643   */\n      mstore\n        /* \"#utility.yul\":7659:7677   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7652:7686   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2783:2847  uint256 approveAmount = redEnvelope.ticketPirce * _ticketNumbers */\n      swap3\n      swap4\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2865:2904  IERC20(redEnvelope.ticketToken).approve */\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":7565:7583   */\n      0x44\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2865:2935  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_239:\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2973:2988  redEnvelopeAddr */\n      sload(0x07)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2960:3036  IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers) */\n      mload(0x40)\n      shl(0xe0, 0xc5e7bb33)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":12112:12137   */\n      dup10\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12173:12205   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":12153:12171   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12146:12206   */\n      mstore\n        /* \"#utility.yul\":12222:12240   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12215:12249   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2973:2988  redEnvelopeAddr */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2960:3000  IRedEnvelope(redEnvelopeAddr).buyTickets */\n      0xc5e7bb33\n      swap1\n        /* \"#utility.yul\":12085:12103   */\n      0x64\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2960:3036  IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_242\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_242:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2687:3051  {      ... */\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2643:3284  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n      jump(tag_245)\n    tag_231:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3081:3096  allowSendTicket */\n      sload(0x07)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3081:3104  allowSendTicket == true */\n      iszero\n      iszero\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3100:3104  true */\n      0x01\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3081:3104  allowSendTicket == true */\n      eq\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3073:3129  require(allowSendTicket == true, \"send ticket no allow\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12462:12464   */\n      0x20\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3073:3129  require(allowSendTicket == true, \"send ticket no allow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12444:12465   */\n      mstore\n        /* \"#utility.yul\":12501:12503   */\n      0x14\n        /* \"#utility.yul\":12481:12499   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12474:12504   */\n      mstore\n      shl(0x60, 0x73656e64207469636b6574206e6f20616c6c6f77)\n        /* \"#utility.yul\":12520:12538   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12513:12563   */\n      mstore\n        /* \"#utility.yul\":12580:12598   */\n      0x64\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3073:3129  require(allowSendTicket == true, \"send ticket no allow\") */\n      tag_195\n        /* \"#utility.yul\":12260:12604   */\n      jump\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3073:3129  require(allowSendTicket == true, \"send ticket no allow\") */\n    tag_246:\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3176:3191  redEnvelopeAddr */\n      sload(0x07)\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3163:3240  IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers) */\n      mload(0x40)\n      shl(0xe0, 0x5c42e0c5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":12112:12137   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12173:12205   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":12153:12171   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12146:12206   */\n      mstore\n        /* \"#utility.yul\":12222:12240   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12215:12249   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3176:3191  redEnvelopeAddr */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3163:3204  IRedEnvelope(redEnvelopeAddr).sendTickets */\n      0x5c42e0c5\n      swap1\n        /* \"#utility.yul\":12085:12103   */\n      0x64\n      add\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3163:3240  IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3264:3269  false */\n      0x00\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3258:3269  buy = false */\n      swap2\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2643:3284  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n    tag_245:\n      pop\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":3304:3307  buy */\n      swap5\n        /* \"contracts/taskControl/TaskControlWithToken.sol\":2402:3318  function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_195\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12829:12861   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12811:12862   */\n      mstore\n        /* \"#utility.yul\":12878:12896   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12871:12905   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":12921:12939   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12914:12948   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":12784:12802   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_195\n        /* \"#utility.yul\":12609:12954   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_195\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_195\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_195\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x05\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_195\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_195\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_195\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_295\n      swap2\n        /* \"#utility.yul\":936:961   */\n      dup2\n      mstore\n        /* \"#utility.yul\":924:926   */\n      0x20\n        /* \"#utility.yul\":909:927   */\n      add\n      swap1\n        /* \"#utility.yul\":790:967   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_298\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_300\n      swap1\n      pop\n      jump\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12829:12861   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12811:12862   */\n      mstore\n        /* \"#utility.yul\":12878:12896   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12871:12905   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":12921:12939   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12914:12948   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":12784:12802   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_195\n        /* \"#utility.yul\":12609:12954   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_301:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_304)\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_305\n      swap2\n        /* \"#utility.yul\":936:961   */\n      dup2\n      mstore\n        /* \"#utility.yul\":924:926   */\n      0x20\n        /* \"#utility.yul\":909:927   */\n      add\n      swap1\n        /* \"#utility.yul\":790:967   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:533   */\n    tag_32:\n        /* \"#utility.yul\":227:233   */\n      0x00\n        /* \"#utility.yul\":235:241   */\n      dup1\n        /* \"#utility.yul\":243:249   */\n      0x00\n        /* \"#utility.yul\":296:298   */\n      0x60\n        /* \"#utility.yul\":284:293   */\n      dup5\n        /* \"#utility.yul\":275:282   */\n      dup7\n        /* \"#utility.yul\":271:294   */\n      sub\n        /* \"#utility.yul\":267:299   */\n      slt\n        /* \"#utility.yul\":264:316   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":312:313   */\n      0x00\n        /* \"#utility.yul\":309:310   */\n      dup1\n        /* \"#utility.yul\":302:314   */\n      revert\n        /* \"#utility.yul\":264:316   */\n    tag_318:\n        /* \"#utility.yul\":348:357   */\n      dup4\n        /* \"#utility.yul\":335:358   */\n      calldataload\n        /* \"#utility.yul\":325:358   */\n      swap3\n      pop\n        /* \"#utility.yul\":408:410   */\n      0x20\n        /* \"#utility.yul\":397:406   */\n      dup5\n        /* \"#utility.yul\":393:411   */\n      add\n        /* \"#utility.yul\":380:412   */\n      calldataload\n        /* \"#utility.yul\":421:452   */\n      tag_319\n        /* \"#utility.yul\":446:451   */\n      dup2\n        /* \"#utility.yul\":421:452   */\n      tag_306\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":150:533   */\n      swap3\n      swap6\n        /* \"#utility.yul\":471:476   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":523:525   */\n      0x40\n        /* \"#utility.yul\":508:526   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":495:527   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":150:533   */\n      jump\t// out\n        /* \"#utility.yul\":538:785   */\n    tag_36:\n        /* \"#utility.yul\":597:603   */\n      0x00\n        /* \"#utility.yul\":650:652   */\n      0x20\n        /* \"#utility.yul\":638:647   */\n      dup3\n        /* \"#utility.yul\":629:636   */\n      dup5\n        /* \"#utility.yul\":625:648   */\n      sub\n        /* \"#utility.yul\":621:653   */\n      slt\n        /* \"#utility.yul\":618:670   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":666:667   */\n      0x00\n        /* \"#utility.yul\":663:664   */\n      dup1\n        /* \"#utility.yul\":656:668   */\n      revert\n        /* \"#utility.yul\":618:670   */\n    tag_321:\n        /* \"#utility.yul\":705:714   */\n      dup2\n        /* \"#utility.yul\":692:715   */\n      calldataload\n        /* \"#utility.yul\":724:755   */\n      tag_322\n        /* \"#utility.yul\":749:754   */\n      dup2\n        /* \"#utility.yul\":724:755   */\n      tag_306\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":774:779   */\n      swap4\n        /* \"#utility.yul\":538:785   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1164:1582   */\n    tag_47:\n        /* \"#utility.yul\":1313:1315   */\n      0x20\n        /* \"#utility.yul\":1302:1311   */\n      dup2\n        /* \"#utility.yul\":1295:1316   */\n      mstore\n        /* \"#utility.yul\":1276:1280   */\n      0x00\n        /* \"#utility.yul\":1345:1351   */\n      dup3\n        /* \"#utility.yul\":1339:1352   */\n      mload\n        /* \"#utility.yul\":1388:1394   */\n      dup1\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup5\n        /* \"#utility.yul\":1368:1386   */\n      add\n        /* \"#utility.yul\":1361:1395   */\n      mstore\n        /* \"#utility.yul\":1447:1453   */\n      dup1\n        /* \"#utility.yul\":1442:1444   */\n      0x20\n        /* \"#utility.yul\":1434:1440   */\n      dup6\n        /* \"#utility.yul\":1430:1445   */\n      add\n        /* \"#utility.yul\":1425:1427   */\n      0x40\n        /* \"#utility.yul\":1414:1423   */\n      dup6\n        /* \"#utility.yul\":1410:1428   */\n      add\n        /* \"#utility.yul\":1404:1454   */\n      mcopy\n        /* \"#utility.yul\":1503:1504   */\n      0x00\n        /* \"#utility.yul\":1498:1500   */\n      0x40\n        /* \"#utility.yul\":1489:1495   */\n      dup3\n        /* \"#utility.yul\":1478:1487   */\n      dup6\n        /* \"#utility.yul\":1474:1496   */\n      add\n        /* \"#utility.yul\":1470:1501   */\n      add\n        /* \"#utility.yul\":1463:1505   */\n      mstore\n        /* \"#utility.yul\":1573:1575   */\n      0x40\n        /* \"#utility.yul\":1566:1568   */\n      0x1f\n        /* \"#utility.yul\":1562:1569   */\n      not\n        /* \"#utility.yul\":1557:1559   */\n      0x1f\n        /* \"#utility.yul\":1549:1555   */\n      dup4\n        /* \"#utility.yul\":1545:1560   */\n      add\n        /* \"#utility.yul\":1541:1570   */\n      and\n        /* \"#utility.yul\":1530:1539   */\n      dup5\n        /* \"#utility.yul\":1526:1571   */\n      add\n        /* \"#utility.yul\":1522:1576   */\n      add\n        /* \"#utility.yul\":1514:1576   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1164:1582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1587:1902   */\n    tag_50:\n        /* \"#utility.yul\":1655:1661   */\n      0x00\n        /* \"#utility.yul\":1663:1669   */\n      dup1\n        /* \"#utility.yul\":1716:1718   */\n      0x40\n        /* \"#utility.yul\":1704:1713   */\n      dup4\n        /* \"#utility.yul\":1695:1702   */\n      dup6\n        /* \"#utility.yul\":1691:1714   */\n      sub\n        /* \"#utility.yul\":1687:1719   */\n      slt\n        /* \"#utility.yul\":1684:1736   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":1732:1733   */\n      0x00\n        /* \"#utility.yul\":1729:1730   */\n      dup1\n        /* \"#utility.yul\":1722:1734   */\n      revert\n        /* \"#utility.yul\":1684:1736   */\n    tag_327:\n        /* \"#utility.yul\":1771:1780   */\n      dup3\n        /* \"#utility.yul\":1758:1781   */\n      calldataload\n        /* \"#utility.yul\":1790:1821   */\n      tag_328\n        /* \"#utility.yul\":1815:1820   */\n      dup2\n        /* \"#utility.yul\":1790:1821   */\n      tag_306\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1840:1845   */\n      swap5\n        /* \"#utility.yul\":1892:1894   */\n      0x20\n        /* \"#utility.yul\":1877:1895   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1864:1896   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1587:1902   */\n      jump\t// out\n        /* \"#utility.yul\":1907:2363   */\n    tag_61:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":1992:1998   */\n      dup1\n        /* \"#utility.yul\":2000:2006   */\n      0x00\n        /* \"#utility.yul\":2053:2055   */\n      0x60\n        /* \"#utility.yul\":2041:2050   */\n      dup5\n        /* \"#utility.yul\":2032:2039   */\n      dup7\n        /* \"#utility.yul\":2028:2051   */\n      sub\n        /* \"#utility.yul\":2024:2056   */\n      slt\n        /* \"#utility.yul\":2021:2073   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":2069:2070   */\n      0x00\n        /* \"#utility.yul\":2066:2067   */\n      dup1\n        /* \"#utility.yul\":2059:2071   */\n      revert\n        /* \"#utility.yul\":2021:2073   */\n    tag_330:\n        /* \"#utility.yul\":2108:2117   */\n      dup4\n        /* \"#utility.yul\":2095:2118   */\n      calldataload\n        /* \"#utility.yul\":2127:2158   */\n      tag_331\n        /* \"#utility.yul\":2152:2157   */\n      dup2\n        /* \"#utility.yul\":2127:2158   */\n      tag_306\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2177:2182   */\n      swap3\n      pop\n        /* \"#utility.yul\":2234:2236   */\n      0x20\n        /* \"#utility.yul\":2219:2237   */\n      dup5\n      add\n        /* \"#utility.yul\":2206:2238   */\n      calldataload\n        /* \"#utility.yul\":2247:2280   */\n      tag_319\n        /* \"#utility.yul\":2206:2238   */\n      dup2\n        /* \"#utility.yul\":2247:2280   */\n      tag_306\n      jump\t// in\n        /* \"#utility.yul\":2557:2737   */\n    tag_70:\n        /* \"#utility.yul\":2616:2622   */\n      0x00\n        /* \"#utility.yul\":2669:2671   */\n      0x20\n        /* \"#utility.yul\":2657:2666   */\n      dup3\n        /* \"#utility.yul\":2648:2655   */\n      dup5\n        /* \"#utility.yul\":2644:2667   */\n      sub\n        /* \"#utility.yul\":2640:2672   */\n      slt\n        /* \"#utility.yul\":2637:2689   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":2685:2686   */\n      0x00\n        /* \"#utility.yul\":2682:2683   */\n      dup1\n        /* \"#utility.yul\":2675:2687   */\n      revert\n        /* \"#utility.yul\":2637:2689   */\n    tag_335:\n      pop\n        /* \"#utility.yul\":2708:2731   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2557:2737   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2742:3267   */\n    tag_74:\n        /* \"#utility.yul\":2828:2834   */\n      0x00\n        /* \"#utility.yul\":2836:2842   */\n      dup1\n        /* \"#utility.yul\":2844:2850   */\n      0x00\n        /* \"#utility.yul\":2852:2858   */\n      dup1\n        /* \"#utility.yul\":2905:2908   */\n      0x80\n        /* \"#utility.yul\":2893:2902   */\n      dup6\n        /* \"#utility.yul\":2884:2891   */\n      dup8\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2909   */\n      slt\n        /* \"#utility.yul\":2873:2926   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2922:2923   */\n      0x00\n        /* \"#utility.yul\":2919:2920   */\n      dup1\n        /* \"#utility.yul\":2912:2924   */\n      revert\n        /* \"#utility.yul\":2873:2926   */\n    tag_337:\n        /* \"#utility.yul\":2958:2967   */\n      dup5\n        /* \"#utility.yul\":2945:2968   */\n      calldataload\n        /* \"#utility.yul\":2935:2968   */\n      swap4\n      pop\n        /* \"#utility.yul\":3018:3020   */\n      0x20\n        /* \"#utility.yul\":3007:3016   */\n      dup6\n        /* \"#utility.yul\":3003:3021   */\n      add\n        /* \"#utility.yul\":2990:3022   */\n      calldataload\n        /* \"#utility.yul\":3031:3062   */\n      tag_338\n        /* \"#utility.yul\":3056:3061   */\n      dup2\n        /* \"#utility.yul\":3031:3062   */\n      tag_306\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3081:3086   */\n      swap3\n      pop\n        /* \"#utility.yul\":3138:3140   */\n      0x40\n        /* \"#utility.yul\":3123:3141   */\n      dup6\n      add\n        /* \"#utility.yul\":3110:3142   */\n      calldataload\n        /* \"#utility.yul\":3151:3184   */\n      tag_339\n        /* \"#utility.yul\":3110:3142   */\n      dup2\n        /* \"#utility.yul\":3151:3184   */\n      tag_306\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2742:3267   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":3203:3210   */\n      swap3\n      swap4\n        /* \"#utility.yul\":3257:3259   */\n      0x60\n        /* \"#utility.yul\":3242:3260   */\n      add\n        /* \"#utility.yul\":3229:3261   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2742:3267   */\n      jump\t// out\n        /* \"#utility.yul\":3480:4347   */\n    tag_104:\n        /* \"#utility.yul\":3568:3574   */\n      0x00\n        /* \"#utility.yul\":3576:3582   */\n      dup1\n        /* \"#utility.yul\":3584:3590   */\n      0x00\n        /* \"#utility.yul\":3592:3598   */\n      dup1\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3633:3642   */\n      dup6\n        /* \"#utility.yul\":3624:3631   */\n      dup8\n        /* \"#utility.yul\":3620:3643   */\n      sub\n        /* \"#utility.yul\":3616:3648   */\n      slt\n        /* \"#utility.yul\":3613:3665   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3661:3662   */\n      0x00\n        /* \"#utility.yul\":3658:3659   */\n      dup1\n        /* \"#utility.yul\":3651:3663   */\n      revert\n        /* \"#utility.yul\":3613:3665   */\n    tag_342:\n        /* \"#utility.yul\":3700:3709   */\n      dup5\n        /* \"#utility.yul\":3687:3710   */\n      calldataload\n        /* \"#utility.yul\":3719:3750   */\n      tag_343\n        /* \"#utility.yul\":3744:3749   */\n      dup2\n        /* \"#utility.yul\":3719:3750   */\n      tag_306\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3769:3774   */\n      swap4\n      pop\n        /* \"#utility.yul\":3826:3828   */\n      0x20\n        /* \"#utility.yul\":3811:3829   */\n      dup6\n      add\n        /* \"#utility.yul\":3798:3830   */\n      calldataload\n        /* \"#utility.yul\":3839:3872   */\n      tag_344\n        /* \"#utility.yul\":3798:3830   */\n      dup2\n        /* \"#utility.yul\":3839:3872   */\n      tag_306\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3891:3898   */\n      swap3\n      pop\n        /* \"#utility.yul\":3949:3951   */\n      0x40\n        /* \"#utility.yul\":3934:3952   */\n      dup6\n      add\n        /* \"#utility.yul\":3921:3953   */\n      calldataload\n        /* \"#utility.yul\":3972:3990   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4002:4016   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3999:4033   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":4029:4030   */\n      0x00\n        /* \"#utility.yul\":4026:4027   */\n      dup1\n        /* \"#utility.yul\":4019:4031   */\n      revert\n        /* \"#utility.yul\":3999:4033   */\n    tag_345:\n        /* \"#utility.yul\":4067:4073   */\n      dup2\n        /* \"#utility.yul\":4056:4065   */\n      dup8\n        /* \"#utility.yul\":4052:4074   */\n      add\n        /* \"#utility.yul\":4042:4074   */\n      swap2\n      pop\n        /* \"#utility.yul\":4112:4119   */\n      dup8\n        /* \"#utility.yul\":4105:4109   */\n      0x1f\n        /* \"#utility.yul\":4101:4103   */\n      dup4\n        /* \"#utility.yul\":4097:4110   */\n      add\n        /* \"#utility.yul\":4093:4120   */\n      slt\n        /* \"#utility.yul\":4083:4138   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4131:4132   */\n      dup1\n        /* \"#utility.yul\":4124:4136   */\n      revert\n        /* \"#utility.yul\":4083:4138   */\n    tag_346:\n        /* \"#utility.yul\":4174:4176   */\n      dup2\n        /* \"#utility.yul\":4161:4177   */\n      calldataload\n        /* \"#utility.yul\":4200:4202   */\n      dup2\n        /* \"#utility.yul\":4192:4198   */\n      dup2\n        /* \"#utility.yul\":4189:4203   */\n      gt\n        /* \"#utility.yul\":4186:4220   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":4216:4217   */\n      0x00\n        /* \"#utility.yul\":4213:4214   */\n      dup1\n        /* \"#utility.yul\":4206:4218   */\n      revert\n        /* \"#utility.yul\":4186:4220   */\n    tag_347:\n        /* \"#utility.yul\":4261:4268   */\n      dup9\n        /* \"#utility.yul\":4256:4258   */\n      0x20\n        /* \"#utility.yul\":4247:4253   */\n      dup3\n        /* \"#utility.yul\":4243:4245   */\n      dup6\n        /* \"#utility.yul\":4239:4254   */\n      add\n        /* \"#utility.yul\":4235:4259   */\n      add\n        /* \"#utility.yul\":4232:4269   */\n      gt\n        /* \"#utility.yul\":4229:4286   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":4282:4283   */\n      0x00\n        /* \"#utility.yul\":4279:4280   */\n      dup1\n        /* \"#utility.yul\":4272:4284   */\n      revert\n        /* \"#utility.yul\":4229:4286   */\n    tag_348:\n        /* \"#utility.yul\":3480:4347   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":4313:4315   */\n      0x20\n        /* \"#utility.yul\":4305:4316   */\n      add\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3480:4347   */\n      jump\t// out\n        /* \"#utility.yul\":4352:4740   */\n    tag_111:\n        /* \"#utility.yul\":4420:4426   */\n      0x00\n        /* \"#utility.yul\":4428:4434   */\n      dup1\n        /* \"#utility.yul\":4481:4483   */\n      0x40\n        /* \"#utility.yul\":4469:4478   */\n      dup4\n        /* \"#utility.yul\":4460:4467   */\n      dup6\n        /* \"#utility.yul\":4456:4479   */\n      sub\n        /* \"#utility.yul\":4452:4484   */\n      slt\n        /* \"#utility.yul\":4449:4501   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":4497:4498   */\n      0x00\n        /* \"#utility.yul\":4494:4495   */\n      dup1\n        /* \"#utility.yul\":4487:4499   */\n      revert\n        /* \"#utility.yul\":4449:4501   */\n    tag_350:\n        /* \"#utility.yul\":4536:4545   */\n      dup3\n        /* \"#utility.yul\":4523:4546   */\n      calldataload\n        /* \"#utility.yul\":4555:4586   */\n      tag_351\n        /* \"#utility.yul\":4580:4585   */\n      dup2\n        /* \"#utility.yul\":4555:4586   */\n      tag_306\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4605:4610   */\n      swap2\n      pop\n        /* \"#utility.yul\":4662:4664   */\n      0x20\n        /* \"#utility.yul\":4647:4665   */\n      dup4\n      add\n        /* \"#utility.yul\":4634:4666   */\n      calldataload\n        /* \"#utility.yul\":4675:4708   */\n      tag_352\n        /* \"#utility.yul\":4634:4666   */\n      dup2\n        /* \"#utility.yul\":4675:4708   */\n      tag_306\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4727:4734   */\n      dup1\n        /* \"#utility.yul\":4717:4734   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4352:4740   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4745:4872   */\n    tag_307:\n        /* \"#utility.yul\":4806:4816   */\n      0x4e487b71\n        /* \"#utility.yul\":4801:4804   */\n      0xe0\n        /* \"#utility.yul\":4797:4817   */\n      shl\n        /* \"#utility.yul\":4794:4795   */\n      0x00\n        /* \"#utility.yul\":4787:4818   */\n      mstore\n        /* \"#utility.yul\":4837:4841   */\n      0x11\n        /* \"#utility.yul\":4834:4835   */\n      0x04\n        /* \"#utility.yul\":4827:4842   */\n      mstore\n        /* \"#utility.yul\":4861:4865   */\n      0x24\n        /* \"#utility.yul\":4858:4859   */\n      0x00\n        /* \"#utility.yul\":4851:4866   */\n      revert\n        /* \"#utility.yul\":4877:5293   */\n    tag_308:\n        /* \"#utility.yul\":4966:4967   */\n      0x01\n        /* \"#utility.yul\":5003:5008   */\n      dup2\n        /* \"#utility.yul\":4966:4967   */\n      dup2\n        /* \"#utility.yul\":5017:5287   */\n    tag_355:\n        /* \"#utility.yul\":5038:5045   */\n      dup1\n        /* \"#utility.yul\":5028:5036   */\n      dup6\n        /* \"#utility.yul\":5025:5046   */\n      gt\n        /* \"#utility.yul\":5017:5287   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":5097:5101   */\n      dup2\n        /* \"#utility.yul\":5093:5094   */\n      0x00\n        /* \"#utility.yul\":5089:5095   */\n      not\n        /* \"#utility.yul\":5085:5102   */\n      div\n        /* \"#utility.yul\":5079:5083   */\n      dup3\n        /* \"#utility.yul\":5076:5103   */\n      gt\n        /* \"#utility.yul\":5073:5126   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":5106:5124   */\n      tag_359\n      tag_307\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5156:5163   */\n      dup1\n        /* \"#utility.yul\":5146:5154   */\n      dup6\n        /* \"#utility.yul\":5142:5164   */\n      and\n        /* \"#utility.yul\":5139:5194   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5176:5192   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":5139:5194   */\n    tag_360:\n        /* \"#utility.yul\":5255:5277   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":5215:5230   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":5017:5287   */\n      jump(tag_355)\n    tag_357:\n        /* \"#utility.yul\":5021:5024   */\n      pop\n        /* \"#utility.yul\":4877:5293   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5298:6104   */\n    tag_309:\n        /* \"#utility.yul\":5347:5352   */\n      0x00\n        /* \"#utility.yul\":5377:5385   */\n      dup3\n        /* \"#utility.yul\":5367:5447   */\n      tag_362\n      jumpi\n      pop\n        /* \"#utility.yul\":5418:5419   */\n      0x01\n        /* \"#utility.yul\":5432:5437   */\n      jump(tag_146)\n        /* \"#utility.yul\":5367:5447   */\n    tag_362:\n        /* \"#utility.yul\":5466:5470   */\n      dup2\n        /* \"#utility.yul\":5456:5532   */\n      tag_363\n      jumpi\n      pop\n        /* \"#utility.yul\":5503:5504   */\n      0x00\n        /* \"#utility.yul\":5517:5522   */\n      jump(tag_146)\n        /* \"#utility.yul\":5456:5532   */\n    tag_363:\n        /* \"#utility.yul\":5548:5552   */\n      dup2\n        /* \"#utility.yul\":5566:5567   */\n      0x01\n        /* \"#utility.yul\":5561:5620   */\n      dup2\n      eq\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5634:5635   */\n      0x02\n        /* \"#utility.yul\":5629:5759   */\n      dup2\n      eq\n      tag_366\n      jumpi\n        /* \"#utility.yul\":5541:5759   */\n      jump(tag_364)\n        /* \"#utility.yul\":5561:5620   */\n    tag_365:\n        /* \"#utility.yul\":5591:5592   */\n      0x01\n        /* \"#utility.yul\":5582:5592   */\n      swap2\n      pop\n        /* \"#utility.yul\":5605:5610   */\n      pop\n      jump(tag_146)\n        /* \"#utility.yul\":5629:5759   */\n    tag_366:\n        /* \"#utility.yul\":5666:5669   */\n      0xff\n        /* \"#utility.yul\":5656:5664   */\n      dup5\n        /* \"#utility.yul\":5653:5670   */\n      gt\n        /* \"#utility.yul\":5650:5693   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":5673:5691   */\n      tag_368\n      tag_307\n      jump\t// in\n    tag_368:\n      pop\n      pop\n        /* \"#utility.yul\":5729:5730   */\n      0x01\n        /* \"#utility.yul\":5715:5731   */\n      dup3\n      shl\n        /* \"#utility.yul\":5744:5749   */\n      jump(tag_146)\n        /* \"#utility.yul\":5541:5759   */\n    tag_364:\n      pop\n        /* \"#utility.yul\":5843:5845   */\n      0x20\n        /* \"#utility.yul\":5833:5841   */\n      dup4\n        /* \"#utility.yul\":5830:5846   */\n      lt\n        /* \"#utility.yul\":5824:5827   */\n      0x0133\n        /* \"#utility.yul\":5818:5822   */\n      dup4\n        /* \"#utility.yul\":5815:5828   */\n      lt\n        /* \"#utility.yul\":5811:5847   */\n      and\n        /* \"#utility.yul\":5805:5807   */\n      0x4e\n        /* \"#utility.yul\":5795:5803   */\n      dup5\n        /* \"#utility.yul\":5792:5808   */\n      lt\n        /* \"#utility.yul\":5787:5789   */\n      0x0b\n        /* \"#utility.yul\":5781:5785   */\n      dup5\n        /* \"#utility.yul\":5778:5790   */\n      lt\n        /* \"#utility.yul\":5774:5809   */\n      and\n        /* \"#utility.yul\":5771:5848   */\n      or\n        /* \"#utility.yul\":5768:5927   */\n      iszero\n      tag_369\n      jumpi\n      pop\n        /* \"#utility.yul\":5880:5899   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":5912:5917   */\n      jump(tag_146)\n        /* \"#utility.yul\":5768:5927   */\n    tag_369:\n        /* \"#utility.yul\":5959:5993   */\n      tag_370\n        /* \"#utility.yul\":5984:5992   */\n      dup4\n        /* \"#utility.yul\":5978:5982   */\n      dup4\n        /* \"#utility.yul\":5959:5993   */\n      tag_308\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6029:6035   */\n      dup1\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6021:6027   */\n      not\n        /* \"#utility.yul\":6017:6036   */\n      div\n        /* \"#utility.yul\":6008:6015   */\n      dup3\n        /* \"#utility.yul\":6005:6037   */\n      gt\n        /* \"#utility.yul\":6002:6060   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":6040:6058   */\n      tag_372\n      tag_307\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6078:6098   */\n      mul\n      swap4\n        /* \"#utility.yul\":5298:6104   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6109:6249   */\n    tag_124:\n        /* \"#utility.yul\":6167:6172   */\n      0x00\n        /* \"#utility.yul\":6196:6243   */\n      tag_322\n        /* \"#utility.yul\":6237:6241   */\n      0xff\n        /* \"#utility.yul\":6227:6235   */\n      dup5\n        /* \"#utility.yul\":6223:6242   */\n      and\n        /* \"#utility.yul\":6217:6221   */\n      dup4\n        /* \"#utility.yul\":6196:6243   */\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":6254:6422   */\n    tag_126:\n        /* \"#utility.yul\":6327:6336   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6358:6367   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6375:6390   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6369:6391   */\n      dup5\n      eq\n        /* \"#utility.yul\":6355:6392   */\n      or\n        /* \"#utility.yul\":6345:6416   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":6396:6414   */\n      tag_146\n      tag_307\n      jump\t// in\n        /* \"#utility.yul\":7033:7413   */\n    tag_135:\n        /* \"#utility.yul\":7112:7113   */\n      0x01\n        /* \"#utility.yul\":7108:7120   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7155:7167   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7176:7237   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":7230:7234   */\n      0x7f\n        /* \"#utility.yul\":7222:7228   */\n      dup3\n        /* \"#utility.yul\":7218:7235   */\n      and\n        /* \"#utility.yul\":7208:7235   */\n      swap2\n      pop\n        /* \"#utility.yul\":7176:7237   */\n    tag_380:\n        /* \"#utility.yul\":7283:7285   */\n      0x20\n        /* \"#utility.yul\":7275:7281   */\n      dup3\n        /* \"#utility.yul\":7272:7286   */\n      lt\n        /* \"#utility.yul\":7252:7270   */\n      dup2\n        /* \"#utility.yul\":7249:7287   */\n      sub\n        /* \"#utility.yul\":7246:7407   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":7329:7339   */\n      0x4e487b71\n        /* \"#utility.yul\":7324:7327   */\n      0xe0\n        /* \"#utility.yul\":7320:7340   */\n      shl\n        /* \"#utility.yul\":7317:7318   */\n      0x00\n        /* \"#utility.yul\":7310:7341   */\n      mstore\n        /* \"#utility.yul\":7364:7368   */\n      0x22\n        /* \"#utility.yul\":7361:7362   */\n      0x04\n        /* \"#utility.yul\":7354:7369   */\n      mstore\n        /* \"#utility.yul\":7392:7396   */\n      0x24\n        /* \"#utility.yul\":7389:7390   */\n      0x00\n        /* \"#utility.yul\":7382:7397   */\n      revert\n        /* \"#utility.yul\":7246:7407   */\n    tag_381:\n      pop\n        /* \"#utility.yul\":7033:7413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8040:8525   */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8225:8257   */\n      dup5\n      and\n        /* \"#utility.yul\":8207:8258   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8294:8296   */\n      0x40\n        /* \"#utility.yul\":8289:8291   */\n      0x20\n        /* \"#utility.yul\":8274:8292   */\n      dup3\n      add\n        /* \"#utility.yul\":8267:8297   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8313:8331   */\n      dup2\n      add\n        /* \"#utility.yul\":8306:8340   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":8333:8339   */\n      dup2\n        /* \"#utility.yul\":8382:8388   */\n      dup4\n        /* \"#utility.yul\":8377:8379   */\n      0x60\n        /* \"#utility.yul\":8362:8380   */\n      dup4\n      add\n        /* \"#utility.yul\":8349:8397   */\n      calldatacopy\n        /* \"#utility.yul\":8446:8447   */\n      0x00\n        /* \"#utility.yul\":8417:8439   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":8441:8443   */\n      0x60\n        /* \"#utility.yul\":8413:8444   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8406:8448   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8509:8511   */\n      0x1f\n        /* \"#utility.yul\":8488:8503   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8484:8513   */\n      and\n        /* \"#utility.yul\":8469:8514   */\n      add\n        /* \"#utility.yul\":8465:8519   */\n      add\n      swap3\n        /* \"#utility.yul\":8040:8525   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8530:8714   */\n    tag_202:\n        /* \"#utility.yul\":8600:8606   */\n      0x00\n        /* \"#utility.yul\":8653:8655   */\n      0x20\n        /* \"#utility.yul\":8641:8650   */\n      dup3\n        /* \"#utility.yul\":8632:8639   */\n      dup5\n        /* \"#utility.yul\":8628:8651   */\n      sub\n        /* \"#utility.yul\":8624:8656   */\n      slt\n        /* \"#utility.yul\":8621:8673   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":8669:8670   */\n      0x00\n        /* \"#utility.yul\":8666:8667   */\n      dup1\n        /* \"#utility.yul\":8659:8671   */\n      revert\n        /* \"#utility.yul\":8621:8673   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":8692:8708   */\n      mload\n      swap2\n        /* \"#utility.yul\":8530:8714   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9180:9344   */\n    tag_310:\n        /* \"#utility.yul\":9256:9269   */\n      dup1\n      mload\n        /* \"#utility.yul\":9305:9318   */\n      dup1\n      iszero\n        /* \"#utility.yul\":9298:9319   */\n      iszero\n        /* \"#utility.yul\":9288:9320   */\n      dup2\n      eq\n        /* \"#utility.yul\":9278:9338   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":9334:9335   */\n      0x00\n        /* \"#utility.yul\":9331:9332   */\n      dup1\n        /* \"#utility.yul\":9324:9336   */\n      revert\n        /* \"#utility.yul\":9278:9338   */\n    tag_389:\n        /* \"#utility.yul\":9180:9344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9349:9551   */\n    tag_217:\n        /* \"#utility.yul\":9416:9422   */\n      0x00\n        /* \"#utility.yul\":9469:9471   */\n      0x20\n        /* \"#utility.yul\":9457:9466   */\n      dup3\n        /* \"#utility.yul\":9448:9455   */\n      dup5\n        /* \"#utility.yul\":9444:9467   */\n      sub\n        /* \"#utility.yul\":9440:9472   */\n      slt\n        /* \"#utility.yul\":9437:9489   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":9485:9486   */\n      0x00\n        /* \"#utility.yul\":9482:9483   */\n      dup1\n        /* \"#utility.yul\":9475:9487   */\n      revert\n        /* \"#utility.yul\":9437:9489   */\n    tag_391:\n        /* \"#utility.yul\":9508:9545   */\n      tag_322\n        /* \"#utility.yul\":9535:9544   */\n      dup3\n        /* \"#utility.yul\":9508:9545   */\n      tag_310\n      jump\t// in\n        /* \"#utility.yul\":9556:9900   */\n    tag_311:\n        /* \"#utility.yul\":9623:9625   */\n      0x40\n        /* \"#utility.yul\":9617:9626   */\n      mload\n        /* \"#utility.yul\":9665:9668   */\n      0x01e0\n        /* \"#utility.yul\":9653:9669   */\n      dup2\n      add\n        /* \"#utility.yul\":9699:9717   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9684:9718   */\n      dup2\n      gt\n        /* \"#utility.yul\":9720:9742   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":9681:9743   */\n      or\n        /* \"#utility.yul\":9678:9863   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":9785:9795   */\n      0x4e487b71\n        /* \"#utility.yul\":9780:9783   */\n      0xe0\n        /* \"#utility.yul\":9776:9796   */\n      shl\n        /* \"#utility.yul\":9773:9774   */\n      0x00\n        /* \"#utility.yul\":9766:9797   */\n      mstore\n        /* \"#utility.yul\":9820:9824   */\n      0x41\n        /* \"#utility.yul\":9817:9818   */\n      0x04\n        /* \"#utility.yul\":9810:9825   */\n      mstore\n        /* \"#utility.yul\":9848:9852   */\n      0x24\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9838:9853   */\n      revert\n        /* \"#utility.yul\":9678:9863   */\n    tag_394:\n        /* \"#utility.yul\":9879:9881   */\n      0x40\n        /* \"#utility.yul\":9872:9894   */\n      mstore\n        /* \"#utility.yul\":9556:9900   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9905:10043   */\n    tag_312:\n        /* \"#utility.yul\":9984:9997   */\n      dup1\n      mload\n        /* \"#utility.yul\":10006:10037   */\n      tag_389\n        /* \"#utility.yul\":9984:9997   */\n      dup2\n        /* \"#utility.yul\":10006:10037   */\n      tag_306\n      jump\t// in\n        /* \"#utility.yul\":10048:10199   */\n    tag_313:\n        /* \"#utility.yul\":10131:10144   */\n      dup1\n      mload\n        /* \"#utility.yul\":10173:10174   */\n      0x04\n        /* \"#utility.yul\":10163:10175   */\n      dup2\n      lt\n        /* \"#utility.yul\":10153:10193   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":10189:10190   */\n      0x00\n        /* \"#utility.yul\":10186:10187   */\n      dup1\n        /* \"#utility.yul\":10179:10191   */\n      revert\n        /* \"#utility.yul\":10204:11557   */\n    tag_230:\n        /* \"#utility.yul\":10303:10309   */\n      0x00\n        /* \"#utility.yul\":10356:10359   */\n      0x01e0\n        /* \"#utility.yul\":10344:10353   */\n      dup3\n        /* \"#utility.yul\":10335:10342   */\n      dup5\n        /* \"#utility.yul\":10331:10354   */\n      sub\n        /* \"#utility.yul\":10327:10360   */\n      slt\n        /* \"#utility.yul\":10324:10377   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":10373:10374   */\n      0x00\n        /* \"#utility.yul\":10370:10371   */\n      dup1\n        /* \"#utility.yul\":10363:10375   */\n      revert\n        /* \"#utility.yul\":10324:10377   */\n    tag_400:\n        /* \"#utility.yul\":10399:10416   */\n      tag_401\n      tag_311\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10439:10479   */\n      tag_402\n        /* \"#utility.yul\":10469:10478   */\n      dup4\n        /* \"#utility.yul\":10439:10479   */\n      tag_312\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10432:10437   */\n      dup2\n        /* \"#utility.yul\":10425:10480   */\n      mstore\n        /* \"#utility.yul\":10512:10565   */\n      tag_403\n        /* \"#utility.yul\":10561:10563   */\n      0x20\n        /* \"#utility.yul\":10550:10559   */\n      dup5\n        /* \"#utility.yul\":10546:10564   */\n      add\n        /* \"#utility.yul\":10512:10565   */\n      tag_313\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10507:10509   */\n      0x20\n        /* \"#utility.yul\":10500:10505   */\n      dup3\n        /* \"#utility.yul\":10496:10510   */\n      add\n        /* \"#utility.yul\":10489:10566   */\n      mstore\n        /* \"#utility.yul\":10619:10621   */\n      0x40\n        /* \"#utility.yul\":10608:10617   */\n      dup4\n        /* \"#utility.yul\":10604:10622   */\n      add\n        /* \"#utility.yul\":10598:10623   */\n      mload\n        /* \"#utility.yul\":10593:10595   */\n      0x40\n        /* \"#utility.yul\":10586:10591   */\n      dup3\n        /* \"#utility.yul\":10582:10596   */\n      add\n        /* \"#utility.yul\":10575:10624   */\n      mstore\n        /* \"#utility.yul\":10677:10679   */\n      0x60\n        /* \"#utility.yul\":10666:10675   */\n      dup4\n        /* \"#utility.yul\":10662:10680   */\n      add\n        /* \"#utility.yul\":10656:10681   */\n      mload\n        /* \"#utility.yul\":10651:10653   */\n      0x60\n        /* \"#utility.yul\":10644:10649   */\n      dup3\n        /* \"#utility.yul\":10640:10654   */\n      add\n        /* \"#utility.yul\":10633:10682   */\n      mstore\n        /* \"#utility.yul\":10736:10739   */\n      0x80\n        /* \"#utility.yul\":10725:10734   */\n      dup4\n        /* \"#utility.yul\":10721:10740   */\n      add\n        /* \"#utility.yul\":10715:10741   */\n      mload\n        /* \"#utility.yul\":10709:10712   */\n      0x80\n        /* \"#utility.yul\":10702:10707   */\n      dup3\n        /* \"#utility.yul\":10698:10713   */\n      add\n        /* \"#utility.yul\":10691:10742   */\n      mstore\n        /* \"#utility.yul\":10796:10799   */\n      0xa0\n        /* \"#utility.yul\":10785:10794   */\n      dup4\n        /* \"#utility.yul\":10781:10800   */\n      add\n        /* \"#utility.yul\":10775:10801   */\n      mload\n        /* \"#utility.yul\":10769:10772   */\n      0xa0\n        /* \"#utility.yul\":10762:10767   */\n      dup3\n        /* \"#utility.yul\":10758:10773   */\n      add\n        /* \"#utility.yul\":10751:10802   */\n      mstore\n        /* \"#utility.yul\":10856:10859   */\n      0xc0\n        /* \"#utility.yul\":10845:10854   */\n      dup4\n        /* \"#utility.yul\":10841:10860   */\n      add\n        /* \"#utility.yul\":10835:10861   */\n      mload\n        /* \"#utility.yul\":10829:10832   */\n      0xc0\n        /* \"#utility.yul\":10822:10827   */\n      dup3\n        /* \"#utility.yul\":10818:10833   */\n      add\n        /* \"#utility.yul\":10811:10862   */\n      mstore\n        /* \"#utility.yul\":10916:10919   */\n      0xe0\n        /* \"#utility.yul\":10905:10914   */\n      dup4\n        /* \"#utility.yul\":10901:10920   */\n      add\n        /* \"#utility.yul\":10895:10921   */\n      mload\n        /* \"#utility.yul\":10889:10892   */\n      0xe0\n        /* \"#utility.yul\":10882:10887   */\n      dup3\n        /* \"#utility.yul\":10878:10893   */\n      add\n        /* \"#utility.yul\":10871:10922   */\n      mstore\n        /* \"#utility.yul\":10941:10944   */\n      0x0100\n        /* \"#utility.yul\":10997:10999   */\n      dup1\n        /* \"#utility.yul\":10986:10995   */\n      dup5\n        /* \"#utility.yul\":10982:11000   */\n      add\n        /* \"#utility.yul\":10976:11001   */\n      mload\n        /* \"#utility.yul\":10971:10973   */\n      dup2\n        /* \"#utility.yul\":10964:10969   */\n      dup4\n        /* \"#utility.yul\":10960:10974   */\n      add\n        /* \"#utility.yul\":10953:11002   */\n      mstore\n      pop\n        /* \"#utility.yul\":11021:11024   */\n      0x0120\n        /* \"#utility.yul\":11077:11079   */\n      dup1\n        /* \"#utility.yul\":11066:11075   */\n      dup5\n        /* \"#utility.yul\":11062:11080   */\n      add\n        /* \"#utility.yul\":11056:11081   */\n      mload\n        /* \"#utility.yul\":11051:11053   */\n      dup2\n        /* \"#utility.yul\":11044:11049   */\n      dup4\n        /* \"#utility.yul\":11040:11054   */\n      add\n        /* \"#utility.yul\":11033:11082   */\n      mstore\n      pop\n        /* \"#utility.yul\":11101:11104   */\n      0x0140\n        /* \"#utility.yul\":11157:11159   */\n      dup1\n        /* \"#utility.yul\":11146:11155   */\n      dup5\n        /* \"#utility.yul\":11142:11160   */\n      add\n        /* \"#utility.yul\":11136:11161   */\n      mload\n        /* \"#utility.yul\":11131:11133   */\n      dup2\n        /* \"#utility.yul\":11124:11129   */\n      dup4\n        /* \"#utility.yul\":11120:11134   */\n      add\n        /* \"#utility.yul\":11113:11162   */\n      mstore\n      pop\n        /* \"#utility.yul\":11181:11184   */\n      0x0160\n        /* \"#utility.yul\":11237:11239   */\n      dup1\n        /* \"#utility.yul\":11226:11235   */\n      dup5\n        /* \"#utility.yul\":11222:11240   */\n      add\n        /* \"#utility.yul\":11216:11241   */\n      mload\n        /* \"#utility.yul\":11211:11213   */\n      dup2\n        /* \"#utility.yul\":11204:11209   */\n      dup4\n        /* \"#utility.yul\":11200:11214   */\n      add\n        /* \"#utility.yul\":11193:11242   */\n      mstore\n      pop\n        /* \"#utility.yul\":11261:11264   */\n      0x0180\n        /* \"#utility.yul\":11296:11345   */\n      tag_404\n        /* \"#utility.yul\":11341:11343   */\n      dup2\n        /* \"#utility.yul\":11330:11339   */\n      dup6\n        /* \"#utility.yul\":11326:11344   */\n      add\n        /* \"#utility.yul\":11296:11345   */\n      tag_312\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":11280:11294   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11273:11346   */\n      mstore\n        /* \"#utility.yul\":11365:11368   */\n      0x01a0\n        /* \"#utility.yul\":11406:11424   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":11400:11425   */\n      mload\n        /* \"#utility.yul\":11384:11398   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11377:11426   */\n      mstore\n        /* \"#utility.yul\":11445:11448   */\n      0x01c0\n        /* \"#utility.yul\":11480:11526   */\n      tag_405\n        /* \"#utility.yul\":11507:11525   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":11480:11526   */\n      tag_310\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11464:11478   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11457:11527   */\n      mstore\n        /* \"#utility.yul\":11468:11473   */\n      swap4\n        /* \"#utility.yul\":10204:11557   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12959:13084   */\n    tag_299:\n        /* \"#utility.yul\":13024:13033   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13045:13055   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":13042:13078   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":13058:13076   */\n      tag_146\n      tag_307\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220311213009e8407a8bb6dfc97c9dd492d6570038efe8d466a3191efd8fbb86e2664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1580": {
									"entryPoint": null,
									"id": 1580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2011": {
									"entryPoint": null,
									"id": 2011,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 281,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_boolt_bool_fromMemory": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3528:15",
										"nodeType": "YulBlock",
										"src": "0:3528:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "71:107:15",
													"nodeType": "YulBlock",
													"src": "71:107:15",
													"statements": [
														{
															"nativeSrc": "81:22:15",
															"nodeType": "YulAssignment",
															"src": "81:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "96:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "96:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "90:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "90:5:15"
																},
																"nativeSrc": "90:13:15",
																"nodeType": "YulFunctionCall",
																"src": "90:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "81:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "81:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "156:16:15",
																"nodeType": "YulBlock",
																"src": "156:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "165:1:15",
																					"nodeType": "YulLiteral",
																					"src": "165:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "168:1:15",
																					"nodeType": "YulLiteral",
																					"src": "168:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "158:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "158:6:15"
																			},
																			"nativeSrc": "158:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "158:12:15"
																		},
																		"nativeSrc": "158:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "158:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "125:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "125:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "146:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "146:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "139:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "139:6:15"
																						},
																						"nativeSrc": "139:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "139:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "132:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "132:6:15"
																				},
																				"nativeSrc": "132:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "132:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "122:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "122:2:15"
																		},
																		"nativeSrc": "122:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "122:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "115:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "115:6:15"
																},
																"nativeSrc": "115:40:15",
																"nodeType": "YulFunctionCall",
																"src": "115:40:15"
															},
															"nativeSrc": "112:60:15",
															"nodeType": "YulIf",
															"src": "112:60:15"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nativeSrc": "14:164:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "50:6:15",
														"nodeType": "YulTypedName",
														"src": "50:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "61:5:15",
														"nodeType": "YulTypedName",
														"src": "61:5:15",
														"type": ""
													}
												],
												"src": "14:164:15"
											},
											{
												"body": {
													"nativeSrc": "292:339:15",
													"nodeType": "YulBlock",
													"src": "292:339:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "338:16:15",
																"nodeType": "YulBlock",
																"src": "338:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "347:1:15",
																					"nodeType": "YulLiteral",
																					"src": "347:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "350:1:15",
																					"nodeType": "YulLiteral",
																					"src": "350:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "340:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:15"
																			},
																			"nativeSrc": "340:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:15"
																		},
																		"nativeSrc": "340:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "313:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "322:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "309:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:15"
																		},
																		"nativeSrc": "309:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "334:2:15",
																		"nodeType": "YulLiteral",
																		"src": "334:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "305:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:15"
																},
																"nativeSrc": "305:32:15",
																"nodeType": "YulFunctionCall",
																"src": "305:32:15"
															},
															"nativeSrc": "302:52:15",
															"nodeType": "YulIf",
															"src": "302:52:15"
														},
														{
															"nativeSrc": "363:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "363:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "382:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "382:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "376:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "376:5:15"
																},
																"nativeSrc": "376:16:15",
																"nodeType": "YulFunctionCall",
																"src": "376:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "367:5:15",
																	"nodeType": "YulTypedName",
																	"src": "367:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "455:16:15",
																"nodeType": "YulBlock",
																"src": "455:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "464:1:15",
																					"nodeType": "YulLiteral",
																					"src": "464:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "467:1:15",
																					"nodeType": "YulLiteral",
																					"src": "467:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "457:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "457:6:15"
																			},
																			"nativeSrc": "457:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "457:12:15"
																		},
																		"nativeSrc": "457:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "457:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "414:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "414:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "425:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "425:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "440:3:15",
																										"nodeType": "YulLiteral",
																										"src": "440:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "445:1:15",
																										"nodeType": "YulLiteral",
																										"src": "445:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "436:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "436:3:15"
																								},
																								"nativeSrc": "436:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "436:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "449:1:15",
																								"nodeType": "YulLiteral",
																								"src": "449:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "432:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "432:3:15"
																						},
																						"nativeSrc": "432:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "432:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "421:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "421:3:15"
																				},
																				"nativeSrc": "421:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "421:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "411:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "411:2:15"
																		},
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "411:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "404:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "404:6:15"
																},
																"nativeSrc": "404:50:15",
																"nodeType": "YulFunctionCall",
																"src": "404:50:15"
															},
															"nativeSrc": "401:70:15",
															"nodeType": "YulIf",
															"src": "401:70:15"
														},
														{
															"nativeSrc": "480:15:15",
															"nodeType": "YulAssignment",
															"src": "480:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "490:5:15",
																"nodeType": "YulIdentifier",
																"src": "490:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "480:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:15"
																}
															]
														},
														{
															"nativeSrc": "504:56:15",
															"nodeType": "YulAssignment",
															"src": "504:56:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "545:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "545:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:15",
																				"nodeType": "YulLiteral",
																				"src": "556:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "541:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:15"
																		},
																		"nativeSrc": "541:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "541:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "514:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "514:26:15"
																},
																"nativeSrc": "514:46:15",
																"nodeType": "YulFunctionCall",
																"src": "514:46:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "504:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "504:6:15"
																}
															]
														},
														{
															"nativeSrc": "569:56:15",
															"nodeType": "YulAssignment",
															"src": "569:56:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "610:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "610:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "621:2:15",
																				"nodeType": "YulLiteral",
																				"src": "621:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "606:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:15"
																		},
																		"nativeSrc": "606:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "606:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "579:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "579:26:15"
																},
																"nativeSrc": "579:46:15",
																"nodeType": "YulFunctionCall",
																"src": "579:46:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "569:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "569:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_boolt_bool_fromMemory",
												"nativeSrc": "183:448:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "242:9:15",
														"nodeType": "YulTypedName",
														"src": "242:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "253:7:15",
														"nodeType": "YulTypedName",
														"src": "253:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "265:6:15",
														"nodeType": "YulTypedName",
														"src": "265:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "273:6:15",
														"nodeType": "YulTypedName",
														"src": "273:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "281:6:15",
														"nodeType": "YulTypedName",
														"src": "281:6:15",
														"type": ""
													}
												],
												"src": "183:448:15"
											},
											{
												"body": {
													"nativeSrc": "668:95:15",
													"nodeType": "YulBlock",
													"src": "668:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "685:1:15",
																		"nodeType": "YulLiteral",
																		"src": "685:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "692:3:15",
																				"nodeType": "YulLiteral",
																				"src": "692:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "697:10:15",
																				"nodeType": "YulLiteral",
																				"src": "697:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "688:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:15"
																		},
																		"nativeSrc": "688:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "688:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "678:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:15"
																},
																"nativeSrc": "678:31:15",
																"nodeType": "YulFunctionCall",
																"src": "678:31:15"
															},
															"nativeSrc": "678:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "678:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "725:1:15",
																		"nodeType": "YulLiteral",
																		"src": "725:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:4:15",
																		"nodeType": "YulLiteral",
																		"src": "728:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "718:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:15"
																},
																"nativeSrc": "718:15:15",
																"nodeType": "YulFunctionCall",
																"src": "718:15:15"
															},
															"nativeSrc": "718:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "718:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "749:1:15",
																		"nodeType": "YulLiteral",
																		"src": "749:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "752:4:15",
																		"nodeType": "YulLiteral",
																		"src": "752:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "742:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "742:6:15"
																},
																"nativeSrc": "742:15:15",
																"nodeType": "YulFunctionCall",
																"src": "742:15:15"
															},
															"nativeSrc": "742:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "742:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "636:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "636:127:15"
											},
											{
												"body": {
													"nativeSrc": "823:325:15",
													"nodeType": "YulBlock",
													"src": "823:325:15",
													"statements": [
														{
															"nativeSrc": "833:22:15",
															"nodeType": "YulAssignment",
															"src": "833:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "847:1:15",
																		"nodeType": "YulLiteral",
																		"src": "847:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "850:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "850:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "843:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:15"
																},
																"nativeSrc": "843:12:15",
																"nodeType": "YulFunctionCall",
																"src": "843:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "833:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:15"
																}
															]
														},
														{
															"nativeSrc": "864:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "864:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "894:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "894:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "900:1:15",
																		"nodeType": "YulLiteral",
																		"src": "900:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "890:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "890:3:15"
																},
																"nativeSrc": "890:12:15",
																"nodeType": "YulFunctionCall",
																"src": "890:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "868:18:15",
																	"nodeType": "YulTypedName",
																	"src": "868:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "941:31:15",
																"nodeType": "YulBlock",
																"src": "941:31:15",
																"statements": [
																	{
																		"nativeSrc": "943:27:15",
																		"nodeType": "YulAssignment",
																		"src": "943:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "957:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "957:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "965:4:15",
																					"nodeType": "YulLiteral",
																					"src": "965:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "953:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "953:3:15"
																			},
																			"nativeSrc": "953:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "953:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "943:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "943:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "921:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "921:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "914:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:15"
																},
																"nativeSrc": "914:26:15",
																"nodeType": "YulFunctionCall",
																"src": "914:26:15"
															},
															"nativeSrc": "911:61:15",
															"nodeType": "YulIf",
															"src": "911:61:15"
														},
														{
															"body": {
																"nativeSrc": "1031:111:15",
																"nodeType": "YulBlock",
																"src": "1031:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1052:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1052:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1059:3:15",
																							"nodeType": "YulLiteral",
																							"src": "1059:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1064:10:15",
																							"nodeType": "YulLiteral",
																							"src": "1064:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1055:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1055:3:15"
																					},
																					"nativeSrc": "1055:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1055:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1045:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1045:6:15"
																			},
																			"nativeSrc": "1045:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1045:31:15"
																		},
																		"nativeSrc": "1045:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1045:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1096:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1096:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1099:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1099:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1089:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1089:6:15"
																			},
																			"nativeSrc": "1089:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1089:15:15"
																		},
																		"nativeSrc": "1089:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1089:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1124:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1124:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1127:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1127:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1117:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1117:6:15"
																			},
																			"nativeSrc": "1117:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1117:15:15"
																		},
																		"nativeSrc": "1117:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1117:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "987:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "987:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1018:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1018:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1007:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:15"
																		},
																		"nativeSrc": "1007:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1007:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "984:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "984:2:15"
																},
																"nativeSrc": "984:38:15",
																"nodeType": "YulFunctionCall",
																"src": "984:38:15"
															},
															"nativeSrc": "981:161:15",
															"nodeType": "YulIf",
															"src": "981:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "768:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "803:4:15",
														"nodeType": "YulTypedName",
														"src": "803:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "812:6:15",
														"nodeType": "YulTypedName",
														"src": "812:6:15",
														"type": ""
													}
												],
												"src": "768:380:15"
											},
											{
												"body": {
													"nativeSrc": "1209:65:15",
													"nodeType": "YulBlock",
													"src": "1209:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1226:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1226:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1229:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1229:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1219:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1219:6:15"
																},
																"nativeSrc": "1219:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1219:14:15"
															},
															"nativeSrc": "1219:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "1219:14:15"
														},
														{
															"nativeSrc": "1242:26:15",
															"nodeType": "YulAssignment",
															"src": "1242:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1260:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1263:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1263:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1250:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1250:9:15"
																},
																"nativeSrc": "1250:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1250:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1242:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1242:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1153:121:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1192:3:15",
														"nodeType": "YulTypedName",
														"src": "1192:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1200:4:15",
														"nodeType": "YulTypedName",
														"src": "1200:4:15",
														"type": ""
													}
												],
												"src": "1153:121:15"
											},
											{
												"body": {
													"nativeSrc": "1360:437:15",
													"nodeType": "YulBlock",
													"src": "1360:437:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1393:398:15",
																"nodeType": "YulBlock",
																"src": "1393:398:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1414:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1414:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1417:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1417:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1407:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1407:6:15"
																			},
																			"nativeSrc": "1407:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1407:16:15"
																		},
																		"nativeSrc": "1407:16:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1407:16:15"
																	},
																	{
																		"nativeSrc": "1436:30:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1436:30:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1458:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1461:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1461:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1448:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:15"
																			},
																			"nativeSrc": "1448:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1448:18:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1440:4:15",
																				"nodeType": "YulTypedName",
																				"src": "1440:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1479:57:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1479:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1502:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1502:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1512:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1512:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1519:10:15",
																									"nodeType": "YulIdentifier",
																									"src": "1519:10:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1531:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1531:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1515:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1515:3:15"
																							},
																							"nativeSrc": "1515:19:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1515:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1508:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1508:3:15"
																					},
																					"nativeSrc": "1508:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1508:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1498:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1498:3:15"
																			},
																			"nativeSrc": "1498:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1498:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1483:11:15",
																				"nodeType": "YulTypedName",
																				"src": "1483:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1573:23:15",
																			"nodeType": "YulBlock",
																			"src": "1573:23:15",
																			"statements": [
																				{
																					"nativeSrc": "1575:19:15",
																					"nodeType": "YulAssignment",
																					"src": "1575:19:15",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1590:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "1590:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1575:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "1575:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1555:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "1555:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1567:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1567:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1552:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1552:2:15"
																			},
																			"nativeSrc": "1552:20:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1552:20:15"
																		},
																		"nativeSrc": "1549:47:15",
																		"nodeType": "YulIf",
																		"src": "1549:47:15"
																	},
																	{
																		"nativeSrc": "1609:41:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1609:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1623:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1623:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1633:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1633:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1640:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1640:3:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1645:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1645:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1636:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1636:3:15"
																							},
																							"nativeSrc": "1636:12:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1636:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1629:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1629:3:15"
																					},
																					"nativeSrc": "1629:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1629:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1619:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1619:3:15"
																			},
																			"nativeSrc": "1619:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1619:31:15"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1613:2:15",
																				"nodeType": "YulTypedName",
																				"src": "1613:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1663:24:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1663:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1676:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "1676:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1667:5:15",
																				"nodeType": "YulTypedName",
																				"src": "1667:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1761:20:15",
																			"nodeType": "YulBlock",
																			"src": "1761:20:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1770:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1770:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1777:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1777:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1763:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "1763:6:15"
																						},
																						"nativeSrc": "1763:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1763:16:15"
																					},
																					"nativeSrc": "1763:16:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "1763:16:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1711:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1711:5:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1718:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "1718:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1708:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1708:2:15"
																			},
																			"nativeSrc": "1708:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1708:13:15"
																		},
																		"nativeSrc": "1700:81:15",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1722:26:15",
																			"nodeType": "YulBlock",
																			"src": "1722:26:15",
																			"statements": [
																				{
																					"nativeSrc": "1724:22:15",
																					"nodeType": "YulAssignment",
																					"src": "1724:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1737:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1737:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1744:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1744:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1733:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1733:3:15"
																						},
																						"nativeSrc": "1733:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1733:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1724:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "1724:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1704:3:15",
																			"nodeType": "YulBlock",
																			"src": "1704:3:15",
																			"statements": []
																		},
																		"src": "1700:81:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1376:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1376:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1381:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1381:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1373:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1373:2:15"
																},
																"nativeSrc": "1373:11:15",
																"nodeType": "YulFunctionCall",
																"src": "1373:11:15"
															},
															"nativeSrc": "1370:421:15",
															"nodeType": "YulIf",
															"src": "1370:421:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1279:518:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1332:5:15",
														"nodeType": "YulTypedName",
														"src": "1332:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1339:3:15",
														"nodeType": "YulTypedName",
														"src": "1339:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1344:10:15",
														"nodeType": "YulTypedName",
														"src": "1344:10:15",
														"type": ""
													}
												],
												"src": "1279:518:15"
											},
											{
												"body": {
													"nativeSrc": "1887:81:15",
													"nodeType": "YulBlock",
													"src": "1887:81:15",
													"statements": [
														{
															"nativeSrc": "1897:65:15",
															"nodeType": "YulAssignment",
															"src": "1897:65:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1912:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1912:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1930:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1930:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1933:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "1933:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1926:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1926:3:15"
																								},
																								"nativeSrc": "1926:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1926:11:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1943:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1943:1:15",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1939:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1939:3:15"
																								},
																								"nativeSrc": "1939:6:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1939:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1922:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1922:3:15"
																						},
																						"nativeSrc": "1922:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1922:24:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1918:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1918:3:15"
																				},
																				"nativeSrc": "1918:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1918:29:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1908:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:15"
																		},
																		"nativeSrc": "1908:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1908:40:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1954:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1954:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1957:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1957:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1950:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1950:3:15"
																		},
																		"nativeSrc": "1950:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1950:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1905:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1905:2:15"
																},
																"nativeSrc": "1905:57:15",
																"nodeType": "YulFunctionCall",
																"src": "1905:57:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1897:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1897:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1802:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1864:4:15",
														"nodeType": "YulTypedName",
														"src": "1864:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1870:3:15",
														"nodeType": "YulTypedName",
														"src": "1870:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1878:4:15",
														"nodeType": "YulTypedName",
														"src": "1878:4:15",
														"type": ""
													}
												],
												"src": "1802:166:15"
											},
											{
												"body": {
													"nativeSrc": "2069:1249:15",
													"nodeType": "YulBlock",
													"src": "2069:1249:15",
													"statements": [
														{
															"nativeSrc": "2079:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2079:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2099:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2093:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2093:5:15"
																},
																"nativeSrc": "2093:10:15",
																"nodeType": "YulFunctionCall",
																"src": "2093:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2083:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2083:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:22:15",
																"nodeType": "YulBlock",
																"src": "2146:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2148:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2148:16:15"
																			},
																			"nativeSrc": "2148:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:18:15"
																		},
																		"nativeSrc": "2148:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2118:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2134:2:15",
																						"nodeType": "YulLiteral",
																						"src": "2134:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2138:1:15",
																						"nodeType": "YulLiteral",
																						"src": "2138:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2130:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2130:3:15"
																				},
																				"nativeSrc": "2130:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2130:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2142:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2142:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2126:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2126:3:15"
																		},
																		"nativeSrc": "2126:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2126:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2115:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:15"
																},
																"nativeSrc": "2115:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2115:30:15"
															},
															"nativeSrc": "2112:56:15",
															"nodeType": "YulIf",
															"src": "2112:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2221:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2221:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2259:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "2259:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2253:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2253:5:15"
																				},
																				"nativeSrc": "2253:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2253:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2227:25:15",
																			"nodeType": "YulIdentifier",
																			"src": "2227:25:15"
																		},
																		"nativeSrc": "2227:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2227:38:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2267:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2267:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2177:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "2177:43:15"
																},
																"nativeSrc": "2177:97:15",
																"nodeType": "YulFunctionCall",
																"src": "2177:97:15"
															},
															"nativeSrc": "2177:97:15",
															"nodeType": "YulExpressionStatement",
															"src": "2177:97:15"
														},
														{
															"nativeSrc": "2283:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2283:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2300:1:15",
																"nodeType": "YulLiteral",
																"src": "2300:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2287:9:15",
																	"nodeType": "YulTypedName",
																	"src": "2287:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2310:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2310:23:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2329:4:15",
																"nodeType": "YulLiteral",
																"src": "2329:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2314:11:15",
																	"nodeType": "YulTypedName",
																	"src": "2314:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2342:17:15",
															"nodeType": "YulAssignment",
															"src": "2342:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2355:4:15",
																"nodeType": "YulLiteral",
																"src": "2355:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2342:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2342:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2405:656:15",
																		"nodeType": "YulBlock",
																		"src": "2405:656:15",
																		"statements": [
																			{
																				"nativeSrc": "2419:35:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2419:35:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2438:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2438:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2450:2:15",
																									"nodeType": "YulLiteral",
																									"src": "2450:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2446:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2446:3:15"
																							},
																							"nativeSrc": "2446:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2446:7:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2434:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2434:3:15"
																					},
																					"nativeSrc": "2434:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2434:20:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2423:7:15",
																						"nodeType": "YulTypedName",
																						"src": "2423:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2467:49:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2467:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2511:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2511:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2481:29:15",
																						"nodeType": "YulIdentifier",
																						"src": "2481:29:15"
																					},
																					"nativeSrc": "2481:35:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2481:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2471:6:15",
																						"nodeType": "YulTypedName",
																						"src": "2471:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2529:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2529:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2538:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2538:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2533:1:15",
																						"nodeType": "YulTypedName",
																						"src": "2533:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2616:172:15",
																					"nodeType": "YulBlock",
																					"src": "2616:172:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2641:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2641:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2659:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "2659:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2664:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "2664:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2655:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2655:3:15"
																												},
																												"nativeSrc": "2655:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2655:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2649:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "2649:5:15"
																										},
																										"nativeSrc": "2649:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2649:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2634:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2634:6:15"
																								},
																								"nativeSrc": "2634:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2634:42:15"
																							},
																							"nativeSrc": "2634:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2634:42:15"
																						},
																						{
																							"nativeSrc": "2693:24:15",
																							"nodeType": "YulAssignment",
																							"src": "2693:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2707:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2707:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2715:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2715:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2703:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2703:3:15"
																								},
																								"nativeSrc": "2703:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2703:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2693:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2693:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2734:40:15",
																							"nodeType": "YulAssignment",
																							"src": "2734:40:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2751:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "2751:9:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2762:11:15",
																										"nodeType": "YulIdentifier",
																										"src": "2762:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2747:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2747:3:15"
																								},
																								"nativeSrc": "2747:27:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2747:27:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2734:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "2734:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2563:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "2563:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2566:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2566:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2560:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2560:2:15"
																					},
																					"nativeSrc": "2560:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2560:14:15"
																				},
																				"nativeSrc": "2552:236:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2575:28:15",
																					"nodeType": "YulBlock",
																					"src": "2575:28:15",
																					"statements": [
																						{
																							"nativeSrc": "2577:24:15",
																							"nodeType": "YulAssignment",
																							"src": "2577:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2586:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "2586:1:15"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2589:11:15",
																										"nodeType": "YulIdentifier",
																										"src": "2589:11:15"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2582:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2582:3:15"
																								},
																								"nativeSrc": "2582:19:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2582:19:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2577:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "2577:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2556:3:15",
																					"nodeType": "YulBlock",
																					"src": "2556:3:15",
																					"statements": []
																				},
																				"src": "2552:236:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "2836:166:15",
																					"nodeType": "YulBlock",
																					"src": "2836:166:15",
																					"statements": [
																						{
																							"nativeSrc": "2854:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2854:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2881:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2881:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2886:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2886:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2877:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2877:3:15"
																										},
																										"nativeSrc": "2877:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2877:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2871:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2871:5:15"
																								},
																								"nativeSrc": "2871:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2871:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2858:9:15",
																									"nodeType": "YulTypedName",
																									"src": "2858:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2921:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2921:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2933:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2933:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2960:1:15",
																																				"nodeType": "YulLiteral",
																																				"src": "2960:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2963:6:15",
																																				"nodeType": "YulIdentifier",
																																				"src": "2963:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2956:3:15",
																																			"nodeType": "YulIdentifier",
																																			"src": "2956:3:15"
																																		},
																																		"nativeSrc": "2956:14:15",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2956:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2972:3:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2972:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2952:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2952:3:15"
																																},
																																"nativeSrc": "2952:24:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2952:24:15"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2982:1:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2982:1:15",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2978:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2978:3:15"
																																},
																																"nativeSrc": "2978:6:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2978:6:15"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2948:3:15",
																															"nodeType": "YulIdentifier",
																															"src": "2948:3:15"
																														},
																														"nativeSrc": "2948:37:15",
																														"nodeType": "YulFunctionCall",
																														"src": "2948:37:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2944:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2944:3:15"
																												},
																												"nativeSrc": "2944:42:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2944:42:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2929:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2929:3:15"
																										},
																										"nativeSrc": "2929:58:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2929:58:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2914:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2914:6:15"
																								},
																								"nativeSrc": "2914:74:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2914:74:15"
																							},
																							"nativeSrc": "2914:74:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2914:74:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2807:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2807:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2816:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2816:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2804:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2804:2:15"
																					},
																					"nativeSrc": "2804:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2804:19:15"
																				},
																				"nativeSrc": "2801:201:15",
																				"nodeType": "YulIf",
																				"src": "2801:201:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3022:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "3022:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3036:1:15",
																											"nodeType": "YulLiteral",
																											"src": "3036:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3039:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "3039:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3032:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "3032:3:15"
																									},
																									"nativeSrc": "3032:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "3032:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3048:1:15",
																									"nodeType": "YulLiteral",
																									"src": "3048:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3028:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "3028:3:15"
																							},
																							"nativeSrc": "3028:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3028:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3015:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3015:6:15"
																					},
																					"nativeSrc": "3015:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3015:36:15"
																				},
																				"nativeSrc": "3015:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3015:36:15"
																			}
																		]
																	},
																	"nativeSrc": "2398:663:15",
																	"nodeType": "YulCase",
																	"src": "2398:663:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2403:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2403:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3078:234:15",
																		"nodeType": "YulBlock",
																		"src": "3078:234:15",
																		"statements": [
																			{
																				"nativeSrc": "3092:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3092:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3105:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3096:5:15",
																						"nodeType": "YulTypedName",
																						"src": "3096:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3141:67:15",
																					"nodeType": "YulBlock",
																					"src": "3141:67:15",
																					"statements": [
																						{
																							"nativeSrc": "3159:35:15",
																							"nodeType": "YulAssignment",
																							"src": "3159:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3178:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "3178:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3183:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "3183:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3174:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "3174:3:15"
																										},
																										"nativeSrc": "3174:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "3174:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3168:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3168:5:15"
																								},
																								"nativeSrc": "3168:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "3168:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3159:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3159:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3122:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3122:6:15"
																				},
																				"nativeSrc": "3119:89:15",
																				"nodeType": "YulIf",
																				"src": "3119:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3228:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "3228:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3287:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3287:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3294:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "3294:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3234:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "3234:52:15"
																							},
																							"nativeSrc": "3234:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3234:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3221:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3221:6:15"
																					},
																					"nativeSrc": "3221:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3221:81:15"
																				},
																				"nativeSrc": "3221:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3221:81:15"
																			}
																		]
																	},
																	"nativeSrc": "3070:242:15",
																	"nodeType": "YulCase",
																	"src": "3070:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2378:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2378:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2386:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2386:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2375:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2375:2:15"
																},
																"nativeSrc": "2375:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2375:14:15"
															},
															"nativeSrc": "2368:944:15",
															"nodeType": "YulSwitch",
															"src": "2368:944:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1973:1345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2054:4:15",
														"nodeType": "YulTypedName",
														"src": "2054:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2060:3:15",
														"nodeType": "YulTypedName",
														"src": "2060:3:15",
														"type": ""
													}
												],
												"src": "1973:1345:15"
											},
											{
												"body": {
													"nativeSrc": "3424:102:15",
													"nodeType": "YulBlock",
													"src": "3424:102:15",
													"statements": [
														{
															"nativeSrc": "3434:26:15",
															"nodeType": "YulAssignment",
															"src": "3434:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3446:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3446:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3457:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3457:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3442:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3442:3:15"
																},
																"nativeSrc": "3442:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3442:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3434:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3434:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3476:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3476:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3491:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3491:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3507:3:15",
																								"nodeType": "YulLiteral",
																								"src": "3507:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3512:1:15",
																								"nodeType": "YulLiteral",
																								"src": "3512:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3503:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3503:3:15"
																						},
																						"nativeSrc": "3503:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3503:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3516:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3516:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3499:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3499:3:15"
																				},
																				"nativeSrc": "3499:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3499:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3487:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:15"
																		},
																		"nativeSrc": "3487:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3487:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3469:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:15"
																},
																"nativeSrc": "3469:51:15",
																"nodeType": "YulFunctionCall",
																"src": "3469:51:15"
															},
															"nativeSrc": "3469:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "3469:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3323:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3393:9:15",
														"nodeType": "YulTypedName",
														"src": "3393:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3404:6:15",
														"nodeType": "YulTypedName",
														"src": "3404:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3415:4:15",
														"nodeType": "YulTypedName",
														"src": "3415:4:15",
														"type": ""
													}
												],
												"src": "3323:203:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_boolt_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_bool_fromMemory(add(headStart, 32))\n        value2 := abi_decode_bool_fromMemory(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x175E CODESIZE SUB DUP1 PUSH2 0x175E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x17E JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x1B1BDD1D195C9E551A58DAD95D PUSH1 0x9A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x151A58DAD95D PUSH1 0xD2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x90 DUP3 DUP3 PUSH2 0x263 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE DUP2 PUSH2 0x119 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP4 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x322 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x179 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x190 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x1B4 PUSH1 0x20 DUP6 ADD PUSH2 0x16A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2 PUSH1 0x40 DUP6 ADD PUSH2 0x16A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x211 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25E JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x23C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25B JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x248 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27C PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x290 DUP2 PUSH2 0x28A DUP5 SLOAD PUSH2 0x1DF JUMP JUMPDEST DUP5 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2AC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x31A JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2D2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x30E JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x142F DUP1 PUSH2 0x32F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xC7FF23BB GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xC7FF23BB EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xD896FC10 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xE405663F EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xB4309A9C EQ PUSH2 0x2D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6EBD327B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12C911E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x19F232A EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x6E2A29A EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x82921A5 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1BB SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x194 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH2 0x194 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1BB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH2 0x194 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST PUSH0 PUSH2 0x39D PUSH1 0x12 PUSH1 0xA PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x3A7 SWAP1 DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP PUSH2 0x3B2 DUP2 PUSH2 0x551 JUMP JUMPDEST PUSH0 PUSH2 0x3BE DUP6 DUP6 DUP6 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x435 SWAP1 PUSH2 0x1205 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x461 SWAP1 PUSH2 0x1205 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x483 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4BE PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xD7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x522 DUP2 DUP6 DUP6 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x53B DUP6 DUP3 DUP6 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x546 DUP6 DUP6 DUP6 PUSH2 0xB9F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x55B CALLER DUP3 PUSH2 0xBFC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x56B PUSH1 0x12 PUSH1 0xA PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x575 SWAP1 DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP PUSH2 0x581 DUP5 DUP3 PUSH2 0x60B JUMP JUMPDEST PUSH0 PUSH2 0x58D DUP7 DUP6 DUP6 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x609 PUSH0 PUSH2 0xC30 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x616 DUP3 CALLER DUP4 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH2 0xBFC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x435 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x522 DUP2 DUP6 DUP6 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x648 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6E6F20736574206173207461736B PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70D64693 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH4 0xE1AC8D26 SWAP1 PUSH2 0x6E5 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x701 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP PUSH2 0x73B DUP5 DUP3 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x4D914FBDB28A885441BB0F6E06BB01DFDFE8A8B6902391853B46EB747AE136EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH2 0x796 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7A4 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x81C PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0x55B DUP2 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8F91CD17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8F91CD17 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA21 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x627579207469636B6574206E6F20616C6C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69B JUMP JUMPDEST PUSH0 DUP5 DUP3 PUSH2 0x160 ADD MLOAD PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5E7BB33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC5E7BB33 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA17 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E64207469636B6574206E6F20616C6C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C42E0C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5C42E0C5 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0xB25 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x796 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB91 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0x796 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0xB25 DUP4 DUP4 DUP4 PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0x620 DUP3 PUSH0 DUP4 PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0x620 PUSH0 DUP4 DUP4 PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x796 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDDB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDD0 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE4B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE67 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xECA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x55B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEFD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xF0F DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF30 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF3B DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF88 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF93 DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xFBE DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xF0F DUP2 PUSH2 0xED7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x100A DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x101A DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x103D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1048 DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1058 DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1074 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1087 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1095 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x10A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x10D1 DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x10E1 DUP2 PUSH2 0xED7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x113A JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x1120 PUSH2 0x10EC JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x112D JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1105 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1150 JUMPI POP PUSH1 0x1 PUSH2 0x528 JUMP JUMPDEST DUP2 PUSH2 0x115C JUMPI POP PUSH0 PUSH2 0x528 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1172 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x117C JUMPI PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x528 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x10EC JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x528 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x11BB JUMPI POP DUP2 DUP2 EXP PUSH2 0x528 JUMP JUMPDEST PUSH2 0x11C5 DUP4 DUP4 PUSH2 0x1100 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11D8 PUSH2 0x10EC JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF3B PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1142 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x528 JUMPI PUSH2 0x528 PUSH2 0x10EC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1219 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1237 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3B DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x12A2 DUP2 PUSH2 0xED7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x12A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1320 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1328 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x1331 DUP4 PUSH2 0x12F6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x133F PUSH1 0x20 DUP5 ADD PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x13BE DUP2 DUP6 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0x13DB DUP2 DUP6 ADD PUSH2 0x1293 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x528 JUMPI PUSH2 0x528 PUSH2 0x10EC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLT SGT STOP SWAP15 DUP5 SMOD 0xA8 0xBB PUSH14 0xFC97C9DD492D6570038EFE8D466A BALANCE SWAP2 0xEF 0xD8 0xFB 0xB8 PUSH15 0x2664736F6C63430008190033000000 ",
							"sourceMap": "597:3713:14:-:0;;;995:400;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:10;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1713:1:10;1917:7;:21;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3469:51:15;3442:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1243:15:14::2;:34:::0;;1337;::::2;;-1:-1:-1::0;;;1337:34:14::2;-1:-1:-1::0;;;;1291:32:14;::::2;;-1:-1:-1::0;;;1291:32:14::2;-1:-1:-1::0;;;;;;1291:32:14;;;-1:-1:-1;;;;;1243:34:14;;::::2;1291:32:::0;;;;;;;::::2;1337:34:::0;;;::::2;::::0;;;::::2;::::0;;597:3713;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:164:15:-;90:13;;139;;132:21;122:32;;112:60;;168:1;165;158:12;112:60;14:164;;;:::o;183:448::-;265:6;273;281;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:16;;-1:-1:-1;;;;;421:31:15;;411:42;;401:70;;467:1;464;457:12;401:70;490:5;-1:-1:-1;514:46:15;556:2;541:18;;514:46;:::i;:::-;504:56;;579:46;621:2;610:9;606:18;579:46;:::i;:::-;569:56;;183:448;;;;;:::o;636:127::-;697:10;692:3;688:20;685:1;678:31;728:4;725:1;718:15;752:4;749:1;742:15;768:380;847:1;843:12;;;;890;;;911:61;;965:4;957:6;953:17;943:27;;911:61;1018:2;1010:6;1007:14;987:18;984:38;981:161;;1064:10;1059:3;1055:20;1052:1;1045:31;1099:4;1096:1;1089:15;1127:4;1124:1;1117:15;981:161;;768:380;;;:::o;1279:518::-;1381:2;1376:3;1373:11;1370:421;;;1417:5;1414:1;1407:16;1461:4;1458:1;1448:18;1531:2;1519:10;1515:19;1512:1;1508:27;1502:4;1498:38;1567:4;1555:10;1552:20;1549:47;;;-1:-1:-1;1590:4:15;1549:47;1645:2;1640:3;1636:12;1633:1;1629:20;1623:4;1619:31;1609:41;;1700:81;1718:2;1711:5;1708:13;1700:81;;;1777:1;1763:16;;1744:1;1733:13;1700:81;;;1704:3;;1370:421;1279:518;;;:::o;1973:1345::-;2093:10;;-1:-1:-1;;;;;2115:30:15;;2112:56;;;2148:18;;:::i;:::-;2177:97;2267:6;2227:38;2259:4;2253:11;2227:38;:::i;:::-;2221:4;2177:97;:::i;:::-;2329:4;;2386:2;2375:14;;2403:1;2398:663;;;;3105:1;3122:6;3119:89;;;-1:-1:-1;3174:19:15;;;3168:26;3119:89;-1:-1:-1;;1930:1:15;1926:11;;;1922:24;1918:29;1908:40;1954:1;1950:11;;;1905:57;3221:81;;2368:944;;2398:663;1226:1;1219:14;;;1263:4;1250:18;;-1:-1:-1;;2434:20:15;;;2552:236;2566:7;2563:1;2560:14;2552:236;;;2655:19;;;2649:26;2634:42;;2747:27;;;;2715:1;2703:14;;;;2582:19;;2552:236;;;2556:3;2816:6;2807:7;2804:19;2801:201;;;2877:19;;;2871:26;-1:-1:-1;;2960:1:15;2956:14;;;2972:3;2952:24;2948:37;2944:42;2929:58;2914:74;;2801:201;;;3048:1;3039:6;3036:1;3032:14;3028:22;3022:4;3015:36;2368:944;;;;;1973:1345;;:::o;3323:203::-;597:3713:14;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2840,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3295,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3068,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2795,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTicket_2190": {
									"entryPoint": 2126,
									"id": 2190,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_639": {
									"entryPoint": 3243,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1540": {
									"entryPoint": null,
									"id": 1540,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1615": {
									"entryPoint": null,
									"id": 1615,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1607": {
									"entryPoint": 3201,
									"id": 1607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 2858,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_tasks_1972": {
									"entryPoint": null,
									"id": 1972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3120,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2975,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3505,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowBuyTicket_1966": {
									"entryPoint": null,
									"id": 1966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowSendTicket_1968": {
									"entryPoint": null,
									"id": 1968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1301,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1547,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1361,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTask_2044": {
									"entryPoint": null,
									"id": 2044,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTicketFrom_2279": {
									"entryPoint": 1374,
									"id": 2279,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@getTicket_2235": {
									"entryPoint": 912,
									"id": 2235,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mintToken_2100": {
									"entryPoint": 1600,
									"id": 2100,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1062,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@redEnvelopeAddr_1964": {
									"entryPoint": null,
									"id": 1964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1528,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTask_2032": {
									"entryPoint": 1206,
									"id": 2032,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1572,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1326,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2068,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1587,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_2299": {
									"entryPoint": 1948,
									"id": 2299,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 4854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_enum_Status_fromMemory": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_RedEnvelope_$1666_memory_ptr_fromMemory": {
									"entryPoint": 4879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_addresst_uint256": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13086:15",
										"nodeType": "YulBlock",
										"src": "0:13086:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:86:15",
													"nodeType": "YulBlock",
													"src": "59:86:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:15",
																"nodeType": "YulBlock",
																"src": "123:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:15",
																					"nodeType": "YulLiteral",
																					"src": "132:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:15",
																					"nodeType": "YulLiteral",
																					"src": "135:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:15"
																			},
																			"nativeSrc": "125:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:15"
																		},
																		"nativeSrc": "125:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "108:3:15",
																										"nodeType": "YulLiteral",
																										"src": "108:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "113:1:15",
																										"nodeType": "YulLiteral",
																										"src": "113:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "104:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:15"
																								},
																								"nativeSrc": "104:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "117:1:15",
																								"nodeType": "YulLiteral",
																								"src": "117:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "100:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:15"
																						},
																						"nativeSrc": "100:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:15"
																				},
																				"nativeSrc": "89:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:15"
																		},
																		"nativeSrc": "79:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:15"
																},
																"nativeSrc": "72:50:15",
																"nodeType": "YulFunctionCall",
																"src": "72:50:15"
															},
															"nativeSrc": "69:70:15",
															"nodeType": "YulIf",
															"src": "69:70:15"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:15",
														"nodeType": "YulTypedName",
														"src": "48:5:15",
														"type": ""
													}
												],
												"src": "14:131:15"
											},
											{
												"body": {
													"nativeSrc": "254:279:15",
													"nodeType": "YulBlock",
													"src": "254:279:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "300:16:15",
																"nodeType": "YulBlock",
																"src": "300:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "309:1:15",
																					"nodeType": "YulLiteral",
																					"src": "309:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "312:1:15",
																					"nodeType": "YulLiteral",
																					"src": "312:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "302:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:15"
																			},
																			"nativeSrc": "302:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:15"
																		},
																		"nativeSrc": "302:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "275:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "275:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "284:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "284:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "271:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "271:3:15"
																		},
																		"nativeSrc": "271:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "271:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "296:2:15",
																		"nodeType": "YulLiteral",
																		"src": "296:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "267:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "267:3:15"
																},
																"nativeSrc": "267:32:15",
																"nodeType": "YulFunctionCall",
																"src": "267:32:15"
															},
															"nativeSrc": "264:52:15",
															"nodeType": "YulIf",
															"src": "264:52:15"
														},
														{
															"nativeSrc": "325:33:15",
															"nodeType": "YulAssignment",
															"src": "325:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "348:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "348:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "335:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "335:12:15"
																},
																"nativeSrc": "335:23:15",
																"nodeType": "YulFunctionCall",
																"src": "335:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "325:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:15"
																}
															]
														},
														{
															"nativeSrc": "367:45:15",
															"nodeType": "YulVariableDeclaration",
															"src": "367:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "397:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "397:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "408:2:15",
																				"nodeType": "YulLiteral",
																				"src": "408:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "393:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "393:3:15"
																		},
																		"nativeSrc": "393:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "393:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "380:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "380:12:15"
																},
																"nativeSrc": "380:32:15",
																"nodeType": "YulFunctionCall",
																"src": "380:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "371:5:15",
																	"nodeType": "YulTypedName",
																	"src": "371:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "446:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "446:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "421:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "421:24:15"
																},
																"nativeSrc": "421:31:15",
																"nodeType": "YulFunctionCall",
																"src": "421:31:15"
															},
															"nativeSrc": "421:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "421:31:15"
														},
														{
															"nativeSrc": "461:15:15",
															"nodeType": "YulAssignment",
															"src": "461:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "471:5:15",
																"nodeType": "YulIdentifier",
																"src": "471:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "461:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "461:6:15"
																}
															]
														},
														{
															"nativeSrc": "485:42:15",
															"nodeType": "YulAssignment",
															"src": "485:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "512:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "512:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "523:2:15",
																				"nodeType": "YulLiteral",
																				"src": "523:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:15"
																		},
																		"nativeSrc": "508:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "508:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "495:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "495:12:15"
																},
																"nativeSrc": "495:32:15",
																"nodeType": "YulFunctionCall",
																"src": "495:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "485:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nativeSrc": "150:383:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "204:9:15",
														"nodeType": "YulTypedName",
														"src": "204:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "215:7:15",
														"nodeType": "YulTypedName",
														"src": "215:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "227:6:15",
														"nodeType": "YulTypedName",
														"src": "227:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "235:6:15",
														"nodeType": "YulTypedName",
														"src": "235:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "243:6:15",
														"nodeType": "YulTypedName",
														"src": "243:6:15",
														"type": ""
													}
												],
												"src": "150:383:15"
											},
											{
												"body": {
													"nativeSrc": "608:177:15",
													"nodeType": "YulBlock",
													"src": "608:177:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "654:16:15",
																"nodeType": "YulBlock",
																"src": "654:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "663:1:15",
																					"nodeType": "YulLiteral",
																					"src": "663:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "666:1:15",
																					"nodeType": "YulLiteral",
																					"src": "666:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "656:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "656:6:15"
																			},
																			"nativeSrc": "656:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "656:12:15"
																		},
																		"nativeSrc": "656:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "656:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "629:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "629:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "638:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "638:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "625:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "625:3:15"
																		},
																		"nativeSrc": "625:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "625:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "650:2:15",
																		"nodeType": "YulLiteral",
																		"src": "650:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "621:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:15"
																},
																"nativeSrc": "621:32:15",
																"nodeType": "YulFunctionCall",
																"src": "621:32:15"
															},
															"nativeSrc": "618:52:15",
															"nodeType": "YulIf",
															"src": "618:52:15"
														},
														{
															"nativeSrc": "679:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "679:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "705:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "705:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "692:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "692:12:15"
																},
																"nativeSrc": "692:23:15",
																"nodeType": "YulFunctionCall",
																"src": "692:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "683:5:15",
																	"nodeType": "YulTypedName",
																	"src": "683:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "749:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "749:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "724:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "724:24:15"
																},
																"nativeSrc": "724:31:15",
																"nodeType": "YulFunctionCall",
																"src": "724:31:15"
															},
															"nativeSrc": "724:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "724:31:15"
														},
														{
															"nativeSrc": "764:15:15",
															"nodeType": "YulAssignment",
															"src": "764:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "774:5:15",
																"nodeType": "YulIdentifier",
																"src": "774:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "764:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "538:247:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "574:9:15",
														"nodeType": "YulTypedName",
														"src": "574:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "585:7:15",
														"nodeType": "YulTypedName",
														"src": "585:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "597:6:15",
														"nodeType": "YulTypedName",
														"src": "597:6:15",
														"type": ""
													}
												],
												"src": "538:247:15"
											},
											{
												"body": {
													"nativeSrc": "891:76:15",
													"nodeType": "YulBlock",
													"src": "891:76:15",
													"statements": [
														{
															"nativeSrc": "901:26:15",
															"nodeType": "YulAssignment",
															"src": "901:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "913:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "913:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "924:2:15",
																		"nodeType": "YulLiteral",
																		"src": "924:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "909:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:15"
																},
																"nativeSrc": "909:18:15",
																"nodeType": "YulFunctionCall",
																"src": "909:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "901:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "901:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "943:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "943:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "954:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "936:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "936:6:15"
																},
																"nativeSrc": "936:25:15",
																"nodeType": "YulFunctionCall",
																"src": "936:25:15"
															},
															"nativeSrc": "936:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "936:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "790:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "860:9:15",
														"nodeType": "YulTypedName",
														"src": "860:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "871:6:15",
														"nodeType": "YulTypedName",
														"src": "871:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "882:4:15",
														"nodeType": "YulTypedName",
														"src": "882:4:15",
														"type": ""
													}
												],
												"src": "790:177:15"
											},
											{
												"body": {
													"nativeSrc": "1067:92:15",
													"nodeType": "YulBlock",
													"src": "1067:92:15",
													"statements": [
														{
															"nativeSrc": "1077:26:15",
															"nodeType": "YulAssignment",
															"src": "1077:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1089:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1089:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1100:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1100:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1085:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1085:3:15"
																},
																"nativeSrc": "1085:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1085:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1077:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1077:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1119:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1119:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1144:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1144:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1137:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "1137:6:15"
																				},
																				"nativeSrc": "1137:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1137:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1130:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1130:6:15"
																		},
																		"nativeSrc": "1130:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1112:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:15"
																},
																"nativeSrc": "1112:41:15",
																"nodeType": "YulFunctionCall",
																"src": "1112:41:15"
															},
															"nativeSrc": "1112:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "1112:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "972:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1036:9:15",
														"nodeType": "YulTypedName",
														"src": "1036:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1047:6:15",
														"nodeType": "YulTypedName",
														"src": "1047:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1058:4:15",
														"nodeType": "YulTypedName",
														"src": "1058:4:15",
														"type": ""
													}
												],
												"src": "972:187:15"
											},
											{
												"body": {
													"nativeSrc": "1285:297:15",
													"nodeType": "YulBlock",
													"src": "1285:297:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1302:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1302:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1313:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1295:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1295:6:15"
																},
																"nativeSrc": "1295:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1295:21:15"
															},
															"nativeSrc": "1295:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "1295:21:15"
														},
														{
															"nativeSrc": "1325:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1325:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1345:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1345:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1339:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1339:5:15"
																},
																"nativeSrc": "1339:13:15",
																"nodeType": "YulFunctionCall",
																"src": "1339:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1329:6:15",
																	"nodeType": "YulTypedName",
																	"src": "1329:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1383:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1383:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1368:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:15"
																		},
																		"nativeSrc": "1368:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:18:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1388:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1388:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1361:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1361:6:15"
																},
																"nativeSrc": "1361:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1361:34:15"
															},
															"nativeSrc": "1361:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1361:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1414:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1414:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1425:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1425:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1410:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1410:3:15"
																		},
																		"nativeSrc": "1410:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1434:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1434:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1442:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1442:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1430:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:15"
																		},
																		"nativeSrc": "1430:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1430:15:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1447:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1404:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1404:5:15"
																},
																"nativeSrc": "1404:50:15",
																"nodeType": "YulFunctionCall",
																"src": "1404:50:15"
															},
															"nativeSrc": "1404:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "1404:50:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1478:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1478:9:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1489:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1489:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1474:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1474:3:15"
																				},
																				"nativeSrc": "1474:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1474:22:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1498:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1498:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1470:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1470:3:15"
																		},
																		"nativeSrc": "1470:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1470:31:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1503:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1503:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1463:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:15"
																},
																"nativeSrc": "1463:42:15",
																"nodeType": "YulFunctionCall",
																"src": "1463:42:15"
															},
															"nativeSrc": "1463:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "1463:42:15"
														},
														{
															"nativeSrc": "1514:62:15",
															"nodeType": "YulAssignment",
															"src": "1514:62:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1530:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1530:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1549:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "1549:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1557:2:15",
																								"nodeType": "YulLiteral",
																								"src": "1557:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1545:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1545:3:15"
																						},
																						"nativeSrc": "1545:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1545:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1566:2:15",
																								"nodeType": "YulLiteral",
																								"src": "1566:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1562:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1562:3:15"
																						},
																						"nativeSrc": "1562:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1562:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1541:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:15"
																				},
																				"nativeSrc": "1541:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1526:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1526:3:15"
																		},
																		"nativeSrc": "1526:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1526:45:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1573:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1522:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1522:3:15"
																},
																"nativeSrc": "1522:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1522:54:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1514:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1514:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1164:418:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1254:9:15",
														"nodeType": "YulTypedName",
														"src": "1254:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1265:6:15",
														"nodeType": "YulTypedName",
														"src": "1265:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1276:4:15",
														"nodeType": "YulTypedName",
														"src": "1276:4:15",
														"type": ""
													}
												],
												"src": "1164:418:15"
											},
											{
												"body": {
													"nativeSrc": "1674:228:15",
													"nodeType": "YulBlock",
													"src": "1674:228:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1720:16:15",
																"nodeType": "YulBlock",
																"src": "1720:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1729:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1729:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1732:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1732:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1722:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:15"
																			},
																			"nativeSrc": "1722:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1722:12:15"
																		},
																		"nativeSrc": "1722:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1722:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1695:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1695:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1704:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1704:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1691:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1691:3:15"
																		},
																		"nativeSrc": "1691:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1691:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1716:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1716:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1687:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1687:3:15"
																},
																"nativeSrc": "1687:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1687:32:15"
															},
															"nativeSrc": "1684:52:15",
															"nodeType": "YulIf",
															"src": "1684:52:15"
														},
														{
															"nativeSrc": "1745:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1745:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1771:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1771:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1758:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1758:12:15"
																},
																"nativeSrc": "1758:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1758:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1749:5:15",
																	"nodeType": "YulTypedName",
																	"src": "1749:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1815:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1815:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1790:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "1790:24:15"
																},
																"nativeSrc": "1790:31:15",
																"nodeType": "YulFunctionCall",
																"src": "1790:31:15"
															},
															"nativeSrc": "1790:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "1790:31:15"
														},
														{
															"nativeSrc": "1830:15:15",
															"nodeType": "YulAssignment",
															"src": "1830:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "1840:5:15",
																"nodeType": "YulIdentifier",
																"src": "1840:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1830:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1830:6:15"
																}
															]
														},
														{
															"nativeSrc": "1854:42:15",
															"nodeType": "YulAssignment",
															"src": "1854:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1881:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1881:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1892:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1892:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1877:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:15"
																		},
																		"nativeSrc": "1877:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1877:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1864:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1864:12:15"
																},
																"nativeSrc": "1864:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1864:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1854:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1854:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1587:315:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1632:9:15",
														"nodeType": "YulTypedName",
														"src": "1632:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1643:7:15",
														"nodeType": "YulTypedName",
														"src": "1643:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1655:6:15",
														"nodeType": "YulTypedName",
														"src": "1655:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1663:6:15",
														"nodeType": "YulTypedName",
														"src": "1663:6:15",
														"type": ""
													}
												],
												"src": "1587:315:15"
											},
											{
												"body": {
													"nativeSrc": "2011:352:15",
													"nodeType": "YulBlock",
													"src": "2011:352:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2057:16:15",
																"nodeType": "YulBlock",
																"src": "2057:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2066:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2066:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2069:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2069:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2059:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2059:6:15"
																			},
																			"nativeSrc": "2059:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2059:12:15"
																		},
																		"nativeSrc": "2059:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2059:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2032:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2032:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2041:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2041:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2028:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:15"
																		},
																		"nativeSrc": "2028:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2028:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2053:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2053:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2024:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2024:3:15"
																},
																"nativeSrc": "2024:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2024:32:15"
															},
															"nativeSrc": "2021:52:15",
															"nodeType": "YulIf",
															"src": "2021:52:15"
														},
														{
															"nativeSrc": "2082:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2082:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2108:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2108:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2095:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2095:12:15"
																},
																"nativeSrc": "2095:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2095:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2086:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2086:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2152:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2152:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2127:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "2127:24:15"
																},
																"nativeSrc": "2127:31:15",
																"nodeType": "YulFunctionCall",
																"src": "2127:31:15"
															},
															"nativeSrc": "2127:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "2127:31:15"
														},
														{
															"nativeSrc": "2167:15:15",
															"nodeType": "YulAssignment",
															"src": "2167:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2177:5:15",
																"nodeType": "YulIdentifier",
																"src": "2177:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2167:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:15"
																}
															]
														},
														{
															"nativeSrc": "2191:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2191:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2223:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2223:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2234:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2234:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2219:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:15"
																		},
																		"nativeSrc": "2219:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2219:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2206:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2206:12:15"
																},
																"nativeSrc": "2206:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2206:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2195:7:15",
																	"nodeType": "YulTypedName",
																	"src": "2195:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2272:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "2272:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2247:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "2247:24:15"
																},
																"nativeSrc": "2247:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2247:33:15"
															},
															"nativeSrc": "2247:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2247:33:15"
														},
														{
															"nativeSrc": "2289:17:15",
															"nodeType": "YulAssignment",
															"src": "2289:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "2299:7:15",
																"nodeType": "YulIdentifier",
																"src": "2299:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2289:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:15"
																}
															]
														},
														{
															"nativeSrc": "2315:42:15",
															"nodeType": "YulAssignment",
															"src": "2315:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2342:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2342:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2353:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2353:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2338:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:15"
																		},
																		"nativeSrc": "2338:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2338:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2325:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2325:12:15"
																},
																"nativeSrc": "2325:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2325:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2315:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1907:456:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1961:9:15",
														"nodeType": "YulTypedName",
														"src": "1961:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1972:7:15",
														"nodeType": "YulTypedName",
														"src": "1972:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1984:6:15",
														"nodeType": "YulTypedName",
														"src": "1984:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1992:6:15",
														"nodeType": "YulTypedName",
														"src": "1992:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2000:6:15",
														"nodeType": "YulTypedName",
														"src": "2000:6:15",
														"type": ""
													}
												],
												"src": "1907:456:15"
											},
											{
												"body": {
													"nativeSrc": "2465:87:15",
													"nodeType": "YulBlock",
													"src": "2465:87:15",
													"statements": [
														{
															"nativeSrc": "2475:26:15",
															"nodeType": "YulAssignment",
															"src": "2475:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2487:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2487:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2498:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2498:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2483:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:15"
																},
																"nativeSrc": "2483:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2483:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2475:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2475:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2517:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2517:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2532:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2532:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2540:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2540:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2528:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2528:3:15"
																		},
																		"nativeSrc": "2528:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2528:17:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2510:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2510:6:15"
																},
																"nativeSrc": "2510:36:15",
																"nodeType": "YulFunctionCall",
																"src": "2510:36:15"
															},
															"nativeSrc": "2510:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "2510:36:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2368:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2434:9:15",
														"nodeType": "YulTypedName",
														"src": "2434:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2445:6:15",
														"nodeType": "YulTypedName",
														"src": "2445:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2456:4:15",
														"nodeType": "YulTypedName",
														"src": "2456:4:15",
														"type": ""
													}
												],
												"src": "2368:184:15"
											},
											{
												"body": {
													"nativeSrc": "2627:110:15",
													"nodeType": "YulBlock",
													"src": "2627:110:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2673:16:15",
																"nodeType": "YulBlock",
																"src": "2673:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2682:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2682:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2685:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2685:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2675:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2675:6:15"
																			},
																			"nativeSrc": "2675:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2675:12:15"
																		},
																		"nativeSrc": "2675:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2675:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2648:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2648:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2657:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2657:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2644:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2644:3:15"
																		},
																		"nativeSrc": "2644:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2644:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2669:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2669:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2640:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2640:3:15"
																},
																"nativeSrc": "2640:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2640:32:15"
															},
															"nativeSrc": "2637:52:15",
															"nodeType": "YulIf",
															"src": "2637:52:15"
														},
														{
															"nativeSrc": "2698:33:15",
															"nodeType": "YulAssignment",
															"src": "2698:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2721:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2721:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2708:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2708:12:15"
																},
																"nativeSrc": "2708:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2708:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2698:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2557:180:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2593:9:15",
														"nodeType": "YulTypedName",
														"src": "2593:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2604:7:15",
														"nodeType": "YulTypedName",
														"src": "2604:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2616:6:15",
														"nodeType": "YulTypedName",
														"src": "2616:6:15",
														"type": ""
													}
												],
												"src": "2557:180:15"
											},
											{
												"body": {
													"nativeSrc": "2863:404:15",
													"nodeType": "YulBlock",
													"src": "2863:404:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2910:16:15",
																"nodeType": "YulBlock",
																"src": "2910:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2919:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2919:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2922:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2922:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2912:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2912:6:15"
																			},
																			"nativeSrc": "2912:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2912:12:15"
																		},
																		"nativeSrc": "2912:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2912:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2884:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2893:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2880:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:15"
																		},
																		"nativeSrc": "2880:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2905:3:15",
																		"nodeType": "YulLiteral",
																		"src": "2905:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2876:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:15"
																},
																"nativeSrc": "2876:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2876:33:15"
															},
															"nativeSrc": "2873:53:15",
															"nodeType": "YulIf",
															"src": "2873:53:15"
														},
														{
															"nativeSrc": "2935:33:15",
															"nodeType": "YulAssignment",
															"src": "2935:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2958:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2958:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2945:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2945:12:15"
																},
																"nativeSrc": "2945:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2945:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2935:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2935:6:15"
																}
															]
														},
														{
															"nativeSrc": "2977:45:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2977:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3007:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3007:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3018:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3018:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3003:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3003:3:15"
																		},
																		"nativeSrc": "3003:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3003:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2990:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2990:12:15"
																},
																"nativeSrc": "2990:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2990:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2981:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2981:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3056:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3056:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3031:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "3031:24:15"
																},
																"nativeSrc": "3031:31:15",
																"nodeType": "YulFunctionCall",
																"src": "3031:31:15"
															},
															"nativeSrc": "3031:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "3031:31:15"
														},
														{
															"nativeSrc": "3071:15:15",
															"nodeType": "YulAssignment",
															"src": "3071:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "3081:5:15",
																"nodeType": "YulIdentifier",
																"src": "3081:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3071:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:15"
																}
															]
														},
														{
															"nativeSrc": "3095:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3095:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3127:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3127:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3138:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3138:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3123:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:15"
																		},
																		"nativeSrc": "3123:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3123:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3110:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3110:12:15"
																},
																"nativeSrc": "3110:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3110:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3099:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3099:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3176:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3176:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3151:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "3151:24:15"
																},
																"nativeSrc": "3151:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3151:33:15"
															},
															"nativeSrc": "3151:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3151:33:15"
														},
														{
															"nativeSrc": "3193:17:15",
															"nodeType": "YulAssignment",
															"src": "3193:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "3203:7:15",
																"nodeType": "YulIdentifier",
																"src": "3203:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3193:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:15"
																}
															]
														},
														{
															"nativeSrc": "3219:42:15",
															"nodeType": "YulAssignment",
															"src": "3219:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3246:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3246:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3257:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3257:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3242:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:15"
																		},
																		"nativeSrc": "3242:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3242:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3229:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3229:12:15"
																},
																"nativeSrc": "3229:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3229:32:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3219:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3219:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_addresst_uint256",
												"nativeSrc": "2742:525:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2805:9:15",
														"nodeType": "YulTypedName",
														"src": "2805:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2816:7:15",
														"nodeType": "YulTypedName",
														"src": "2816:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2828:6:15",
														"nodeType": "YulTypedName",
														"src": "2828:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2836:6:15",
														"nodeType": "YulTypedName",
														"src": "2836:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2844:6:15",
														"nodeType": "YulTypedName",
														"src": "2844:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2852:6:15",
														"nodeType": "YulTypedName",
														"src": "2852:6:15",
														"type": ""
													}
												],
												"src": "2742:525:15"
											},
											{
												"body": {
													"nativeSrc": "3373:102:15",
													"nodeType": "YulBlock",
													"src": "3373:102:15",
													"statements": [
														{
															"nativeSrc": "3383:26:15",
															"nodeType": "YulAssignment",
															"src": "3383:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3395:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3395:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3406:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3406:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3391:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3391:3:15"
																},
																"nativeSrc": "3391:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3391:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3383:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3383:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3425:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3440:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3440:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3456:3:15",
																								"nodeType": "YulLiteral",
																								"src": "3456:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3461:1:15",
																								"nodeType": "YulLiteral",
																								"src": "3461:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3452:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3452:3:15"
																						},
																						"nativeSrc": "3452:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3452:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3465:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3465:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3448:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3448:3:15"
																				},
																				"nativeSrc": "3448:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3448:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3436:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3436:3:15"
																		},
																		"nativeSrc": "3436:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3418:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3418:6:15"
																},
																"nativeSrc": "3418:51:15",
																"nodeType": "YulFunctionCall",
																"src": "3418:51:15"
															},
															"nativeSrc": "3418:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "3418:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3272:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3342:9:15",
														"nodeType": "YulTypedName",
														"src": "3342:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3353:6:15",
														"nodeType": "YulTypedName",
														"src": "3353:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3364:4:15",
														"nodeType": "YulTypedName",
														"src": "3364:4:15",
														"type": ""
													}
												],
												"src": "3272:203:15"
											},
											{
												"body": {
													"nativeSrc": "3603:744:15",
													"nodeType": "YulBlock",
													"src": "3603:744:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3649:16:15",
																"nodeType": "YulBlock",
																"src": "3649:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3658:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3658:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3661:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3661:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3651:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3651:6:15"
																			},
																			"nativeSrc": "3651:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3651:12:15"
																		},
																		"nativeSrc": "3651:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3651:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3624:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3633:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3620:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3620:3:15"
																		},
																		"nativeSrc": "3620:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3620:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3645:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3616:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:15"
																},
																"nativeSrc": "3616:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3616:32:15"
															},
															"nativeSrc": "3613:52:15",
															"nodeType": "YulIf",
															"src": "3613:52:15"
														},
														{
															"nativeSrc": "3674:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3674:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3700:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3687:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3687:12:15"
																},
																"nativeSrc": "3687:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3687:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3678:5:15",
																	"nodeType": "YulTypedName",
																	"src": "3678:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3744:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3744:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3719:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "3719:24:15"
																},
																"nativeSrc": "3719:31:15",
																"nodeType": "YulFunctionCall",
																"src": "3719:31:15"
															},
															"nativeSrc": "3719:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "3719:31:15"
														},
														{
															"nativeSrc": "3759:15:15",
															"nodeType": "YulAssignment",
															"src": "3759:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "3769:5:15",
																"nodeType": "YulIdentifier",
																"src": "3769:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3759:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:15"
																}
															]
														},
														{
															"nativeSrc": "3783:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3783:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3815:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3815:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3826:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3826:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3811:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3811:3:15"
																		},
																		"nativeSrc": "3811:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3811:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3798:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3798:12:15"
																},
																"nativeSrc": "3798:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3798:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3787:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3787:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3864:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3864:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3839:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "3839:24:15"
																},
																"nativeSrc": "3839:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3839:33:15"
															},
															"nativeSrc": "3839:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3839:33:15"
														},
														{
															"nativeSrc": "3881:17:15",
															"nodeType": "YulAssignment",
															"src": "3881:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "3891:7:15",
																"nodeType": "YulIdentifier",
																"src": "3891:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3881:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:15"
																}
															]
														},
														{
															"nativeSrc": "3907:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3907:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3938:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3938:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3949:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3949:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3934:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:15"
																		},
																		"nativeSrc": "3934:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3934:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3921:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3921:12:15"
																},
																"nativeSrc": "3921:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3921:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3911:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3911:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3962:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3962:28:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3972:18:15",
																"nodeType": "YulLiteral",
																"src": "3972:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3966:2:15",
																	"nodeType": "YulTypedName",
																	"src": "3966:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4017:16:15",
																"nodeType": "YulBlock",
																"src": "4017:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4026:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4026:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4029:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4029:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4019:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4019:6:15"
																			},
																			"nativeSrc": "4019:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4019:12:15"
																		},
																		"nativeSrc": "4019:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4019:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4005:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4005:6:15"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4013:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "4013:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4002:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4002:2:15"
																},
																"nativeSrc": "4002:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4002:14:15"
															},
															"nativeSrc": "3999:34:15",
															"nodeType": "YulIf",
															"src": "3999:34:15"
														},
														{
															"nativeSrc": "4042:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4042:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4056:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4056:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4067:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4067:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4052:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4052:3:15"
																},
																"nativeSrc": "4052:22:15",
																"nodeType": "YulFunctionCall",
																"src": "4052:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4046:2:15",
																	"nodeType": "YulTypedName",
																	"src": "4046:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4122:16:15",
																"nodeType": "YulBlock",
																"src": "4122:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4131:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4131:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4134:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4134:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4124:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4124:6:15"
																			},
																			"nativeSrc": "4124:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4124:12:15"
																		},
																		"nativeSrc": "4124:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4124:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4101:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4101:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4105:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4105:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4097:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4097:3:15"
																				},
																				"nativeSrc": "4097:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4097:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4112:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4112:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4093:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4093:3:15"
																		},
																		"nativeSrc": "4093:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:15"
																},
																"nativeSrc": "4086:35:15",
																"nodeType": "YulFunctionCall",
																"src": "4086:35:15"
															},
															"nativeSrc": "4083:55:15",
															"nodeType": "YulIf",
															"src": "4083:55:15"
														},
														{
															"nativeSrc": "4147:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4147:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4174:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "4174:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4161:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4161:12:15"
																},
																"nativeSrc": "4161:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4161:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4151:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4151:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4204:16:15",
																"nodeType": "YulBlock",
																"src": "4204:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4213:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4213:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4216:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4216:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4206:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4206:6:15"
																			},
																			"nativeSrc": "4206:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4206:12:15"
																		},
																		"nativeSrc": "4206:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4206:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4192:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4192:6:15"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4200:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "4200:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4189:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4189:2:15"
																},
																"nativeSrc": "4189:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4189:14:15"
															},
															"nativeSrc": "4186:34:15",
															"nodeType": "YulIf",
															"src": "4186:34:15"
														},
														{
															"body": {
																"nativeSrc": "4270:16:15",
																"nodeType": "YulBlock",
																"src": "4270:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4279:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4279:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4282:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4282:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4272:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4272:6:15"
																			},
																			"nativeSrc": "4272:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4272:12:15"
																		},
																		"nativeSrc": "4272:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4272:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4243:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4243:2:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4247:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4247:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4239:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4239:3:15"
																				},
																				"nativeSrc": "4239:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4239:15:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4256:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4256:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4235:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4235:3:15"
																		},
																		"nativeSrc": "4235:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4235:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4261:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "4261:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4232:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4232:2:15"
																},
																"nativeSrc": "4232:37:15",
																"nodeType": "YulFunctionCall",
																"src": "4232:37:15"
															},
															"nativeSrc": "4229:57:15",
															"nodeType": "YulIf",
															"src": "4229:57:15"
														},
														{
															"nativeSrc": "4295:21:15",
															"nodeType": "YulAssignment",
															"src": "4295:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4309:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "4309:2:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4313:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4313:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4305:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4305:3:15"
																},
																"nativeSrc": "4305:11:15",
																"nodeType": "YulFunctionCall",
																"src": "4305:11:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4295:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:15"
																}
															]
														},
														{
															"nativeSrc": "4325:16:15",
															"nodeType": "YulAssignment",
															"src": "4325:16:15",
															"value": {
																"name": "length",
																"nativeSrc": "4335:6:15",
																"nodeType": "YulIdentifier",
																"src": "4335:6:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4325:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr",
												"nativeSrc": "3480:867:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3545:9:15",
														"nodeType": "YulTypedName",
														"src": "3545:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3556:7:15",
														"nodeType": "YulTypedName",
														"src": "3556:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3568:6:15",
														"nodeType": "YulTypedName",
														"src": "3568:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3576:6:15",
														"nodeType": "YulTypedName",
														"src": "3576:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3584:6:15",
														"nodeType": "YulTypedName",
														"src": "3584:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3592:6:15",
														"nodeType": "YulTypedName",
														"src": "3592:6:15",
														"type": ""
													}
												],
												"src": "3480:867:15"
											},
											{
												"body": {
													"nativeSrc": "4439:301:15",
													"nodeType": "YulBlock",
													"src": "4439:301:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4485:16:15",
																"nodeType": "YulBlock",
																"src": "4485:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4494:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4494:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4497:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4497:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4487:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4487:6:15"
																			},
																			"nativeSrc": "4487:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4487:12:15"
																		},
																		"nativeSrc": "4487:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4487:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4460:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4460:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4469:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4469:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4456:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4456:3:15"
																		},
																		"nativeSrc": "4456:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4456:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4481:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4481:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4452:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4452:3:15"
																},
																"nativeSrc": "4452:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4452:32:15"
															},
															"nativeSrc": "4449:52:15",
															"nodeType": "YulIf",
															"src": "4449:52:15"
														},
														{
															"nativeSrc": "4510:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4510:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4523:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4523:12:15"
																},
																"nativeSrc": "4523:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4523:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4514:5:15",
																	"nodeType": "YulTypedName",
																	"src": "4514:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4580:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4580:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4555:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "4555:24:15"
																},
																"nativeSrc": "4555:31:15",
																"nodeType": "YulFunctionCall",
																"src": "4555:31:15"
															},
															"nativeSrc": "4555:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "4555:31:15"
														},
														{
															"nativeSrc": "4595:15:15",
															"nodeType": "YulAssignment",
															"src": "4595:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "4605:5:15",
																"nodeType": "YulIdentifier",
																"src": "4605:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4595:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:15"
																}
															]
														},
														{
															"nativeSrc": "4619:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4619:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4651:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4651:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4662:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4662:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4647:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4647:3:15"
																		},
																		"nativeSrc": "4647:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4647:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4634:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4634:12:15"
																},
																"nativeSrc": "4634:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4634:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4623:7:15",
																	"nodeType": "YulTypedName",
																	"src": "4623:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4700:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "4700:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4675:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "4675:24:15"
																},
																"nativeSrc": "4675:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4675:33:15"
															},
															"nativeSrc": "4675:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4675:33:15"
														},
														{
															"nativeSrc": "4717:17:15",
															"nodeType": "YulAssignment",
															"src": "4717:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "4727:7:15",
																"nodeType": "YulIdentifier",
																"src": "4727:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4717:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4352:388:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:15",
														"nodeType": "YulTypedName",
														"src": "4397:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4408:7:15",
														"nodeType": "YulTypedName",
														"src": "4408:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4420:6:15",
														"nodeType": "YulTypedName",
														"src": "4420:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4428:6:15",
														"nodeType": "YulTypedName",
														"src": "4428:6:15",
														"type": ""
													}
												],
												"src": "4352:388:15"
											},
											{
												"body": {
													"nativeSrc": "4777:95:15",
													"nodeType": "YulBlock",
													"src": "4777:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4794:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4794:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4801:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4801:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4806:10:15",
																				"nodeType": "YulLiteral",
																				"src": "4806:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4797:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4797:3:15"
																		},
																		"nativeSrc": "4797:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4797:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4787:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:15"
																},
																"nativeSrc": "4787:31:15",
																"nodeType": "YulFunctionCall",
																"src": "4787:31:15"
															},
															"nativeSrc": "4787:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "4787:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4834:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4834:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4837:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4837:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4827:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:15"
																},
																"nativeSrc": "4827:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4827:15:15"
															},
															"nativeSrc": "4827:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4827:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4858:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4858:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4861:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4861:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4851:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:15"
																},
																"nativeSrc": "4851:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4851:15:15"
															},
															"nativeSrc": "4851:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4851:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4745:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "4745:127:15"
											},
											{
												"body": {
													"nativeSrc": "4941:352:15",
													"nodeType": "YulBlock",
													"src": "4941:352:15",
													"statements": [
														{
															"nativeSrc": "4951:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4951:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4966:1:15",
																"nodeType": "YulLiteral",
																"src": "4966:1:15",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4955:7:15",
																	"nodeType": "YulTypedName",
																	"src": "4955:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4976:10:15",
															"nodeType": "YulAssignment",
															"src": "4976:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4985:1:15",
																"nodeType": "YulLiteral",
																"src": "4985:1:15",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4976:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4976:5:15"
																}
															]
														},
														{
															"nativeSrc": "4995:13:15",
															"nodeType": "YulAssignment",
															"src": "4995:13:15",
															"value": {
																"name": "_base",
																"nativeSrc": "5003:5:15",
																"nodeType": "YulIdentifier",
																"src": "5003:5:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4995:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4995:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5059:228:15",
																"nodeType": "YulBlock",
																"src": "5059:228:15",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5104:22:15",
																			"nodeType": "YulBlock",
																			"src": "5104:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5106:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "5106:16:15"
																						},
																						"nativeSrc": "5106:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5106:18:15"
																					},
																					"nativeSrc": "5106:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "5106:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5079:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "5079:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5093:1:15",
																									"nodeType": "YulLiteral",
																									"src": "5093:1:15",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5089:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "5089:3:15"
																							},
																							"nativeSrc": "5089:6:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5089:6:15"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5097:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "5097:4:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5085:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5085:3:15"
																					},
																					"nativeSrc": "5085:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5085:17:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5076:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "5076:2:15"
																			},
																			"nativeSrc": "5076:27:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5076:27:15"
																		},
																		"nativeSrc": "5073:53:15",
																		"nodeType": "YulIf",
																		"src": "5073:53:15"
																	},
																	{
																		"body": {
																			"nativeSrc": "5165:29:15",
																			"nodeType": "YulBlock",
																			"src": "5165:29:15",
																			"statements": [
																				{
																					"nativeSrc": "5167:25:15",
																					"nodeType": "YulAssignment",
																					"src": "5167:25:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "5180:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "5180:5:15"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "5187:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "5187:4:15"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "5176:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5176:3:15"
																						},
																						"nativeSrc": "5176:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5176:16:15"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "5167:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "5167:5:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5146:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "5146:8:15"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "5156:7:15",
																					"nodeType": "YulIdentifier",
																					"src": "5156:7:15"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5142:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5142:3:15"
																			},
																			"nativeSrc": "5142:22:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5142:22:15"
																		},
																		"nativeSrc": "5139:55:15",
																		"nodeType": "YulIf",
																		"src": "5139:55:15"
																	},
																	{
																		"nativeSrc": "5207:23:15",
																		"nodeType": "YulAssignment",
																		"src": "5207:23:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5219:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "5219:4:15"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "5225:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "5225:4:15"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "5215:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5215:3:15"
																			},
																			"nativeSrc": "5215:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5215:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "5207:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5207:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5243:34:15",
																		"nodeType": "YulAssignment",
																		"src": "5243:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "5259:7:15",
																					"nodeType": "YulIdentifier",
																					"src": "5259:7:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5268:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "5268:8:15"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "5255:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5255:3:15"
																			},
																			"nativeSrc": "5255:22:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5255:22:15"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5243:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "5243:8:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5028:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "5028:8:15"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "5038:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "5038:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5025:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5025:2:15"
																},
																"nativeSrc": "5025:21:15",
																"nodeType": "YulFunctionCall",
																"src": "5025:21:15"
															},
															"nativeSrc": "5017:270:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5047:3:15",
																"nodeType": "YulBlock",
																"src": "5047:3:15",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5021:3:15",
																"nodeType": "YulBlock",
																"src": "5021:3:15",
																"statements": []
															},
															"src": "5017:270:15"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4877:416:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "4905:5:15",
														"nodeType": "YulTypedName",
														"src": "4905:5:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4912:8:15",
														"nodeType": "YulTypedName",
														"src": "4912:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4925:5:15",
														"nodeType": "YulTypedName",
														"src": "4925:5:15",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4932:4:15",
														"nodeType": "YulTypedName",
														"src": "4932:4:15",
														"type": ""
													}
												],
												"src": "4877:416:15"
											},
											{
												"body": {
													"nativeSrc": "5357:747:15",
													"nodeType": "YulBlock",
													"src": "5357:747:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5395:52:15",
																"nodeType": "YulBlock",
																"src": "5395:52:15",
																"statements": [
																	{
																		"nativeSrc": "5409:10:15",
																		"nodeType": "YulAssignment",
																		"src": "5409:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5418:1:15",
																			"nodeType": "YulLiteral",
																			"src": "5418:1:15",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5409:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5409:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5432:5:15",
																		"nodeType": "YulLeave",
																		"src": "5432:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5377:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "5377:8:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5370:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:15"
																},
																"nativeSrc": "5370:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5370:16:15"
															},
															"nativeSrc": "5367:80:15",
															"nodeType": "YulIf",
															"src": "5367:80:15"
														},
														{
															"body": {
																"nativeSrc": "5480:52:15",
																"nodeType": "YulBlock",
																"src": "5480:52:15",
																"statements": [
																	{
																		"nativeSrc": "5494:10:15",
																		"nodeType": "YulAssignment",
																		"src": "5494:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5503:1:15",
																			"nodeType": "YulLiteral",
																			"src": "5503:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5494:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5494:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5517:5:15",
																		"nodeType": "YulLeave",
																		"src": "5517:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5466:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5466:4:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5459:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:15"
																},
																"nativeSrc": "5459:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5459:12:15"
															},
															"nativeSrc": "5456:76:15",
															"nodeType": "YulIf",
															"src": "5456:76:15"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5568:52:15",
																		"nodeType": "YulBlock",
																		"src": "5568:52:15",
																		"statements": [
																			{
																				"nativeSrc": "5582:10:15",
																				"nodeType": "YulAssignment",
																				"src": "5582:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5591:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5591:1:15",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5582:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5605:5:15",
																				"nodeType": "YulLeave",
																				"src": "5605:5:15"
																			}
																		]
																	},
																	"nativeSrc": "5561:59:15",
																	"nodeType": "YulCase",
																	"src": "5561:59:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5566:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5566:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5636:123:15",
																		"nodeType": "YulBlock",
																		"src": "5636:123:15",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "5671:22:15",
																					"nodeType": "YulBlock",
																					"src": "5671:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "5673:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "5673:16:15"
																								},
																								"nativeSrc": "5673:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5673:18:15"
																							},
																							"nativeSrc": "5673:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "5673:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "5656:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "5656:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5666:3:15",
																							"nodeType": "YulLiteral",
																							"src": "5666:3:15",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "5653:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "5653:2:15"
																					},
																					"nativeSrc": "5653:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5653:17:15"
																				},
																				"nativeSrc": "5650:43:15",
																				"nodeType": "YulIf",
																				"src": "5650:43:15"
																			},
																			{
																				"nativeSrc": "5706:25:15",
																				"nodeType": "YulAssignment",
																				"src": "5706:25:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "5719:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "5719:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5729:1:15",
																							"nodeType": "YulLiteral",
																							"src": "5729:1:15",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5715:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5715:3:15"
																					},
																					"nativeSrc": "5715:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5715:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5706:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5706:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5744:5:15",
																				"nodeType": "YulLeave",
																				"src": "5744:5:15"
																			}
																		]
																	},
																	"nativeSrc": "5629:130:15",
																	"nodeType": "YulCase",
																	"src": "5629:130:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5634:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5634:1:15",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "5548:4:15",
																"nodeType": "YulIdentifier",
																"src": "5548:4:15"
															},
															"nativeSrc": "5541:218:15",
															"nodeType": "YulSwitch",
															"src": "5541:218:15"
														},
														{
															"body": {
																"nativeSrc": "5857:70:15",
																"nodeType": "YulBlock",
																"src": "5857:70:15",
																"statements": [
																	{
																		"nativeSrc": "5871:28:15",
																		"nodeType": "YulAssignment",
																		"src": "5871:28:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5884:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "5884:4:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5890:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "5890:8:15"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "5880:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:15"
																			},
																			"nativeSrc": "5880:19:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5880:19:15"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5871:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5871:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5912:5:15",
																		"nodeType": "YulLeave",
																		"src": "5912:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5781:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "5781:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5787:2:15",
																						"nodeType": "YulLiteral",
																						"src": "5787:2:15",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5778:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5778:2:15"
																				},
																				"nativeSrc": "5778:12:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5778:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5795:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "5795:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5805:2:15",
																						"nodeType": "YulLiteral",
																						"src": "5805:2:15",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5792:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5792:2:15"
																				},
																				"nativeSrc": "5792:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5792:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5774:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5774:3:15"
																		},
																		"nativeSrc": "5774:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:35:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5818:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "5818:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5824:3:15",
																						"nodeType": "YulLiteral",
																						"src": "5824:3:15",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5815:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5815:2:15"
																				},
																				"nativeSrc": "5815:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5815:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5833:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "5833:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5843:2:15",
																						"nodeType": "YulLiteral",
																						"src": "5843:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5830:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5830:2:15"
																				},
																				"nativeSrc": "5830:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5830:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5811:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5811:3:15"
																		},
																		"nativeSrc": "5811:36:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5811:36:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5771:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5771:2:15"
																},
																"nativeSrc": "5771:77:15",
																"nodeType": "YulFunctionCall",
																"src": "5771:77:15"
															},
															"nativeSrc": "5768:159:15",
															"nodeType": "YulIf",
															"src": "5768:159:15"
														},
														{
															"nativeSrc": "5936:57:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5936:57:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5978:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5978:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5984:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "5984:8:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "5959:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5959:18:15"
																},
																"nativeSrc": "5959:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5959:34:15"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "5940:7:15",
																	"nodeType": "YulTypedName",
																	"src": "5940:7:15",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "5949:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5949:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6038:22:15",
																"nodeType": "YulBlock",
																"src": "6038:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6040:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6040:16:15"
																			},
																			"nativeSrc": "6040:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6040:18:15"
																		},
																		"nativeSrc": "6040:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6040:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6008:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6008:7:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6025:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6025:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6021:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6021:3:15"
																				},
																				"nativeSrc": "6021:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6021:6:15"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "6029:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6029:6:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6017:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6017:3:15"
																		},
																		"nativeSrc": "6017:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6017:19:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6005:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6005:2:15"
																},
																"nativeSrc": "6005:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6005:32:15"
															},
															"nativeSrc": "6002:58:15",
															"nodeType": "YulIf",
															"src": "6002:58:15"
														},
														{
															"nativeSrc": "6069:29:15",
															"nodeType": "YulAssignment",
															"src": "6069:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6082:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6082:7:15"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "6091:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6091:6:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6078:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:15"
																},
																"nativeSrc": "6078:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6078:20:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6069:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6069:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "5298:806:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5328:4:15",
														"nodeType": "YulTypedName",
														"src": "5328:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5334:8:15",
														"nodeType": "YulTypedName",
														"src": "5334:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5347:5:15",
														"nodeType": "YulTypedName",
														"src": "5347:5:15",
														"type": ""
													}
												],
												"src": "5298:806:15"
											},
											{
												"body": {
													"nativeSrc": "6177:72:15",
													"nodeType": "YulBlock",
													"src": "6177:72:15",
													"statements": [
														{
															"nativeSrc": "6187:56:15",
															"nodeType": "YulAssignment",
															"src": "6187:56:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6217:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6217:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6227:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "6227:8:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6237:4:15",
																				"nodeType": "YulLiteral",
																				"src": "6237:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6223:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6223:3:15"
																		},
																		"nativeSrc": "6223:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6223:19:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "6196:20:15",
																	"nodeType": "YulIdentifier",
																	"src": "6196:20:15"
																},
																"nativeSrc": "6196:47:15",
																"nodeType": "YulFunctionCall",
																"src": "6196:47:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6187:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6187:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "6109:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6148:4:15",
														"nodeType": "YulTypedName",
														"src": "6148:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6154:8:15",
														"nodeType": "YulTypedName",
														"src": "6154:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6167:5:15",
														"nodeType": "YulTypedName",
														"src": "6167:5:15",
														"type": ""
													}
												],
												"src": "6109:140:15"
											},
											{
												"body": {
													"nativeSrc": "6306:116:15",
													"nodeType": "YulBlock",
													"src": "6306:116:15",
													"statements": [
														{
															"nativeSrc": "6316:20:15",
															"nodeType": "YulAssignment",
															"src": "6316:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6331:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6331:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6334:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6334:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6327:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6327:3:15"
																},
																"nativeSrc": "6327:9:15",
																"nodeType": "YulFunctionCall",
																"src": "6327:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6316:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "6316:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6394:22:15",
																"nodeType": "YulBlock",
																"src": "6394:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6396:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6396:16:15"
																			},
																			"nativeSrc": "6396:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6396:18:15"
																		},
																		"nativeSrc": "6396:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6396:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6365:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "6365:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6358:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "6358:6:15"
																				},
																				"nativeSrc": "6358:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6358:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6372:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "6372:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6379:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "6379:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6388:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "6388:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6375:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6375:3:15"
																						},
																						"nativeSrc": "6375:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6375:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6369:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "6369:2:15"
																				},
																				"nativeSrc": "6369:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6369:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6355:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:15"
																		},
																		"nativeSrc": "6355:37:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6348:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:15"
																},
																"nativeSrc": "6348:45:15",
																"nodeType": "YulFunctionCall",
																"src": "6348:45:15"
															},
															"nativeSrc": "6345:71:15",
															"nodeType": "YulIf",
															"src": "6345:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6254:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6285:1:15",
														"nodeType": "YulTypedName",
														"src": "6285:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6288:1:15",
														"nodeType": "YulTypedName",
														"src": "6288:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6294:7:15",
														"nodeType": "YulTypedName",
														"src": "6294:7:15",
														"type": ""
													}
												],
												"src": "6254:168:15"
											},
											{
												"body": {
													"nativeSrc": "6662:366:15",
													"nodeType": "YulBlock",
													"src": "6662:366:15",
													"statements": [
														{
															"nativeSrc": "6672:27:15",
															"nodeType": "YulAssignment",
															"src": "6672:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6684:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6684:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6695:3:15",
																		"nodeType": "YulLiteral",
																		"src": "6695:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6680:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6680:3:15"
																},
																"nativeSrc": "6680:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6680:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6672:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6672:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6715:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6715:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6726:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6726:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:15"
																},
																"nativeSrc": "6708:25:15",
																"nodeType": "YulFunctionCall",
																"src": "6708:25:15"
															},
															"nativeSrc": "6708:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "6708:25:15"
														},
														{
															"nativeSrc": "6742:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6742:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6760:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6760:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6756:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6756:3:15"
																		},
																		"nativeSrc": "6756:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6756:11:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6769:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6769:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6752:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6752:3:15"
																},
																"nativeSrc": "6752:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6752:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6746:2:15",
																	"nodeType": "YulTypedName",
																	"src": "6746:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6791:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6802:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6802:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6787:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:15"
																		},
																		"nativeSrc": "6787:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6787:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6811:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6811:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6819:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6819:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6807:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6807:3:15"
																		},
																		"nativeSrc": "6807:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6807:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6780:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6780:6:15"
																},
																"nativeSrc": "6780:43:15",
																"nodeType": "YulFunctionCall",
																"src": "6780:43:15"
															},
															"nativeSrc": "6780:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "6780:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6843:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6843:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6854:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6854:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6839:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6839:3:15"
																		},
																		"nativeSrc": "6839:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6839:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6863:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6863:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6871:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6871:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6859:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6859:3:15"
																		},
																		"nativeSrc": "6859:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6859:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6832:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6832:6:15"
																},
																"nativeSrc": "6832:43:15",
																"nodeType": "YulFunctionCall",
																"src": "6832:43:15"
															},
															"nativeSrc": "6832:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "6832:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6895:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6895:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6906:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6906:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6891:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6891:3:15"
																		},
																		"nativeSrc": "6891:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6891:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6911:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6911:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6884:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6884:6:15"
																},
																"nativeSrc": "6884:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6884:34:15"
															},
															"nativeSrc": "6884:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6884:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6938:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6938:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6949:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6949:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6934:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6934:3:15"
																		},
																		"nativeSrc": "6934:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6934:19:15"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "6955:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6955:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6927:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6927:6:15"
																},
																"nativeSrc": "6927:35:15",
																"nodeType": "YulFunctionCall",
																"src": "6927:35:15"
															},
															"nativeSrc": "6927:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "6927:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6982:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6982:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6993:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6993:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6978:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6978:3:15"
																		},
																		"nativeSrc": "6978:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6978:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "7013:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7013:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7006:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7006:6:15"
																				},
																				"nativeSrc": "7006:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7006:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6999:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6999:6:15"
																		},
																		"nativeSrc": "6999:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6999:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6971:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6971:6:15"
																},
																"nativeSrc": "6971:51:15",
																"nodeType": "YulFunctionCall",
																"src": "6971:51:15"
															},
															"nativeSrc": "6971:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "6971:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "6427:601:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6591:9:15",
														"nodeType": "YulTypedName",
														"src": "6591:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6602:6:15",
														"nodeType": "YulTypedName",
														"src": "6602:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6610:6:15",
														"nodeType": "YulTypedName",
														"src": "6610:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6618:6:15",
														"nodeType": "YulTypedName",
														"src": "6618:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6626:6:15",
														"nodeType": "YulTypedName",
														"src": "6626:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6634:6:15",
														"nodeType": "YulTypedName",
														"src": "6634:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6642:6:15",
														"nodeType": "YulTypedName",
														"src": "6642:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6653:4:15",
														"nodeType": "YulTypedName",
														"src": "6653:4:15",
														"type": ""
													}
												],
												"src": "6427:601:15"
											},
											{
												"body": {
													"nativeSrc": "7088:325:15",
													"nodeType": "YulBlock",
													"src": "7088:325:15",
													"statements": [
														{
															"nativeSrc": "7098:22:15",
															"nodeType": "YulAssignment",
															"src": "7098:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7112:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7112:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "7115:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7115:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7108:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7108:3:15"
																},
																"nativeSrc": "7108:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7108:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7098:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7098:6:15"
																}
															]
														},
														{
															"nativeSrc": "7129:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7129:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7159:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7159:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7165:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7165:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7155:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7155:3:15"
																},
																"nativeSrc": "7155:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7155:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7133:18:15",
																	"nodeType": "YulTypedName",
																	"src": "7133:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7206:31:15",
																"nodeType": "YulBlock",
																"src": "7206:31:15",
																"statements": [
																	{
																		"nativeSrc": "7208:27:15",
																		"nodeType": "YulAssignment",
																		"src": "7208:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7222:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7222:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7230:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7230:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7218:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7218:3:15"
																			},
																			"nativeSrc": "7218:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7218:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7208:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7208:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7186:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "7186:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7179:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:15"
																},
																"nativeSrc": "7179:26:15",
																"nodeType": "YulFunctionCall",
																"src": "7179:26:15"
															},
															"nativeSrc": "7176:61:15",
															"nodeType": "YulIf",
															"src": "7176:61:15"
														},
														{
															"body": {
																"nativeSrc": "7296:111:15",
																"nodeType": "YulBlock",
																"src": "7296:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7317:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7317:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7324:3:15",
																							"nodeType": "YulLiteral",
																							"src": "7324:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7329:10:15",
																							"nodeType": "YulLiteral",
																							"src": "7329:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7320:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7320:3:15"
																					},
																					"nativeSrc": "7320:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7320:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7310:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7310:6:15"
																			},
																			"nativeSrc": "7310:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:31:15"
																		},
																		"nativeSrc": "7310:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7361:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7361:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7364:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7364:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7354:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7354:6:15"
																			},
																			"nativeSrc": "7354:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7354:15:15"
																		},
																		"nativeSrc": "7354:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7354:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7389:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7392:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7392:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7382:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7382:6:15"
																			},
																			"nativeSrc": "7382:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7382:15:15"
																		},
																		"nativeSrc": "7382:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7382:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7252:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "7252:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7275:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7275:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7283:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7283:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7272:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7272:2:15"
																		},
																		"nativeSrc": "7272:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7272:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7249:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7249:2:15"
																},
																"nativeSrc": "7249:38:15",
																"nodeType": "YulFunctionCall",
																"src": "7249:38:15"
															},
															"nativeSrc": "7246:161:15",
															"nodeType": "YulIf",
															"src": "7246:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7033:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7068:4:15",
														"nodeType": "YulTypedName",
														"src": "7068:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7077:6:15",
														"nodeType": "YulTypedName",
														"src": "7077:6:15",
														"type": ""
													}
												],
												"src": "7033:380:15"
											},
											{
												"body": {
													"nativeSrc": "7547:145:15",
													"nodeType": "YulBlock",
													"src": "7547:145:15",
													"statements": [
														{
															"nativeSrc": "7557:26:15",
															"nodeType": "YulAssignment",
															"src": "7557:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7569:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7569:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7580:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7580:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7565:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7565:3:15"
																},
																"nativeSrc": "7565:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7565:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7557:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7557:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7599:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7599:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7614:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7614:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7630:3:15",
																								"nodeType": "YulLiteral",
																								"src": "7630:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7635:1:15",
																								"nodeType": "YulLiteral",
																								"src": "7635:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7626:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "7626:3:15"
																						},
																						"nativeSrc": "7626:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "7626:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7639:1:15",
																						"nodeType": "YulLiteral",
																						"src": "7639:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7622:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7622:3:15"
																				},
																				"nativeSrc": "7622:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7622:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7610:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7610:3:15"
																		},
																		"nativeSrc": "7610:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7610:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7592:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7592:6:15"
																},
																"nativeSrc": "7592:51:15",
																"nodeType": "YulFunctionCall",
																"src": "7592:51:15"
															},
															"nativeSrc": "7592:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "7592:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7663:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7663:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7674:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7674:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7659:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7659:3:15"
																		},
																		"nativeSrc": "7659:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7659:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7679:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7679:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7652:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7652:6:15"
																},
																"nativeSrc": "7652:34:15",
																"nodeType": "YulFunctionCall",
																"src": "7652:34:15"
															},
															"nativeSrc": "7652:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "7652:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7418:274:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7508:9:15",
														"nodeType": "YulTypedName",
														"src": "7508:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7519:6:15",
														"nodeType": "YulTypedName",
														"src": "7519:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7527:6:15",
														"nodeType": "YulTypedName",
														"src": "7527:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7538:4:15",
														"nodeType": "YulTypedName",
														"src": "7538:4:15",
														"type": ""
													}
												],
												"src": "7418:274:15"
											},
											{
												"body": {
													"nativeSrc": "7871:164:15",
													"nodeType": "YulBlock",
													"src": "7871:164:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7888:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7888:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7899:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7899:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7881:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7881:6:15"
																},
																"nativeSrc": "7881:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7881:21:15"
															},
															"nativeSrc": "7881:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "7881:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7922:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7922:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7933:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7933:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7918:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7918:3:15"
																		},
																		"nativeSrc": "7918:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7918:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7938:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7938:2:15",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7911:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:15"
																},
																"nativeSrc": "7911:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7911:30:15"
															},
															"nativeSrc": "7911:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "7911:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7961:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7961:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7972:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7972:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7957:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7957:3:15"
																		},
																		"nativeSrc": "7957:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7957:18:15"
																	},
																	{
																		"hexValue": "6e6f20736574206173207461736b",
																		"kind": "string",
																		"nativeSrc": "7977:16:15",
																		"nodeType": "YulLiteral",
																		"src": "7977:16:15",
																		"type": "",
																		"value": "no set as task"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7950:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7950:6:15"
																},
																"nativeSrc": "7950:44:15",
																"nodeType": "YulFunctionCall",
																"src": "7950:44:15"
															},
															"nativeSrc": "7950:44:15",
															"nodeType": "YulExpressionStatement",
															"src": "7950:44:15"
														},
														{
															"nativeSrc": "8003:26:15",
															"nodeType": "YulAssignment",
															"src": "8003:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8015:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8015:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8026:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8026:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8011:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8011:3:15"
																},
																"nativeSrc": "8011:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8011:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8003:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8003:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7697:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7848:9:15",
														"nodeType": "YulTypedName",
														"src": "7848:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7862:4:15",
														"nodeType": "YulTypedName",
														"src": "7862:4:15",
														"type": ""
													}
												],
												"src": "7697:338:15"
											},
											{
												"body": {
													"nativeSrc": "8197:328:15",
													"nodeType": "YulBlock",
													"src": "8197:328:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8214:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8214:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8229:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8229:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8245:3:15",
																								"nodeType": "YulLiteral",
																								"src": "8245:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8250:1:15",
																								"nodeType": "YulLiteral",
																								"src": "8250:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8241:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8241:3:15"
																						},
																						"nativeSrc": "8241:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8241:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8254:1:15",
																						"nodeType": "YulLiteral",
																						"src": "8254:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8237:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8237:3:15"
																				},
																				"nativeSrc": "8237:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8237:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8225:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8225:3:15"
																		},
																		"nativeSrc": "8225:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8225:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8207:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8207:6:15"
																},
																"nativeSrc": "8207:51:15",
																"nodeType": "YulFunctionCall",
																"src": "8207:51:15"
															},
															"nativeSrc": "8207:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "8207:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8278:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8278:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8289:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8289:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8274:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:15"
																		},
																		"nativeSrc": "8274:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8274:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8294:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8294:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8267:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:15"
																},
																"nativeSrc": "8267:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8267:30:15"
															},
															"nativeSrc": "8267:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8267:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8317:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8317:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8328:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8328:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8313:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8313:3:15"
																		},
																		"nativeSrc": "8313:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8313:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8333:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8333:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8306:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8306:6:15"
																},
																"nativeSrc": "8306:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8306:34:15"
															},
															"nativeSrc": "8306:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "8306:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8366:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8366:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8377:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8377:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8362:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8362:3:15"
																		},
																		"nativeSrc": "8362:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8362:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8382:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8382:6:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8390:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8390:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8349:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8349:12:15"
																},
																"nativeSrc": "8349:48:15",
																"nodeType": "YulFunctionCall",
																"src": "8349:48:15"
															},
															"nativeSrc": "8349:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "8349:48:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8421:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8421:9:15"
																					},
																					{
																						"name": "value2",
																						"nativeSrc": "8432:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8432:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8417:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8417:3:15"
																				},
																				"nativeSrc": "8417:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8417:22:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8441:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8441:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:15"
																		},
																		"nativeSrc": "8413:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:31:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8446:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8446:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8406:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:15"
																},
																"nativeSrc": "8406:42:15",
																"nodeType": "YulFunctionCall",
																"src": "8406:42:15"
															},
															"nativeSrc": "8406:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "8406:42:15"
														},
														{
															"nativeSrc": "8457:62:15",
															"nodeType": "YulAssignment",
															"src": "8457:62:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8473:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8473:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value2",
																								"nativeSrc": "8492:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "8492:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8500:2:15",
																								"nodeType": "YulLiteral",
																								"src": "8500:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8488:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8488:3:15"
																						},
																						"nativeSrc": "8488:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8488:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8509:2:15",
																								"nodeType": "YulLiteral",
																								"src": "8509:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "8505:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8505:3:15"
																						},
																						"nativeSrc": "8505:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8505:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8484:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8484:3:15"
																				},
																				"nativeSrc": "8484:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8484:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8469:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8469:3:15"
																		},
																		"nativeSrc": "8469:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8469:45:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8516:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8516:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8465:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8465:3:15"
																},
																"nativeSrc": "8465:54:15",
																"nodeType": "YulFunctionCall",
																"src": "8465:54:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8457:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8457:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "8040:485:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8150:9:15",
														"nodeType": "YulTypedName",
														"src": "8150:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8161:6:15",
														"nodeType": "YulTypedName",
														"src": "8161:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8169:6:15",
														"nodeType": "YulTypedName",
														"src": "8169:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8177:6:15",
														"nodeType": "YulTypedName",
														"src": "8177:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8188:4:15",
														"nodeType": "YulTypedName",
														"src": "8188:4:15",
														"type": ""
													}
												],
												"src": "8040:485:15"
											},
											{
												"body": {
													"nativeSrc": "8611:103:15",
													"nodeType": "YulBlock",
													"src": "8611:103:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8657:16:15",
																"nodeType": "YulBlock",
																"src": "8657:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8666:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8666:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8669:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8669:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8659:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8659:6:15"
																			},
																			"nativeSrc": "8659:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8659:12:15"
																		},
																		"nativeSrc": "8659:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8659:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8632:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8632:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8641:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8641:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8628:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8628:3:15"
																		},
																		"nativeSrc": "8628:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8628:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8653:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8653:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8624:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:15"
																},
																"nativeSrc": "8624:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8624:32:15"
															},
															"nativeSrc": "8621:52:15",
															"nodeType": "YulIf",
															"src": "8621:52:15"
														},
														{
															"nativeSrc": "8682:26:15",
															"nodeType": "YulAssignment",
															"src": "8682:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8698:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8698:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8692:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8692:5:15"
																},
																"nativeSrc": "8692:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8692:16:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8682:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8530:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8577:9:15",
														"nodeType": "YulTypedName",
														"src": "8577:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8588:7:15",
														"nodeType": "YulTypedName",
														"src": "8588:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8600:6:15",
														"nodeType": "YulTypedName",
														"src": "8600:6:15",
														"type": ""
													}
												],
												"src": "8530:184:15"
											},
											{
												"body": {
													"nativeSrc": "8904:271:15",
													"nodeType": "YulBlock",
													"src": "8904:271:15",
													"statements": [
														{
															"nativeSrc": "8914:27:15",
															"nodeType": "YulAssignment",
															"src": "8914:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8926:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8926:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8937:3:15",
																		"nodeType": "YulLiteral",
																		"src": "8937:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8922:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:15"
																},
																"nativeSrc": "8922:19:15",
																"nodeType": "YulFunctionCall",
																"src": "8922:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8914:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8914:4:15"
																}
															]
														},
														{
															"nativeSrc": "8950:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8950:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8968:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8968:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8973:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8973:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8964:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8964:3:15"
																		},
																		"nativeSrc": "8964:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8964:11:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8977:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8977:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8960:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8960:3:15"
																},
																"nativeSrc": "8960:19:15",
																"nodeType": "YulFunctionCall",
																"src": "8960:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8954:2:15",
																	"nodeType": "YulTypedName",
																	"src": "8954:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8995:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8995:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9010:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9010:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9018:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "9018:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9006:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9006:3:15"
																		},
																		"nativeSrc": "9006:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9006:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8988:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8988:6:15"
																},
																"nativeSrc": "8988:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8988:34:15"
															},
															"nativeSrc": "8988:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "8988:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9042:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9042:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9053:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9053:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9038:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9038:3:15"
																		},
																		"nativeSrc": "9038:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9038:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9062:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9062:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9070:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "9070:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9058:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9058:3:15"
																		},
																		"nativeSrc": "9058:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9058:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9031:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:15"
																},
																"nativeSrc": "9031:43:15",
																"nodeType": "YulFunctionCall",
																"src": "9031:43:15"
															},
															"nativeSrc": "9031:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "9031:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9094:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9094:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9105:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9105:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9090:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9090:3:15"
																		},
																		"nativeSrc": "9090:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9090:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "9114:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9114:6:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9122:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "9122:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9110:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9110:3:15"
																		},
																		"nativeSrc": "9110:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9110:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9083:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9083:6:15"
																},
																"nativeSrc": "9083:43:15",
																"nodeType": "YulFunctionCall",
																"src": "9083:43:15"
															},
															"nativeSrc": "9083:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "9083:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9146:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9146:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9157:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9157:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9142:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9142:3:15"
																		},
																		"nativeSrc": "9142:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9142:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9162:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9162:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9135:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9135:6:15"
																},
																"nativeSrc": "9135:34:15",
																"nodeType": "YulFunctionCall",
																"src": "9135:34:15"
															},
															"nativeSrc": "9135:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "9135:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8719:456:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8849:9:15",
														"nodeType": "YulTypedName",
														"src": "8849:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8860:6:15",
														"nodeType": "YulTypedName",
														"src": "8860:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8868:6:15",
														"nodeType": "YulTypedName",
														"src": "8868:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8876:6:15",
														"nodeType": "YulTypedName",
														"src": "8876:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8884:6:15",
														"nodeType": "YulTypedName",
														"src": "8884:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8895:4:15",
														"nodeType": "YulTypedName",
														"src": "8895:4:15",
														"type": ""
													}
												],
												"src": "8719:456:15"
											},
											{
												"body": {
													"nativeSrc": "9237:107:15",
													"nodeType": "YulBlock",
													"src": "9237:107:15",
													"statements": [
														{
															"nativeSrc": "9247:22:15",
															"nodeType": "YulAssignment",
															"src": "9247:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9262:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9262:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9256:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9256:5:15"
																},
																"nativeSrc": "9256:13:15",
																"nodeType": "YulFunctionCall",
																"src": "9256:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9247:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9247:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9322:16:15",
																"nodeType": "YulBlock",
																"src": "9322:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9331:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9331:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9334:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9334:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9324:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9324:6:15"
																			},
																			"nativeSrc": "9324:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9324:12:15"
																		},
																		"nativeSrc": "9324:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9324:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9291:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9291:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "9312:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "9312:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "9305:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "9305:6:15"
																						},
																						"nativeSrc": "9305:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "9305:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9298:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "9298:6:15"
																				},
																				"nativeSrc": "9298:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9298:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9288:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9288:2:15"
																		},
																		"nativeSrc": "9288:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9288:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9281:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9281:6:15"
																},
																"nativeSrc": "9281:40:15",
																"nodeType": "YulFunctionCall",
																"src": "9281:40:15"
															},
															"nativeSrc": "9278:60:15",
															"nodeType": "YulIf",
															"src": "9278:60:15"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nativeSrc": "9180:164:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9216:6:15",
														"nodeType": "YulTypedName",
														"src": "9216:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9227:5:15",
														"nodeType": "YulTypedName",
														"src": "9227:5:15",
														"type": ""
													}
												],
												"src": "9180:164:15"
											},
											{
												"body": {
													"nativeSrc": "9427:124:15",
													"nodeType": "YulBlock",
													"src": "9427:124:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9473:16:15",
																"nodeType": "YulBlock",
																"src": "9473:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9482:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9482:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9485:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9485:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9475:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9475:6:15"
																			},
																			"nativeSrc": "9475:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9475:12:15"
																		},
																		"nativeSrc": "9475:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9475:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9448:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9448:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9457:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9457:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9444:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:15"
																		},
																		"nativeSrc": "9444:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9444:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9469:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9469:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9440:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9440:3:15"
																},
																"nativeSrc": "9440:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9440:32:15"
															},
															"nativeSrc": "9437:52:15",
															"nodeType": "YulIf",
															"src": "9437:52:15"
														},
														{
															"nativeSrc": "9498:47:15",
															"nodeType": "YulAssignment",
															"src": "9498:47:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9535:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9535:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "9508:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "9508:26:15"
																},
																"nativeSrc": "9508:37:15",
																"nodeType": "YulFunctionCall",
																"src": "9508:37:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9498:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9498:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9349:202:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9393:9:15",
														"nodeType": "YulTypedName",
														"src": "9393:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9404:7:15",
														"nodeType": "YulTypedName",
														"src": "9404:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9416:6:15",
														"nodeType": "YulTypedName",
														"src": "9416:6:15",
														"type": ""
													}
												],
												"src": "9349:202:15"
											},
											{
												"body": {
													"nativeSrc": "9597:303:15",
													"nodeType": "YulBlock",
													"src": "9597:303:15",
													"statements": [
														{
															"nativeSrc": "9607:19:15",
															"nodeType": "YulAssignment",
															"src": "9607:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9623:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9623:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9617:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9617:5:15"
																},
																"nativeSrc": "9617:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9617:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "9607:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9607:6:15"
																}
															]
														},
														{
															"nativeSrc": "9635:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9635:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9657:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9657:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9665:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9665:3:15",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9653:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9653:3:15"
																},
																"nativeSrc": "9653:16:15",
																"nodeType": "YulFunctionCall",
																"src": "9653:16:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "9639:10:15",
																	"nodeType": "YulTypedName",
																	"src": "9639:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9752:111:15",
																"nodeType": "YulBlock",
																"src": "9752:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9773:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9773:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9780:3:15",
																							"nodeType": "YulLiteral",
																							"src": "9780:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9785:10:15",
																							"nodeType": "YulLiteral",
																							"src": "9785:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9776:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "9776:3:15"
																					},
																					"nativeSrc": "9776:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9776:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9766:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9766:6:15"
																			},
																			"nativeSrc": "9766:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9766:31:15"
																		},
																		"nativeSrc": "9766:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9766:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9817:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9817:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9820:4:15",
																					"nodeType": "YulLiteral",
																					"src": "9820:4:15",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9810:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9810:6:15"
																			},
																			"nativeSrc": "9810:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9810:15:15"
																		},
																		"nativeSrc": "9810:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9810:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9845:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9845:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9848:4:15",
																					"nodeType": "YulLiteral",
																					"src": "9848:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9838:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9838:6:15"
																			},
																			"nativeSrc": "9838:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9838:15:15"
																		},
																		"nativeSrc": "9838:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9838:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9687:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "9687:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9699:18:15",
																				"nodeType": "YulLiteral",
																				"src": "9699:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9684:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9684:2:15"
																		},
																		"nativeSrc": "9684:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9684:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9723:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "9723:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "9735:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9735:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9720:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9720:2:15"
																		},
																		"nativeSrc": "9720:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9681:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9681:2:15"
																},
																"nativeSrc": "9681:62:15",
																"nodeType": "YulFunctionCall",
																"src": "9681:62:15"
															},
															"nativeSrc": "9678:185:15",
															"nodeType": "YulIf",
															"src": "9678:185:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9879:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9879:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "9883:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "9883:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9872:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9872:6:15"
																},
																"nativeSrc": "9872:22:15",
																"nodeType": "YulFunctionCall",
																"src": "9872:22:15"
															},
															"nativeSrc": "9872:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "9872:22:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "9556:344:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "9586:6:15",
														"nodeType": "YulTypedName",
														"src": "9586:6:15",
														"type": ""
													}
												],
												"src": "9556:344:15"
											},
											{
												"body": {
													"nativeSrc": "9965:78:15",
													"nodeType": "YulBlock",
													"src": "9965:78:15",
													"statements": [
														{
															"nativeSrc": "9975:22:15",
															"nodeType": "YulAssignment",
															"src": "9975:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9990:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9990:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9984:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9984:5:15"
																},
																"nativeSrc": "9984:13:15",
																"nodeType": "YulFunctionCall",
																"src": "9984:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9975:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9975:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10031:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10031:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "10006:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "10006:24:15"
																},
																"nativeSrc": "10006:31:15",
																"nodeType": "YulFunctionCall",
																"src": "10006:31:15"
															},
															"nativeSrc": "10006:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "10006:31:15"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "9905:138:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9944:6:15",
														"nodeType": "YulTypedName",
														"src": "9944:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9955:5:15",
														"nodeType": "YulTypedName",
														"src": "9955:5:15",
														"type": ""
													}
												],
												"src": "9905:138:15"
											},
											{
												"body": {
													"nativeSrc": "10112:87:15",
													"nodeType": "YulBlock",
													"src": "10112:87:15",
													"statements": [
														{
															"nativeSrc": "10122:22:15",
															"nodeType": "YulAssignment",
															"src": "10122:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10137:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10137:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10131:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10131:5:15"
																},
																"nativeSrc": "10131:13:15",
																"nodeType": "YulFunctionCall",
																"src": "10131:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10122:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10122:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10177:16:15",
																"nodeType": "YulBlock",
																"src": "10177:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10186:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10186:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10189:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10189:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10179:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10179:6:15"
																			},
																			"nativeSrc": "10179:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10179:12:15"
																		},
																		"nativeSrc": "10179:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10179:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10166:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10166:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10173:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10173:1:15",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10163:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10163:2:15"
																		},
																		"nativeSrc": "10163:12:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10163:12:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10156:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:15"
																},
																"nativeSrc": "10156:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10156:20:15"
															},
															"nativeSrc": "10153:40:15",
															"nodeType": "YulIf",
															"src": "10153:40:15"
														}
													]
												},
												"name": "abi_decode_enum_Status_fromMemory",
												"nativeSrc": "10048:151:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10091:6:15",
														"nodeType": "YulTypedName",
														"src": "10091:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10102:5:15",
														"nodeType": "YulTypedName",
														"src": "10102:5:15",
														"type": ""
													}
												],
												"src": "10048:151:15"
											},
											{
												"body": {
													"nativeSrc": "10314:1243:15",
													"nodeType": "YulBlock",
													"src": "10314:1243:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10361:16:15",
																"nodeType": "YulBlock",
																"src": "10361:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10370:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10370:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10373:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10373:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10363:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10363:6:15"
																			},
																			"nativeSrc": "10363:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10363:12:15"
																		},
																		"nativeSrc": "10363:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10363:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10344:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10344:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10331:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10331:3:15"
																		},
																		"nativeSrc": "10331:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10331:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10356:3:15",
																		"nodeType": "YulLiteral",
																		"src": "10356:3:15",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10327:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10327:3:15"
																},
																"nativeSrc": "10327:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10327:33:15"
															},
															"nativeSrc": "10324:53:15",
															"nodeType": "YulIf",
															"src": "10324:53:15"
														},
														{
															"nativeSrc": "10386:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10386:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10399:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "10399:15:15"
																},
																"nativeSrc": "10399:17:15",
																"nodeType": "YulFunctionCall",
																"src": "10399:17:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10390:5:15",
																	"nodeType": "YulTypedName",
																	"src": "10390:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10432:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10432:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10469:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10469:9:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nativeSrc": "10439:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "10439:29:15"
																		},
																		"nativeSrc": "10439:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10439:40:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10425:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10425:6:15"
																},
																"nativeSrc": "10425:55:15",
																"nodeType": "YulFunctionCall",
																"src": "10425:55:15"
															},
															"nativeSrc": "10425:55:15",
															"nodeType": "YulExpressionStatement",
															"src": "10425:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10500:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10500:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10507:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10507:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10496:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10496:3:15"
																		},
																		"nativeSrc": "10496:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10496:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10550:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10550:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10561:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10561:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10546:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10546:3:15"
																				},
																				"nativeSrc": "10546:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10546:18:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_enum_Status_fromMemory",
																			"nativeSrc": "10512:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "10512:33:15"
																		},
																		"nativeSrc": "10512:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10512:53:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10489:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10489:6:15"
																},
																"nativeSrc": "10489:77:15",
																"nodeType": "YulFunctionCall",
																"src": "10489:77:15"
															},
															"nativeSrc": "10489:77:15",
															"nodeType": "YulExpressionStatement",
															"src": "10489:77:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10586:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10586:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10593:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10593:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10582:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10582:3:15"
																		},
																		"nativeSrc": "10582:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10582:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10608:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10608:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10619:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10619:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10604:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10604:3:15"
																				},
																				"nativeSrc": "10604:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10604:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10598:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10598:5:15"
																		},
																		"nativeSrc": "10598:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10598:25:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10575:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10575:6:15"
																},
																"nativeSrc": "10575:49:15",
																"nodeType": "YulFunctionCall",
																"src": "10575:49:15"
															},
															"nativeSrc": "10575:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "10575:49:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10644:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10644:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10651:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10651:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10640:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10640:3:15"
																		},
																		"nativeSrc": "10640:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10640:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10666:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10666:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10677:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10677:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10662:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10662:3:15"
																				},
																				"nativeSrc": "10662:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10662:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10656:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10656:5:15"
																		},
																		"nativeSrc": "10656:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10656:25:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10633:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10633:6:15"
																},
																"nativeSrc": "10633:49:15",
																"nodeType": "YulFunctionCall",
																"src": "10633:49:15"
															},
															"nativeSrc": "10633:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "10633:49:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10702:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10702:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10709:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10709:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10698:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10698:3:15"
																		},
																		"nativeSrc": "10698:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10698:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10725:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10725:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10736:3:15",
																						"nodeType": "YulLiteral",
																						"src": "10736:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10721:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10721:3:15"
																				},
																				"nativeSrc": "10721:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10721:19:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10715:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10715:5:15"
																		},
																		"nativeSrc": "10715:26:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10715:26:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10691:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10691:6:15"
																},
																"nativeSrc": "10691:51:15",
																"nodeType": "YulFunctionCall",
																"src": "10691:51:15"
															},
															"nativeSrc": "10691:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "10691:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10762:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10762:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10769:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10769:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10758:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:15"
																		},
																		"nativeSrc": "10758:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10758:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10785:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10785:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10796:3:15",
																						"nodeType": "YulLiteral",
																						"src": "10796:3:15",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10781:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10781:3:15"
																				},
																				"nativeSrc": "10781:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10781:19:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10775:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10775:5:15"
																		},
																		"nativeSrc": "10775:26:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10775:26:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10751:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:15"
																},
																"nativeSrc": "10751:51:15",
																"nodeType": "YulFunctionCall",
																"src": "10751:51:15"
															},
															"nativeSrc": "10751:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "10751:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10822:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10822:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10829:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10829:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10818:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10818:3:15"
																		},
																		"nativeSrc": "10818:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10818:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10845:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10845:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10856:3:15",
																						"nodeType": "YulLiteral",
																						"src": "10856:3:15",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10841:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10841:3:15"
																				},
																				"nativeSrc": "10841:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10841:19:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10835:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10835:5:15"
																		},
																		"nativeSrc": "10835:26:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10835:26:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10811:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10811:6:15"
																},
																"nativeSrc": "10811:51:15",
																"nodeType": "YulFunctionCall",
																"src": "10811:51:15"
															},
															"nativeSrc": "10811:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "10811:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10882:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10882:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10889:3:15",
																				"nodeType": "YulLiteral",
																				"src": "10889:3:15",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10878:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10878:3:15"
																		},
																		"nativeSrc": "10878:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10878:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10905:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10905:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10916:3:15",
																						"nodeType": "YulLiteral",
																						"src": "10916:3:15",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10901:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10901:3:15"
																				},
																				"nativeSrc": "10901:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10901:19:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10895:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10895:5:15"
																		},
																		"nativeSrc": "10895:26:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10895:26:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10871:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10871:6:15"
																},
																"nativeSrc": "10871:51:15",
																"nodeType": "YulFunctionCall",
																"src": "10871:51:15"
															},
															"nativeSrc": "10871:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "10871:51:15"
														},
														{
															"nativeSrc": "10931:13:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10931:13:15",
															"value": {
																"kind": "number",
																"nativeSrc": "10941:3:15",
																"nodeType": "YulLiteral",
																"src": "10941:3:15",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10935:2:15",
																	"nodeType": "YulTypedName",
																	"src": "10935:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10964:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10964:5:15"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10971:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "10971:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10960:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10960:3:15"
																		},
																		"nativeSrc": "10960:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10960:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10986:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10986:9:15"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "10997:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "10997:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10982:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10982:3:15"
																				},
																				"nativeSrc": "10982:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10982:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10976:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "10976:5:15"
																		},
																		"nativeSrc": "10976:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10976:25:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10953:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:15"
																},
																"nativeSrc": "10953:49:15",
																"nodeType": "YulFunctionCall",
																"src": "10953:49:15"
															},
															"nativeSrc": "10953:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "10953:49:15"
														},
														{
															"nativeSrc": "11011:13:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11011:13:15",
															"value": {
																"kind": "number",
																"nativeSrc": "11021:3:15",
																"nodeType": "YulLiteral",
																"src": "11021:3:15",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "11015:2:15",
																	"nodeType": "YulTypedName",
																	"src": "11015:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11044:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11044:5:15"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "11051:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "11051:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11040:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11040:3:15"
																		},
																		"nativeSrc": "11040:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11040:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11066:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11066:9:15"
																					},
																					{
																						"name": "_2",
																						"nativeSrc": "11077:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "11077:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11062:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11062:3:15"
																				},
																				"nativeSrc": "11062:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11062:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11056:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "11056:5:15"
																		},
																		"nativeSrc": "11056:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11056:25:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11033:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11033:6:15"
																},
																"nativeSrc": "11033:49:15",
																"nodeType": "YulFunctionCall",
																"src": "11033:49:15"
															},
															"nativeSrc": "11033:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "11033:49:15"
														},
														{
															"nativeSrc": "11091:13:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11091:13:15",
															"value": {
																"kind": "number",
																"nativeSrc": "11101:3:15",
																"nodeType": "YulLiteral",
																"src": "11101:3:15",
																"type": "",
																"value": "320"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "11095:2:15",
																	"nodeType": "YulTypedName",
																	"src": "11095:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11124:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11124:5:15"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "11131:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "11131:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11120:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11120:3:15"
																		},
																		"nativeSrc": "11120:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11120:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11146:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11146:9:15"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "11157:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "11157:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11142:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11142:3:15"
																				},
																				"nativeSrc": "11142:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11142:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11136:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "11136:5:15"
																		},
																		"nativeSrc": "11136:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11136:25:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11113:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11113:6:15"
																},
																"nativeSrc": "11113:49:15",
																"nodeType": "YulFunctionCall",
																"src": "11113:49:15"
															},
															"nativeSrc": "11113:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "11113:49:15"
														},
														{
															"nativeSrc": "11171:13:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11171:13:15",
															"value": {
																"kind": "number",
																"nativeSrc": "11181:3:15",
																"nodeType": "YulLiteral",
																"src": "11181:3:15",
																"type": "",
																"value": "352"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "11175:2:15",
																	"nodeType": "YulTypedName",
																	"src": "11175:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11204:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11204:5:15"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "11211:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "11211:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11200:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11200:3:15"
																		},
																		"nativeSrc": "11200:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11200:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11226:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11226:9:15"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "11237:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "11237:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11222:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11222:3:15"
																				},
																				"nativeSrc": "11222:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11222:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11216:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "11216:5:15"
																		},
																		"nativeSrc": "11216:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11216:25:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11193:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11193:6:15"
																},
																"nativeSrc": "11193:49:15",
																"nodeType": "YulFunctionCall",
																"src": "11193:49:15"
															},
															"nativeSrc": "11193:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "11193:49:15"
														},
														{
															"nativeSrc": "11251:13:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11251:13:15",
															"value": {
																"kind": "number",
																"nativeSrc": "11261:3:15",
																"nodeType": "YulLiteral",
																"src": "11261:3:15",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "11255:2:15",
																	"nodeType": "YulTypedName",
																	"src": "11255:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11284:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11284:5:15"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "11291:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "11291:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11280:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11280:3:15"
																		},
																		"nativeSrc": "11280:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11280:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11330:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11330:9:15"
																					},
																					{
																						"name": "_5",
																						"nativeSrc": "11341:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "11341:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11326:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11326:3:15"
																				},
																				"nativeSrc": "11326:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11326:18:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nativeSrc": "11296:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "11296:29:15"
																		},
																		"nativeSrc": "11296:49:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11296:49:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11273:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11273:6:15"
																},
																"nativeSrc": "11273:73:15",
																"nodeType": "YulFunctionCall",
																"src": "11273:73:15"
															},
															"nativeSrc": "11273:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "11273:73:15"
														},
														{
															"nativeSrc": "11355:13:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11355:13:15",
															"value": {
																"kind": "number",
																"nativeSrc": "11365:3:15",
																"nodeType": "YulLiteral",
																"src": "11365:3:15",
																"type": "",
																"value": "416"
															},
															"variables": [
																{
																	"name": "_6",
																	"nativeSrc": "11359:2:15",
																	"nodeType": "YulTypedName",
																	"src": "11359:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11388:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11388:5:15"
																			},
																			{
																				"name": "_6",
																				"nativeSrc": "11395:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "11395:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11384:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11384:3:15"
																		},
																		"nativeSrc": "11384:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11384:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11410:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11410:9:15"
																					},
																					{
																						"name": "_6",
																						"nativeSrc": "11421:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "11421:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11406:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11406:3:15"
																				},
																				"nativeSrc": "11406:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11406:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11400:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "11400:5:15"
																		},
																		"nativeSrc": "11400:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11400:25:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11377:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11377:6:15"
																},
																"nativeSrc": "11377:49:15",
																"nodeType": "YulFunctionCall",
																"src": "11377:49:15"
															},
															"nativeSrc": "11377:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "11377:49:15"
														},
														{
															"nativeSrc": "11435:13:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11435:13:15",
															"value": {
																"kind": "number",
																"nativeSrc": "11445:3:15",
																"nodeType": "YulLiteral",
																"src": "11445:3:15",
																"type": "",
																"value": "448"
															},
															"variables": [
																{
																	"name": "_7",
																	"nativeSrc": "11439:2:15",
																	"nodeType": "YulTypedName",
																	"src": "11439:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11468:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11468:5:15"
																			},
																			{
																				"name": "_7",
																				"nativeSrc": "11475:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "11475:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11464:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11464:3:15"
																		},
																		"nativeSrc": "11464:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11464:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11511:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11511:9:15"
																					},
																					{
																						"name": "_7",
																						"nativeSrc": "11522:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "11522:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11507:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11507:3:15"
																				},
																				"nativeSrc": "11507:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11507:18:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool_fromMemory",
																			"nativeSrc": "11480:26:15",
																			"nodeType": "YulIdentifier",
																			"src": "11480:26:15"
																		},
																		"nativeSrc": "11480:46:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11480:46:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11457:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11457:6:15"
																},
																"nativeSrc": "11457:70:15",
																"nodeType": "YulFunctionCall",
																"src": "11457:70:15"
															},
															"nativeSrc": "11457:70:15",
															"nodeType": "YulExpressionStatement",
															"src": "11457:70:15"
														},
														{
															"nativeSrc": "11536:15:15",
															"nodeType": "YulAssignment",
															"src": "11536:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "11546:5:15",
																"nodeType": "YulIdentifier",
																"src": "11546:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11536:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11536:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_RedEnvelope_$1666_memory_ptr_fromMemory",
												"nativeSrc": "10204:1353:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10280:9:15",
														"nodeType": "YulTypedName",
														"src": "10280:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10291:7:15",
														"nodeType": "YulTypedName",
														"src": "10291:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10303:6:15",
														"nodeType": "YulTypedName",
														"src": "10303:6:15",
														"type": ""
													}
												],
												"src": "10204:1353:15"
											},
											{
												"body": {
													"nativeSrc": "11736:169:15",
													"nodeType": "YulBlock",
													"src": "11736:169:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11753:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11753:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11764:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11764:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11746:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11746:6:15"
																},
																"nativeSrc": "11746:21:15",
																"nodeType": "YulFunctionCall",
																"src": "11746:21:15"
															},
															"nativeSrc": "11746:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "11746:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11787:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11798:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11798:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11783:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:15"
																		},
																		"nativeSrc": "11783:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11783:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11803:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11803:2:15",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11776:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:15"
																},
																"nativeSrc": "11776:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11776:30:15"
															},
															"nativeSrc": "11776:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "11776:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11826:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11826:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11837:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11837:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11822:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11822:3:15"
																		},
																		"nativeSrc": "11822:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11822:18:15"
																	},
																	{
																		"hexValue": "627579207469636b6574206e6f20616c6c6f77",
																		"kind": "string",
																		"nativeSrc": "11842:21:15",
																		"nodeType": "YulLiteral",
																		"src": "11842:21:15",
																		"type": "",
																		"value": "buy ticket no allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11815:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11815:6:15"
																},
																"nativeSrc": "11815:49:15",
																"nodeType": "YulFunctionCall",
																"src": "11815:49:15"
															},
															"nativeSrc": "11815:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "11815:49:15"
														},
														{
															"nativeSrc": "11873:26:15",
															"nodeType": "YulAssignment",
															"src": "11873:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11885:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11885:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11896:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11896:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11881:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11881:3:15"
																},
																"nativeSrc": "11881:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11881:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11873:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11873:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11562:343:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11713:9:15",
														"nodeType": "YulTypedName",
														"src": "11713:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11727:4:15",
														"nodeType": "YulTypedName",
														"src": "11727:4:15",
														"type": ""
													}
												],
												"src": "11562:343:15"
											},
											{
												"body": {
													"nativeSrc": "12067:188:15",
													"nodeType": "YulBlock",
													"src": "12067:188:15",
													"statements": [
														{
															"nativeSrc": "12077:26:15",
															"nodeType": "YulAssignment",
															"src": "12077:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12089:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12089:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12100:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12100:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12085:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12085:3:15"
																},
																"nativeSrc": "12085:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12085:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12077:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12077:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12119:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12119:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12130:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12130:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12112:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12112:6:15"
																},
																"nativeSrc": "12112:25:15",
																"nodeType": "YulFunctionCall",
																"src": "12112:25:15"
															},
															"nativeSrc": "12112:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "12112:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12157:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12157:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12168:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12168:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12153:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12153:3:15"
																		},
																		"nativeSrc": "12153:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12153:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12177:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12177:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12193:3:15",
																								"nodeType": "YulLiteral",
																								"src": "12193:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12198:1:15",
																								"nodeType": "YulLiteral",
																								"src": "12198:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12189:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "12189:3:15"
																						},
																						"nativeSrc": "12189:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "12189:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12202:1:15",
																						"nodeType": "YulLiteral",
																						"src": "12202:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12185:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12185:3:15"
																				},
																				"nativeSrc": "12185:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12185:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12173:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12173:3:15"
																		},
																		"nativeSrc": "12173:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12173:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12146:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12146:6:15"
																},
																"nativeSrc": "12146:60:15",
																"nodeType": "YulFunctionCall",
																"src": "12146:60:15"
															},
															"nativeSrc": "12146:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "12146:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12226:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12226:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12237:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12237:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12222:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12222:3:15"
																		},
																		"nativeSrc": "12222:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12222:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12242:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12242:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12215:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12215:6:15"
																},
																"nativeSrc": "12215:34:15",
																"nodeType": "YulFunctionCall",
																"src": "12215:34:15"
															},
															"nativeSrc": "12215:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "12215:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11910:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12020:9:15",
														"nodeType": "YulTypedName",
														"src": "12020:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12031:6:15",
														"nodeType": "YulTypedName",
														"src": "12031:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12039:6:15",
														"nodeType": "YulTypedName",
														"src": "12039:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12047:6:15",
														"nodeType": "YulTypedName",
														"src": "12047:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12058:4:15",
														"nodeType": "YulTypedName",
														"src": "12058:4:15",
														"type": ""
													}
												],
												"src": "11910:345:15"
											},
											{
												"body": {
													"nativeSrc": "12434:170:15",
													"nodeType": "YulBlock",
													"src": "12434:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12451:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12451:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12462:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12462:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12444:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12444:6:15"
																},
																"nativeSrc": "12444:21:15",
																"nodeType": "YulFunctionCall",
																"src": "12444:21:15"
															},
															"nativeSrc": "12444:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "12444:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12485:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12485:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12496:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12496:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12481:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12481:3:15"
																		},
																		"nativeSrc": "12481:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12481:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12501:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12501:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12474:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:15"
																},
																"nativeSrc": "12474:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12474:30:15"
															},
															"nativeSrc": "12474:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12474:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12524:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12524:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12535:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12535:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12520:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12520:3:15"
																		},
																		"nativeSrc": "12520:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12520:18:15"
																	},
																	{
																		"hexValue": "73656e64207469636b6574206e6f20616c6c6f77",
																		"kind": "string",
																		"nativeSrc": "12540:22:15",
																		"nodeType": "YulLiteral",
																		"src": "12540:22:15",
																		"type": "",
																		"value": "send ticket no allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12513:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12513:6:15"
																},
																"nativeSrc": "12513:50:15",
																"nodeType": "YulFunctionCall",
																"src": "12513:50:15"
															},
															"nativeSrc": "12513:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "12513:50:15"
														},
														{
															"nativeSrc": "12572:26:15",
															"nodeType": "YulAssignment",
															"src": "12572:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12584:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12584:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12595:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12595:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12580:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:15"
																},
																"nativeSrc": "12580:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12580:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12572:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12572:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12260:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12411:9:15",
														"nodeType": "YulTypedName",
														"src": "12411:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12425:4:15",
														"nodeType": "YulTypedName",
														"src": "12425:4:15",
														"type": ""
													}
												],
												"src": "12260:344:15"
											},
											{
												"body": {
													"nativeSrc": "12766:188:15",
													"nodeType": "YulBlock",
													"src": "12766:188:15",
													"statements": [
														{
															"nativeSrc": "12776:26:15",
															"nodeType": "YulAssignment",
															"src": "12776:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12788:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12788:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12799:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12799:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12784:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12784:3:15"
																},
																"nativeSrc": "12784:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12784:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12776:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12776:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12818:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12818:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12833:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12833:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12849:3:15",
																								"nodeType": "YulLiteral",
																								"src": "12849:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12854:1:15",
																								"nodeType": "YulLiteral",
																								"src": "12854:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12845:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "12845:3:15"
																						},
																						"nativeSrc": "12845:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "12845:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12858:1:15",
																						"nodeType": "YulLiteral",
																						"src": "12858:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12841:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12841:3:15"
																				},
																				"nativeSrc": "12841:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12841:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12829:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12829:3:15"
																		},
																		"nativeSrc": "12829:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12829:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12811:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:15"
																},
																"nativeSrc": "12811:51:15",
																"nodeType": "YulFunctionCall",
																"src": "12811:51:15"
															},
															"nativeSrc": "12811:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "12811:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12882:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12882:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12893:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12893:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12878:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12878:3:15"
																		},
																		"nativeSrc": "12878:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12878:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12898:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12898:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12871:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12871:6:15"
																},
																"nativeSrc": "12871:34:15",
																"nodeType": "YulFunctionCall",
																"src": "12871:34:15"
															},
															"nativeSrc": "12871:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "12871:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12925:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12925:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12936:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12936:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12921:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12921:3:15"
																		},
																		"nativeSrc": "12921:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12921:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12941:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12941:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12914:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12914:6:15"
																},
																"nativeSrc": "12914:34:15",
																"nodeType": "YulFunctionCall",
																"src": "12914:34:15"
															},
															"nativeSrc": "12914:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "12914:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12609:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12719:9:15",
														"nodeType": "YulTypedName",
														"src": "12719:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12730:6:15",
														"nodeType": "YulTypedName",
														"src": "12730:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12738:6:15",
														"nodeType": "YulTypedName",
														"src": "12738:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12746:6:15",
														"nodeType": "YulTypedName",
														"src": "12746:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12757:4:15",
														"nodeType": "YulTypedName",
														"src": "12757:4:15",
														"type": ""
													}
												],
												"src": "12609:345:15"
											},
											{
												"body": {
													"nativeSrc": "13007:77:15",
													"nodeType": "YulBlock",
													"src": "13007:77:15",
													"statements": [
														{
															"nativeSrc": "13017:16:15",
															"nodeType": "YulAssignment",
															"src": "13017:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13028:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13028:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13031:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13031:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13024:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13024:3:15"
																},
																"nativeSrc": "13024:9:15",
																"nodeType": "YulFunctionCall",
																"src": "13024:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13017:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13017:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13056:22:15",
																"nodeType": "YulBlock",
																"src": "13056:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13058:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "13058:16:15"
																			},
																			"nativeSrc": "13058:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13058:18:15"
																		},
																		"nativeSrc": "13058:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13058:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13048:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13048:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13051:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13051:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13045:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13045:2:15"
																},
																"nativeSrc": "13045:10:15",
																"nodeType": "YulFunctionCall",
																"src": "13045:10:15"
															},
															"nativeSrc": "13042:36:15",
															"nodeType": "YulIf",
															"src": "13042:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12959:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12990:1:15",
														"nodeType": "YulTypedName",
														"src": "12990:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12993:1:15",
														"nodeType": "YulTypedName",
														"src": "12993:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12999:3:15",
														"nodeType": "YulTypedName",
														"src": "12999:3:15",
														"type": ""
													}
												],
												"src": "12959:125:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"no set as task\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), value2)\n        calldatacopy(add(headStart, 96), value1, value2)\n        mstore(add(add(headStart, value2), 96), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 480)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_enum_Status_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_RedEnvelope_$1666_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 480) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_address_fromMemory(headStart))\n        mstore(add(value, 32), abi_decode_enum_Status_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), mload(add(headStart, 64)))\n        mstore(add(value, 96), mload(add(headStart, 96)))\n        mstore(add(value, 128), mload(add(headStart, 128)))\n        mstore(add(value, 160), mload(add(headStart, 160)))\n        mstore(add(value, 192), mload(add(headStart, 192)))\n        mstore(add(value, 224), mload(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), mload(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), mload(add(headStart, _2)))\n        let _3 := 320\n        mstore(add(value, _3), mload(add(headStart, _3)))\n        let _4 := 352\n        mstore(add(value, _4), mload(add(headStart, _4)))\n        let _5 := 384\n        mstore(add(value, _5), abi_decode_address_fromMemory(add(headStart, _5)))\n        let _6 := 416\n        mstore(add(value, _6), mload(add(headStart, _6)))\n        let _7 := 448\n        mstore(add(value, _7), abi_decode_bool_fromMemory(add(headStart, _7)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"buy ticket no allow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"send ticket no allow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xC7FF23BB GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xC7FF23BB EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xD896FC10 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xE405663F EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xB4309A9C EQ PUSH2 0x2D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6EBD327B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12C911E EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x19F232A EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x6E2A29A EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x82921A5 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1BB SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x194 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH2 0x194 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1BB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH2 0x194 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST PUSH0 PUSH2 0x39D PUSH1 0x12 PUSH1 0xA PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x3A7 SWAP1 DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP PUSH2 0x3B2 DUP2 PUSH2 0x551 JUMP JUMPDEST PUSH0 PUSH2 0x3BE DUP6 DUP6 DUP6 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x435 SWAP1 PUSH2 0x1205 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x461 SWAP1 PUSH2 0x1205 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x483 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4BE PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xD7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x522 DUP2 DUP6 DUP6 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x53B DUP6 DUP3 DUP6 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x546 DUP6 DUP6 DUP6 PUSH2 0xB9F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x55B CALLER DUP3 PUSH2 0xBFC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x56B PUSH1 0x12 PUSH1 0xA PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x575 SWAP1 DUP4 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP PUSH2 0x581 DUP5 DUP3 PUSH2 0x60B JUMP JUMPDEST PUSH0 PUSH2 0x58D DUP7 DUP6 DUP6 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x609 PUSH0 PUSH2 0xC30 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x616 DUP3 CALLER DUP4 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x620 DUP3 DUP3 PUSH2 0xBFC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x435 SWAP1 PUSH2 0x1205 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x522 DUP2 DUP6 DUP6 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x648 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6E6F20736574206173207461736B PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70D64693 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH4 0xE1AC8D26 SWAP1 PUSH2 0x6E5 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x701 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP PUSH2 0x73B DUP5 DUP3 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x4D914FBDB28A885441BB0F6E06BB01DFDFE8A8B6902391853B46EB747AE136EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH2 0x796 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7A4 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x81C PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0x55B DUP2 PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8F91CD17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8F91CD17 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA21 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x627579207469636B6574206E6F20616C6C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69B JUMP JUMPDEST PUSH0 DUP5 DUP3 PUSH2 0x160 ADD MLOAD PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5E7BB33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC5E7BB33 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA17 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E64207469636B6574206E6F20616C6C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C42E0C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5C42E0C5 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0xB25 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x796 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB91 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0x796 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0xB25 DUP4 DUP4 DUP4 PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0x620 DUP3 PUSH0 DUP4 PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH2 0x620 PUSH0 DUP4 DUP4 PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x796 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDDB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDD0 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE4B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE67 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xECA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x55B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEFD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xF0F DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF30 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF3B DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF88 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF93 DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xFBE DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xF0F DUP2 PUSH2 0xED7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x100A DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x101A DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x103D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1048 DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1058 DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1074 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1087 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1095 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x10A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x10D1 DUP2 PUSH2 0xED7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x10E1 DUP2 PUSH2 0xED7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x113A JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x1120 PUSH2 0x10EC JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x112D JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1105 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1150 JUMPI POP PUSH1 0x1 PUSH2 0x528 JUMP JUMPDEST DUP2 PUSH2 0x115C JUMPI POP PUSH0 PUSH2 0x528 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1172 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x117C JUMPI PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x528 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x10EC JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x528 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x11BB JUMPI POP DUP2 DUP2 EXP PUSH2 0x528 JUMP JUMPDEST PUSH2 0x11C5 DUP4 DUP4 PUSH2 0x1100 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x11D8 JUMPI PUSH2 0x11D8 PUSH2 0x10EC JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF3B PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1142 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x528 JUMPI PUSH2 0x528 PUSH2 0x10EC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1219 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1237 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3B DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x12A2 DUP2 PUSH2 0xED7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x12A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1320 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1328 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x1331 DUP4 PUSH2 0x12F6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x133F PUSH1 0x20 DUP5 ADD PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x13BE DUP2 DUP6 ADD PUSH2 0x12F6 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0x13DB DUP2 DUP6 ADD PUSH2 0x1293 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x528 JUMPI PUSH2 0x528 PUSH2 0x10EC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLT SGT STOP SWAP15 DUP5 SMOD 0xA8 0xBB PUSH14 0xFC97C9DD492D6570038EFE8D466A BALANCE SWAP2 0xEF 0xD8 0xFB 0xB8 PUSH15 0x2664736F6C63430008190033000000 ",
							"sourceMap": "597:3713:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3328:372;;;;;;:::i;:::-;;:::i;:::-;;1774:116;;;;;;:::i;:::-;-1:-1:-1;;;;;1862:17:14;1832:7;1862:17;;;:6;:17;;;;;;;1774:116;;;;936:25:15;;;924:2;909:18;1774:116:14;;;;;;;;820:27;;;;;-1:-1:-1;;;820:27:14;;;;;;;;;1137:14:15;;1130:22;1112:41;;1100:2;1085:18;820:27:14;972:187:15;2074:89:2;;;:::i;:::-;;;;;;;:::i;1598:167:14:-;;;;;;:::i;:::-;;:::i;4293:186:2:-;;;;;;:::i;:::-;;:::i;3144:97::-;3222:12;;3144:97;;5039:244;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2510:36:15;;2498:2;2483:18;3002:82:2;2368:184:15;618:87:4;;;;;;:::i;:::-;;:::i;3709:407:14:-;;;;;;:::i;:::-;;:::i;3299:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1021:158:4:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;3436:32:15;;;3418:51;;3406:2;3391:18;1638:85:0;3272:203:15;2276:93:2;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;784:26:14:-;;;;;-1:-1:-1;;;784:26:14;;;;;;744:30;;;;;-1:-1:-1;;;;;744:30:14;;;1901:491;;;;;;:::i;:::-;;:::i;4158:146::-;;;;;;:::i;:::-;;:::i;3846:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;858:41:14;;;;;;:::i;:::-;;;;;;;;;;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;3328:372:14:-;3446:14;3480:16;3075:2:2;3480::14;:16;:::i;:::-;3463:33;;:14;:33;:::i;:::-;3446:50;;3510:12;3515:6;3510:4;:12::i;:::-;3536:8;3547:46;3558:3;3562:15;3578:14;3547:10;:46::i;:::-;3613:76;;;6708:25:15;;;3635:10:14;6802:2:15;6787:18;;6780:43;-1:-1:-1;;;;;6859:15:15;;6839:18;;;6832:43;6906:2;6891:18;;6884:34;;;6949:3;6934:19;;6927:35;;;7006:14;;6999:22;6760:3;6978:19;;6971:51;3613:76:14;;7006:14:15;;-1:-1:-1;3613:76:14;;;;;;6695:3:15;3613:76:14;;;3432:268;;3328:372;;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;1598:167:14:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1681:17:14;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;;;:27;;;1727;;7592:51:15;;;7659:18;;7652:34;;;1727:27:14::1;::::0;7565:18:15;1727:27:14::1;;;;;;;1598:167:::0;;:::o;4293:186:2:-;4366:4;735:10:9;4420:31:2;735:10:9;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:9;5182:37:2;5198:4;735:10:9;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;618:87:4:-;672:26;735:10:9;692:5:4;672;:26::i;:::-;618:87;:::o;3709:407:14:-;3852:14;3886:16;3075:2:2;3886::14;:16;:::i;:::-;3869:33;;:14;:33;:::i;:::-;3852:50;;3916:29;3925:12;3938:6;3916:8;:29::i;:::-;3959:8;3970:46;3981:3;3985:15;4001:14;3970:10;:46::i;:::-;4036:69;;;6708:25:15;;;-1:-1:-1;;;;;6807:15:15;;;6802:2;6787:18;;6780:43;6859:15;;6839:18;;;6832:43;6906:2;6891:18;;6884:34;;;6949:3;6934:19;;6927:35;;;7006:14;;6999:22;6760:3;6978:19;;6971:51;4036:69:14;;7006:14:15;;-1:-1:-1;4036:69:14;;;;;;6695:3:15;4036:69:14;;;3838:278;;3709:407;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;735:10:9;1135:5:4;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:9;3733:27:2;735:10:9;3750:2:2;3754:5;3733:9;:27::i;1901:491:14:-;2356:21:10;:19;:21::i;:::-;-1:-1:-1;;;;;2044:17:14;::::1;;::::0;;;:6:::1;:17;::::0;;;;;:22;;2036:48:::1;;;::::0;-1:-1:-1;;;2036:48:14;;7899:2:15;2036:48:14::1;::::0;::::1;7881:21:15::0;7938:2;7918:18;;;7911:30;-1:-1:-1;;;7957:18:15;;;7950:44;8011:18;;2036:48:14::1;;;;;;;;;-1:-1:-1::0;;;;;2238:17:14;::::1;2160:14;2238:17:::0;;;:6:::1;:17;::::0;;;;;;2177:58;;-1:-1:-1;;;2177:58:14;;2160:14;;2238:17;;2177:31:::1;::::0;:58:::1;::::0;2217:10:::1;::::0;2229:5;;;;2177:58:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;;;:::i;:::-;2160:95;;2269:30;2275:15;2292:6;2269:5;:30::i;:::-;2318:63;::::0;;2336:10:::1;8988:34:15::0;;-1:-1:-1;;;;;9058:15:15;;;9053:2;9038:18;;9031:43;9110:15;;9090:18;;;9083:43;9157:2;9142:18;;9135:34;;;2318:63:14;;::::1;::::0;;;;8937:3:15;2318:63:14;;::::1;2022:370;2398:20:10::0;1713:1;2924:7;:21;2744:208;2398:20;1901:491:14;;;;:::o;4158:146::-;1531:13:0;:11;:13::i;:::-;4258:35:14::1;::::0;-1:-1:-1;;;4258:35:14;;-1:-1:-1;;;;;7610:32:15;;;4258:35:14::1;::::0;::::1;7592:51:15::0;7659:18;;;7652:34;;;4258:23:14;::::1;::::0;::::1;::::0;7565:18:15;;4258:35:14::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2543:215:0:-:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3418:51:15::0;3391:18;;2672:31:0::1;3272:203:15::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2402:916:14:-:0;2592:15;;2579:50;;-1:-1:-1;;;2579:50:14;;;;;936:25:15;;;2498:4:14;;2528;;2498;;-1:-1:-1;;;;;2592:15:14;;2579:45;;909:18:15;;2579:50:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2647:25;;;;2546:83;;-1:-1:-1;;;;;;2647:39:14;2643:641;;2719:14;;-1:-1:-1;;;2719:14:14;;;;:22;;2737:4;2719:22;2711:54;;;;-1:-1:-1;;;2711:54:14;;11764:2:15;2711:54:14;;;11746:21:15;11803:2;11783:18;;;11776:30;-1:-1:-1;;;11822:18:15;;;11815:49;11881:18;;2711:54:14;11562:343:15;2711:54:14;2783:21;2833:14;2807:11;:23;;;:40;;;;:::i;:::-;2872:23;;2905:15;;2865:70;;-1:-1:-1;;;2865:70:14;;-1:-1:-1;;;;;2905:15:14;;;2865:70;;;7592:51:15;7659:18;;;7652:34;;;2783:64:14;;-1:-1:-1;2865:39:14;;;;7565:18:15;;2865:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2973:15:14;;2960:76;;-1:-1:-1;;;2960:76:14;;;;;12112:25:15;;;-1:-1:-1;;;;;12173:32:15;;;12153:18;;;12146:60;12222:18;;;12215:34;;;2973:15:14;;;;2960:40;;12085:18:15;;2960:76:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2687:364;2643:641;;;3081:15;;-1:-1:-1;;;3081:15:14;;;;:23;;3100:4;3081:23;3073:56;;;;-1:-1:-1;;;3073:56:14;;12462:2:15;3073:56:14;;;12444:21:15;12501:2;12481:18;;;12474:30;-1:-1:-1;;;12520:18:15;;;12513:50;12580:18;;3073:56:14;12260:344:15;3073:56:14;3176:15;;3163:77;;-1:-1:-1;;;3163:77:14;;;;;12112:25:15;;;-1:-1:-1;;;;;12173:32:15;;;12153:18;;;12146:60;12222:18;;;12215:34;;;3176:15:14;;;;3163:41;;12085:18:15;;3163:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3264:5;3258:11;;2643:641;-1:-1:-1;3304:3:14;2402:916;-1:-1:-1;;;;2402:916:14:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:9;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;3418:51:15;3391:18;;1901:40:0;3272:203:15;8989:128:2;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;12829:32:15;;10936:60:2;;;12811:51:15;12878:18;;;12871:34;;;12921:18;;;12914:34;;;12784:18;;10936:60:2;12609:345:15;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;3418:51:15;3391:18;;5780:30:2;3272:203:15;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;3418:51:15;3391:18;;5873:32:2;3272:203:15;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;8247:206::-;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;3418:51:15;3391:18;;8361:30:2;3272:203:15;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2431:307:10:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:10;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;3418:51:15;3391:18;;7835:32:2;3272:203:15;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;3418:51:15;3391:18;;10103:32:2;3272:203:15;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;3418:51:15;3391:18;;10203:31:2;3272:203:15;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;936:25:15;;924:2;909:18;;790:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;12829:32:15;;6649:50:2;;;12811:51:15;12878:18;;;12871:34;;;12921:18;;;12914:34;;;12784:18;;6649:50:2;12609:345:15;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;936::15;;924:2;909:18;;790:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:131:15:-;-1:-1:-1;;;;;89:31:15;;79:42;;69:70;;135:1;132;125:12;150:383;227:6;235;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;348:9;335:23;325:33;;408:2;397:9;393:18;380:32;421:31;446:5;421:31;:::i;:::-;150:383;;471:5;;-1:-1:-1;;;523:2:15;508:18;;;;495:32;;150:383::o;538:247::-;597:6;650:2;638:9;629:7;625:23;621:32;618:52;;;666:1;663;656:12;618:52;705:9;692:23;724:31;749:5;724:31;:::i;:::-;774:5;538:247;-1:-1:-1;;;538:247:15:o;1164:418::-;1313:2;1302:9;1295:21;1276:4;1345:6;1339:13;1388:6;1383:2;1372:9;1368:18;1361:34;1447:6;1442:2;1434:6;1430:15;1425:2;1414:9;1410:18;1404:50;1503:1;1498:2;1489:6;1478:9;1474:22;1470:31;1463:42;1573:2;1566;1562:7;1557:2;1549:6;1545:15;1541:29;1530:9;1526:45;1522:54;1514:62;;;1164:418;;;;:::o;1587:315::-;1655:6;1663;1716:2;1704:9;1695:7;1691:23;1687:32;1684:52;;;1732:1;1729;1722:12;1684:52;1771:9;1758:23;1790:31;1815:5;1790:31;:::i;:::-;1840:5;1892:2;1877:18;;;;1864:32;;-1:-1:-1;;;1587:315:15:o;1907:456::-;1984:6;1992;2000;2053:2;2041:9;2032:7;2028:23;2024:32;2021:52;;;2069:1;2066;2059:12;2021:52;2108:9;2095:23;2127:31;2152:5;2127:31;:::i;:::-;2177:5;-1:-1:-1;2234:2:15;2219:18;;2206:32;2247:33;2206:32;2247:33;:::i;2557:180::-;2616:6;2669:2;2657:9;2648:7;2644:23;2640:32;2637:52;;;2685:1;2682;2675:12;2637:52;-1:-1:-1;2708:23:15;;2557:180;-1:-1:-1;2557:180:15:o;2742:525::-;2828:6;2836;2844;2852;2905:3;2893:9;2884:7;2880:23;2876:33;2873:53;;;2922:1;2919;2912:12;2873:53;2958:9;2945:23;2935:33;;3018:2;3007:9;3003:18;2990:32;3031:31;3056:5;3031:31;:::i;:::-;3081:5;-1:-1:-1;3138:2:15;3123:18;;3110:32;3151:33;3110:32;3151:33;:::i;:::-;2742:525;;;;-1:-1:-1;3203:7:15;;3257:2;3242:18;3229:32;;-1:-1:-1;;2742:525:15:o;3480:867::-;3568:6;3576;3584;3592;3645:2;3633:9;3624:7;3620:23;3616:32;3613:52;;;3661:1;3658;3651:12;3613:52;3700:9;3687:23;3719:31;3744:5;3719:31;:::i;:::-;3769:5;-1:-1:-1;3826:2:15;3811:18;;3798:32;3839:33;3798:32;3839:33;:::i;:::-;3891:7;-1:-1:-1;3949:2:15;3934:18;;3921:32;3972:18;4002:14;;;3999:34;;;4029:1;4026;4019:12;3999:34;4067:6;4056:9;4052:22;4042:32;;4112:7;4105:4;4101:2;4097:13;4093:27;4083:55;;4134:1;4131;4124:12;4083:55;4174:2;4161:16;4200:2;4192:6;4189:14;4186:34;;;4216:1;4213;4206:12;4186:34;4261:7;4256:2;4247:6;4243:2;4239:15;4235:24;4232:37;4229:57;;;4282:1;4279;4272:12;4229:57;3480:867;;;;-1:-1:-1;;4313:2:15;4305:11;;-1:-1:-1;;;3480:867:15:o;4352:388::-;4420:6;4428;4481:2;4469:9;4460:7;4456:23;4452:32;4449:52;;;4497:1;4494;4487:12;4449:52;4536:9;4523:23;4555:31;4580:5;4555:31;:::i;:::-;4605:5;-1:-1:-1;4662:2:15;4647:18;;4634:32;4675:33;4634:32;4675:33;:::i;:::-;4727:7;4717:17;;;4352:388;;;;;:::o;4745:127::-;4806:10;4801:3;4797:20;4794:1;4787:31;4837:4;4834:1;4827:15;4861:4;4858:1;4851:15;4877:416;4966:1;5003:5;4966:1;5017:270;5038:7;5028:8;5025:21;5017:270;;;5097:4;5093:1;5089:6;5085:17;5079:4;5076:27;5073:53;;;5106:18;;:::i;:::-;5156:7;5146:8;5142:22;5139:55;;;5176:16;;;;5139:55;5255:22;;;;5215:15;;;;5017:270;;;5021:3;4877:416;;;;;:::o;5298:806::-;5347:5;5377:8;5367:80;;-1:-1:-1;5418:1:15;5432:5;;5367:80;5466:4;5456:76;;-1:-1:-1;5503:1:15;5517:5;;5456:76;5548:4;5566:1;5561:59;;;;5634:1;5629:130;;;;5541:218;;5561:59;5591:1;5582:10;;5605:5;;;5629:130;5666:3;5656:8;5653:17;5650:43;;;5673:18;;:::i;:::-;-1:-1:-1;;5729:1:15;5715:16;;5744:5;;5541:218;;5843:2;5833:8;5830:16;5824:3;5818:4;5815:13;5811:36;5805:2;5795:8;5792:16;5787:2;5781:4;5778:12;5774:35;5771:77;5768:159;;;-1:-1:-1;5880:19:15;;;5912:5;;5768:159;5959:34;5984:8;5978:4;5959:34;:::i;:::-;6029:6;6025:1;6021:6;6017:19;6008:7;6005:32;6002:58;;;6040:18;;:::i;:::-;6078:20;;5298:806;-1:-1:-1;;;5298:806:15:o;6109:140::-;6167:5;6196:47;6237:4;6227:8;6223:19;6217:4;6196:47;:::i;6254:168::-;6327:9;;;6358;;6375:15;;;6369:22;;6355:37;6345:71;;6396:18;;:::i;7033:380::-;7112:1;7108:12;;;;7155;;;7176:61;;7230:4;7222:6;7218:17;7208:27;;7176:61;7283:2;7275:6;7272:14;7252:18;7249:38;7246:161;;7329:10;7324:3;7320:20;7317:1;7310:31;7364:4;7361:1;7354:15;7392:4;7389:1;7382:15;7246:161;;7033:380;;;:::o;8040:485::-;-1:-1:-1;;;;;8225:32:15;;8207:51;;8294:2;8289;8274:18;;8267:30;;;8313:18;;8306:34;;;8333:6;8382;8377:2;8362:18;;8349:48;8446:1;8417:22;;;8441:2;8413:31;;;8406:42;;;;8509:2;8488:15;;;-1:-1:-1;;8484:29:15;8469:45;8465:54;;8040:485;-1:-1:-1;;8040:485:15:o;8530:184::-;8600:6;8653:2;8641:9;8632:7;8628:23;8624:32;8621:52;;;8669:1;8666;8659:12;8621:52;-1:-1:-1;8692:16:15;;8530:184;-1:-1:-1;8530:184:15:o;9180:164::-;9256:13;;9305;;9298:21;9288:32;;9278:60;;9334:1;9331;9324:12;9278:60;9180:164;;;:::o;9349:202::-;9416:6;9469:2;9457:9;9448:7;9444:23;9440:32;9437:52;;;9485:1;9482;9475:12;9437:52;9508:37;9535:9;9508:37;:::i;9556:344::-;9623:2;9617:9;9665:3;9653:16;;9699:18;9684:34;;9720:22;;;9681:62;9678:185;;;9785:10;9780:3;9776:20;9773:1;9766:31;9820:4;9817:1;9810:15;9848:4;9845:1;9838:15;9678:185;9879:2;9872:22;9556:344;:::o;9905:138::-;9984:13;;10006:31;9984:13;10006:31;:::i;10048:151::-;10131:13;;10173:1;10163:12;;10153:40;;10189:1;10186;10179:12;10204:1353;10303:6;10356:3;10344:9;10335:7;10331:23;10327:33;10324:53;;;10373:1;10370;10363:12;10324:53;10399:17;;:::i;:::-;10439:40;10469:9;10439:40;:::i;:::-;10432:5;10425:55;10512:53;10561:2;10550:9;10546:18;10512:53;:::i;:::-;10507:2;10500:5;10496:14;10489:77;10619:2;10608:9;10604:18;10598:25;10593:2;10586:5;10582:14;10575:49;10677:2;10666:9;10662:18;10656:25;10651:2;10644:5;10640:14;10633:49;10736:3;10725:9;10721:19;10715:26;10709:3;10702:5;10698:15;10691:51;10796:3;10785:9;10781:19;10775:26;10769:3;10762:5;10758:15;10751:51;10856:3;10845:9;10841:19;10835:26;10829:3;10822:5;10818:15;10811:51;10916:3;10905:9;10901:19;10895:26;10889:3;10882:5;10878:15;10871:51;10941:3;10997:2;10986:9;10982:18;10976:25;10971:2;10964:5;10960:14;10953:49;;11021:3;11077:2;11066:9;11062:18;11056:25;11051:2;11044:5;11040:14;11033:49;;11101:3;11157:2;11146:9;11142:18;11136:25;11131:2;11124:5;11120:14;11113:49;;11181:3;11237:2;11226:9;11222:18;11216:25;11211:2;11204:5;11200:14;11193:49;;11261:3;11296:49;11341:2;11330:9;11326:18;11296:49;:::i;:::-;11280:14;;;11273:73;11365:3;11406:18;;;11400:25;11384:14;;;11377:49;11445:3;11480:46;11507:18;;;11480:46;:::i;:::-;11464:14;;;11457:70;11468:5;10204:1353;-1:-1:-1;;;10204:1353:15:o;12959:125::-;13024:9;;;13045:10;;;13042:36;;;13058:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1033400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_tasks(address)": "2609",
								"allowBuyTicket()": "2459",
								"allowSendTicket()": "2394",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24840",
								"balanceOf(address)": "2653",
								"burn(uint256)": "51005",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "243",
								"getTask(address)": "2563",
								"getTicket(uint256,address,uint256)": "infinite",
								"getTicketFrom(uint256,address,address,uint256)": "infinite",
								"mintToken(address,address,bytes)": "infinite",
								"name()": "infinite",
								"owner()": "2386",
								"redEnvelopeAddr()": "2358",
								"renounceOwnership()": "infinite",
								"setTask(address,uint256)": "26130",
								"symbol()": "infinite",
								"totalSupply()": "2303",
								"transfer(address,uint256)": "51321",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(address,address,uint256)": "infinite"
							},
							"internal": {
								"_getTicket(uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 597,
									"end": 4310,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 995,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1149,
									"end": 1159,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1B1BDD1D195C9E551A58DAD95D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "151A58DAD95D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3469,
									"end": 3520,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3442,
									"end": 3460,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3442,
									"end": 3460,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1243,
									"end": 1258,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 1243,
									"end": 1277,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1243,
									"end": 1277,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1337,
									"end": 1371,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1291,
									"end": 1323,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "AND",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1243,
									"end": 1277,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1243,
									"end": 1277,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1243,
									"end": 1277,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1291,
									"end": 1323,
									"modifierDepth": 2,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"modifierDepth": 2,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1337,
									"end": 1371,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 178,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 178,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 90,
									"end": 103,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 90,
									"end": 103,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 139,
									"end": 152,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 139,
									"end": 152,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 132,
									"end": 153,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 122,
									"end": 154,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 122,
									"end": 154,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 112,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 112,
									"end": 172,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 168,
									"end": 169,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 166,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 158,
									"end": 170,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 112,
									"end": 172,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 112,
									"end": 172,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 14,
									"end": 178,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 14,
									"end": 178,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 14,
									"end": 178,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 14,
									"end": 178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 183,
									"end": 631,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 183,
									"end": 631,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 265,
									"end": 271,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 279,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 281,
									"end": 287,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 336,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 322,
									"end": 331,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 313,
									"end": 320,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 309,
									"end": 332,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 305,
									"end": 337,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 302,
									"end": 354,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 302,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 302,
									"end": 354,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 350,
									"end": 351,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 348,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 340,
									"end": 352,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 302,
									"end": 354,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 302,
									"end": 354,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 376,
									"end": 392,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 376,
									"end": 392,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 421,
									"end": 452,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 421,
									"end": 452,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 411,
									"end": 453,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 453,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 401,
									"end": 471,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 401,
									"end": 471,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 467,
									"end": 468,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 457,
									"end": 469,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 401,
									"end": 471,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 401,
									"end": 471,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 490,
									"end": 495,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 514,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 541,
									"end": 559,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 541,
									"end": 559,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 514,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 514,
									"end": 560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 514,
									"end": 560,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 514,
									"end": 560,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 504,
									"end": 560,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 504,
									"end": 560,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 579,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 623,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 610,
									"end": 619,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 606,
									"end": 624,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 579,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 579,
									"end": 625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 579,
									"end": 625,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 579,
									"end": 625,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 569,
									"end": 625,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 569,
									"end": 625,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 183,
									"end": 631,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 183,
									"end": 631,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 183,
									"end": 631,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 183,
									"end": 631,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 183,
									"end": 631,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 183,
									"end": 631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 636,
									"end": 763,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 636,
									"end": 763,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 697,
									"end": 707,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 692,
									"end": 695,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 688,
									"end": 708,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 685,
									"end": 686,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 678,
									"end": 709,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 728,
									"end": 732,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 718,
									"end": 733,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 752,
									"end": 756,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 757,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 847,
									"end": 848,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 855,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 843,
									"end": 855,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 843,
									"end": 855,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 843,
									"end": 855,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 890,
									"end": 902,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 890,
									"end": 902,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 890,
									"end": 902,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 911,
									"end": 972,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 911,
									"end": 972,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 965,
									"end": 969,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 957,
									"end": 963,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 953,
									"end": 970,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 943,
									"end": 970,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 943,
									"end": 970,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 911,
									"end": 972,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 911,
									"end": 972,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1018,
									"end": 1020,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1010,
									"end": 1016,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1007,
									"end": 1021,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1005,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 984,
									"end": 1022,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1064,
									"end": 1074,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 1059,
									"end": 1062,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 1055,
									"end": 1075,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1052,
									"end": 1053,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1076,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1099,
									"end": 1103,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1096,
									"end": 1097,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1089,
									"end": 1104,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1127,
									"end": 1131,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 768,
									"end": 1148,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1381,
									"end": 1383,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1376,
									"end": 1379,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1373,
									"end": 1384,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1422,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1414,
									"end": 1415,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 1423,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1461,
									"end": 1465,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 1531,
									"end": 1533,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1515,
									"end": 1534,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1508,
									"end": 1535,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1502,
									"end": 1506,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1498,
									"end": 1536,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1567,
									"end": 1571,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1555,
									"end": 1565,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1552,
									"end": 1572,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1590,
									"end": 1594,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1640,
									"end": 1643,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1636,
									"end": 1648,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1633,
									"end": 1634,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1629,
									"end": 1649,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1623,
									"end": 1627,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1619,
									"end": 1650,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1609,
									"end": 1650,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1609,
									"end": 1650,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1718,
									"end": 1720,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1711,
									"end": 1716,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1708,
									"end": 1721,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1777,
									"end": 1778,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1763,
									"end": 1779,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1763,
									"end": 1779,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1744,
									"end": 1745,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1733,
									"end": 1746,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1704,
									"end": 1707,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1704,
									"end": 1707,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1279,
									"end": 1797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 3318,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 1973,
									"end": 3318,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2093,
									"end": 2103,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2093,
									"end": 2103,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2115,
									"end": 2145,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2115,
									"end": 2145,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 2148,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2177,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 2267,
									"end": 2273,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2259,
									"end": 2263,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2253,
									"end": 2264,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2227,
									"end": 2265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2225,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2177,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 2177,
									"end": 2274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2177,
									"end": 2274,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 2177,
									"end": 2274,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2329,
									"end": 2333,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2329,
									"end": 2333,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2386,
									"end": 2388,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2375,
									"end": 2389,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2375,
									"end": 2389,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2403,
									"end": 2404,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3105,
									"end": 3106,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3122,
									"end": 3128,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3174,
									"end": 3193,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3174,
									"end": 3193,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3174,
									"end": 3193,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3168,
									"end": 3194,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1930,
									"end": 1931,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1922,
									"end": 1946,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1918,
									"end": 1947,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1908,
									"end": 1948,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1954,
									"end": 1955,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1905,
									"end": 1962,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3221,
									"end": 3302,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3221,
									"end": 3302,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1226,
									"end": 1227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1219,
									"end": 1233,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1219,
									"end": 1233,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1219,
									"end": 1233,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1250,
									"end": 1268,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1250,
									"end": 1268,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2434,
									"end": 2454,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2434,
									"end": 2454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2434,
									"end": 2454,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2566,
									"end": 2573,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2563,
									"end": 2564,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2560,
									"end": 2574,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2655,
									"end": 2674,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 2655,
									"end": 2674,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2655,
									"end": 2674,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2649,
									"end": 2675,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2634,
									"end": 2676,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2634,
									"end": 2676,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2747,
									"end": 2774,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2747,
									"end": 2774,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2747,
									"end": 2774,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2747,
									"end": 2774,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2715,
									"end": 2716,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2703,
									"end": 2717,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2703,
									"end": 2717,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2703,
									"end": 2717,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2703,
									"end": 2717,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2582,
									"end": 2601,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2582,
									"end": 2601,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2556,
									"end": 2559,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2816,
									"end": 2822,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2807,
									"end": 2814,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2804,
									"end": 2823,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2877,
									"end": 2896,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 2877,
									"end": 2896,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2877,
									"end": 2896,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2871,
									"end": 2897,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2960,
									"end": 2961,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2956,
									"end": 2970,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 2956,
									"end": 2970,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2956,
									"end": 2970,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2972,
									"end": 2975,
									"name": "PUSH",
									"source": 15,
									"value": "F8"
								},
								{
									"begin": 2952,
									"end": 2976,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2948,
									"end": 2985,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 2944,
									"end": 2986,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2914,
									"end": 2988,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2914,
									"end": 2988,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3048,
									"end": 3049,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3039,
									"end": 3045,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3036,
									"end": 3037,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3032,
									"end": 3046,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3028,
									"end": 3050,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3022,
									"end": 3026,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3015,
									"end": 3051,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 3318,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 3318,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 3318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3323,
									"end": 3526,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 3323,
									"end": 3526,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 4310,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220311213009e8407a8bb6dfc97c9dd492d6570038efe8d466a3191efd8fbb86e2664736f6c63430008190033",
									".code": [
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "C7FF23BB"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "C7FF23BB"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "D896FC10"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "D9CAED12"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "DD62ED3E"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "E405663F"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "79CC6790"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "B4309A9C"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "313CE567"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "42966C68"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "6EBD327B"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "12C911E"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "19F232A"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "6E2A29A"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "82921A5"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 597,
											"end": 4310,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3328,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 3328,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 1774,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 936,
											"end": 961,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 936,
											"end": 961,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 936,
											"end": 961,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 924,
											"end": 926,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 927,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1890,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 820,
											"end": 847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 820,
											"end": 847,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 820,
											"end": 847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 820,
											"end": 847,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 820,
											"end": 847,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 847,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1137,
											"end": 1151,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1137,
											"end": 1151,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1153,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1153,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 820,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 972,
											"end": 1159,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 1598,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 1598,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2510,
											"end": 2546,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2510,
											"end": 2546,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2498,
											"end": 2500,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2368,
											"end": 2552,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 3709,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 3709,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3468,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3436,
											"end": 3468,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3436,
											"end": 3468,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3406,
											"end": 3408,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 810,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 810,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 784,
											"end": 810,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 784,
											"end": 810,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 784,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 810,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 784,
											"end": 810,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 784,
											"end": 810,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 784,
											"end": 810,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 784,
											"end": 810,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 784,
											"end": 810,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 784,
											"end": 810,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 744,
											"end": 774,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 744,
											"end": 774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 744,
											"end": 774,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 744,
											"end": 774,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 744,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 744,
											"end": 774,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 744,
											"end": 774,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 744,
											"end": 774,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 744,
											"end": 774,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1901,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1901,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 4158,
											"end": 4304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 4158,
											"end": 4304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 858,
											"end": 899,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 858,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 858,
											"end": 899,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3460,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3480,
											"end": 3482,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 3480,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3463,
											"end": 3477,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3463,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 3510,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3536,
											"end": 3544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 3558,
											"end": 3561,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3547,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 3547,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3547,
											"end": 3593,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 3547,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 6802,
											"end": 6804,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6780,
											"end": 6823,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6832,
											"end": 6875,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6999,
											"end": 7021,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 6978,
											"end": 6997,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6978,
											"end": 6997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6971,
											"end": 7022,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "PUSH",
											"source": 14,
											"value": "EBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D"
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3613,
											"end": 3689,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 3432,
											"end": 3700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3432,
											"end": 3700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1681,
											"end": 1698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1708,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1708,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1681,
											"end": 1708,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1727,
											"end": 1754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "D7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8"
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1727,
											"end": 1754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1754,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1754,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1754,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1754,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1754,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3852,
											"end": 3866,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 3886,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 3886,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3886,
											"end": 3902,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 3886,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3869,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 3869,
											"end": 3902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3869,
											"end": 3883,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3869,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3869,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3869,
											"end": 3902,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 3869,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3852,
											"end": 3902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3852,
											"end": 3902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 3925,
											"end": 3937,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3938,
											"end": 3944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 3916,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 3945,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 3916,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3959,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3985,
											"end": 4000,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4001,
											"end": 4015,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3970,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 3970,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3970,
											"end": 4016,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 3970,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6802,
											"end": 6804,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6780,
											"end": 6823,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6832,
											"end": 6875,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6999,
											"end": 7021,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 6978,
											"end": 6997,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6978,
											"end": 6997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6971,
											"end": 7022,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "PUSH",
											"source": 14,
											"value": "EBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D"
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4036,
											"end": 4105,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 4116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 4116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 4116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 2044,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2061,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2084,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2084,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7899,
											"end": 7901,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2084,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7881,
											"end": 7902,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7938,
											"end": 7940,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7911,
											"end": 7941,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F20736574206173207461736B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7950,
											"end": 7994,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 2036,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2160,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 2238,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70D64693"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2177,
											"end": 2235,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2160,
											"end": 2174,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2160,
											"end": 2174,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2255,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "E1AC8D26"
										},
										{
											"begin": 2177,
											"end": 2208,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 2177,
											"end": 2235,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2227,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2227,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2234,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2234,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2234,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2229,
											"end": 2234,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 2177,
											"end": 2235,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2235,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 2177,
											"end": 2235,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2177,
											"end": 2235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2177,
											"end": 2255,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 2177,
											"end": 2255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2177,
											"end": 2255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2160,
											"end": 2255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2160,
											"end": 2255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2275,
											"end": 2290,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2269,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 2269,
											"end": 2299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2269,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2336,
											"end": 2346,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 8988,
											"end": 9022,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8988,
											"end": 9022,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9053,
											"end": 9055,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9074,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9083,
											"end": 9126,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9157,
											"end": 9159,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9135,
											"end": 9169,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9135,
											"end": 9169,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9135,
											"end": 9169,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4D914FBDB28A885441BB0F6E06BB01DFDFE8A8B6902391853B46EB747AE136EF"
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8937,
											"end": 8940,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2381,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 2392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 4158,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4293,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4293,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7642,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7610,
											"end": 7642,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7610,
											"end": 7642,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4258,
											"end": 4293,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4281,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4293,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4258,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 4258,
											"end": 4293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 3318,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 2402,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2592,
											"end": 2607,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 2592,
											"end": 2607,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8F91CD17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 936,
											"end": 961,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 936,
											"end": 961,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 936,
											"end": 961,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2532,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2528,
											"end": 2532,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2592,
											"end": 2607,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2592,
											"end": 2607,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2624,
											"name": "PUSH",
											"source": 14,
											"value": "8F91CD17"
										},
										{
											"begin": 2579,
											"end": 2624,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 909,
											"end": 927,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 927,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "1E0"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 2579,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 2579,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2647,
											"end": 2672,
											"name": "PUSH",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 2647,
											"end": 2672,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2647,
											"end": 2672,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2647,
											"end": 2672,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2546,
											"end": 2629,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2546,
											"end": 2629,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2686,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 2643,
											"end": 3284,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2741,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2741,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2741,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2719,
											"end": 2741,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11764,
											"end": 11766,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11746,
											"end": 11767,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11803,
											"end": 11805,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11776,
											"end": 11806,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "627579207469636B6574206E6F20616C6C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11815,
											"end": 11864,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 11562,
											"end": 11905,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 2711,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "PUSH",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2830,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 2807,
											"end": 2847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 2807,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2807,
											"end": 2847,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 2807,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2895,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2895,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2905,
											"end": 2920,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 2905,
											"end": 2920,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 2920,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2905,
											"end": 2920,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2905,
											"end": 2920,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2847,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2783,
											"end": 2847,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2904,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2904,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 2865,
											"end": 2904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 2865,
											"end": 2935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 2865,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2973,
											"end": 2988,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 2973,
											"end": 2988,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C5E7BB33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12146,
											"end": 12206,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 2988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2988,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2988,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3000,
											"name": "PUSH",
											"source": 14,
											"value": "C5E7BB33"
										},
										{
											"begin": 2960,
											"end": 3000,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2960,
											"end": 3036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2687,
											"end": 3051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 2643,
											"end": 3284,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 3284,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 2643,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3100,
											"end": 3104,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12462,
											"end": 12464,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12444,
											"end": 12465,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12501,
											"end": 12503,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12474,
											"end": 12504,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73656E64207469636B6574206E6F20616C6C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12520,
											"end": 12538,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12520,
											"end": 12538,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12520,
											"end": 12538,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12513,
											"end": 12563,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 12260,
											"end": 12604,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 3073,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C42E0C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12146,
											"end": 12206,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3204,
											"name": "PUSH",
											"source": 14,
											"value": "5C42E0C5"
										},
										{
											"begin": 3163,
											"end": 3204,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "tag",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3163,
											"end": 3240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3269,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3258,
											"end": 3269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 3284,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 2643,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3304,
											"end": 3307,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2402,
											"end": 3318,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 3318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12829,
											"end": 12861,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12829,
											"end": 12861,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12811,
											"end": 12862,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 936,
											"end": 961,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 936,
											"end": 961,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 924,
											"end": 926,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 927,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 909,
											"end": 927,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 790,
											"end": 967,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12829,
											"end": 12861,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12829,
											"end": 12861,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12811,
											"end": 12862,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 936,
											"end": 961,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 936,
											"end": 961,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 924,
											"end": 926,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 927,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 909,
											"end": 927,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 790,
											"end": 967,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 150,
											"end": 533,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 150,
											"end": 533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 227,
											"end": 233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 241,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 243,
											"end": 249,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 298,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 284,
											"end": 293,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 275,
											"end": 282,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 271,
											"end": 294,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 267,
											"end": 299,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 264,
											"end": 316,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 264,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 264,
											"end": 316,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 312,
											"end": 313,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 302,
											"end": 314,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 264,
											"end": 316,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 264,
											"end": 316,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 335,
											"end": 358,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 325,
											"end": 358,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 325,
											"end": 358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 408,
											"end": 410,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 393,
											"end": 411,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 380,
											"end": 412,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 421,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 446,
											"end": 451,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 421,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 421,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 421,
											"end": 452,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 421,
											"end": 452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 150,
											"end": 533,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 150,
											"end": 533,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 471,
											"end": 476,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 471,
											"end": 476,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 523,
											"end": 525,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 526,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 508,
											"end": 526,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 508,
											"end": 526,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 508,
											"end": 526,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 495,
											"end": 527,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 495,
											"end": 527,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 150,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 538,
											"end": 785,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 538,
											"end": 785,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 597,
											"end": 603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 652,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 647,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 629,
											"end": 636,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 625,
											"end": 648,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 621,
											"end": 653,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 618,
											"end": 670,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 666,
											"end": 667,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 664,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 656,
											"end": 668,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 618,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 705,
											"end": 714,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 692,
											"end": 715,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 724,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 749,
											"end": 754,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 724,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 724,
											"end": 755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 724,
											"end": 755,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 724,
											"end": 755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 774,
											"end": 779,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 538,
											"end": 785,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 538,
											"end": 785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1582,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1164,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1313,
											"end": 1315,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1339,
											"end": 1352,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1361,
											"end": 1395,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1442,
											"end": 1444,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1430,
											"end": 1445,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1454,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1487,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1470,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1505,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1549,
											"end": 1555,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1545,
											"end": 1560,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1530,
											"end": 1539,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1571,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1576,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1582,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1582,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1587,
											"end": 1902,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1587,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1655,
											"end": 1661,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1716,
											"end": 1718,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1713,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1695,
											"end": 1702,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1691,
											"end": 1714,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1687,
											"end": 1719,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1684,
											"end": 1736,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1684,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 1684,
											"end": 1736,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1722,
											"end": 1734,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1684,
											"end": 1736,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 1684,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1758,
											"end": 1781,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1790,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 1815,
											"end": 1820,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1790,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1790,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1790,
											"end": 1821,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 1790,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1896,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1864,
											"end": 1896,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 1902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1907,
											"end": 2363,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 1907,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2039,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2028,
											"end": 2051,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2021,
											"end": 2073,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2021,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 2021,
											"end": 2073,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2059,
											"end": 2071,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2021,
											"end": 2073,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 2021,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2095,
											"end": 2118,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2127,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 2152,
											"end": 2157,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2127,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 2127,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2127,
											"end": 2158,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 2127,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2177,
											"end": 2182,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2236,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2247,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2247,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 2247,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2557,
											"end": 2737,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 2557,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2644,
											"end": 2667,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2683,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2687,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2708,
											"end": 2731,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2708,
											"end": 2731,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2557,
											"end": 2737,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2557,
											"end": 2737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 3267,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 2742,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2828,
											"end": 2834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2844,
											"end": 2850,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2905,
											"end": 2908,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2876,
											"end": 2909,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2873,
											"end": 2926,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2873,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 2873,
											"end": 2926,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 2924,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2873,
											"end": 2926,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 2873,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3020,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3003,
											"end": 3021,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2990,
											"end": 3022,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3031,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3031,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 3031,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3031,
											"end": 3062,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 3031,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3138,
											"end": 3140,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3110,
											"end": 3142,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3151,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 3110,
											"end": 3142,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3151,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 3151,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3151,
											"end": 3184,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 3151,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 3267,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 3267,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 3267,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 3267,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 3267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 3574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3584,
											"end": 3590,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3631,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3616,
											"end": 3648,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3651,
											"end": 3663,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3687,
											"end": 3710,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 3719,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3769,
											"end": 3774,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3826,
											"end": 3828,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 3830,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3839,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 3798,
											"end": 3830,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3839,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 3839,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3839,
											"end": 3872,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 3839,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3891,
											"end": 3898,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4002,
											"end": 4016,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4002,
											"end": 4016,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4002,
											"end": 4016,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4056,
											"end": 4065,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4052,
											"end": 4074,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4042,
											"end": 4074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4042,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4105,
											"end": 4109,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4097,
											"end": 4110,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4093,
											"end": 4120,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4132,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4174,
											"end": 4176,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4177,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4200,
											"end": 4202,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4189,
											"end": 4203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4206,
											"end": 4218,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4256,
											"end": 4258,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4253,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4243,
											"end": 4245,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4239,
											"end": 4254,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4235,
											"end": 4259,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4282,
											"end": 4283,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4280,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4272,
											"end": 4284,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4305,
											"end": 4316,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4316,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3480,
											"end": 4347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4420,
											"end": 4426,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4481,
											"end": 4483,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 4478,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4456,
											"end": 4479,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4452,
											"end": 4484,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4498,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4495,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4555,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 4580,
											"end": 4585,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4555,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 4555,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4555,
											"end": 4586,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 4555,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4662,
											"end": 4664,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4634,
											"end": 4666,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 4634,
											"end": 4666,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 4675,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4745,
											"end": 4872,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 4745,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4806,
											"end": 4816,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 4801,
											"end": 4804,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 4797,
											"end": 4817,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4818,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4841,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 4834,
											"end": 4835,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4827,
											"end": 4842,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4861,
											"end": 4865,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4866,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5003,
											"end": 5008,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5028,
											"end": 5036,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5025,
											"end": 5046,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5101,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5095,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 5079,
											"end": 5083,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5076,
											"end": 5103,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 5106,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5156,
											"end": 5163,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5146,
											"end": 5154,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5176,
											"end": 5192,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5176,
											"end": 5192,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5176,
											"end": 5192,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5176,
											"end": 5192,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5215,
											"end": 5230,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5215,
											"end": 5230,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5215,
											"end": 5230,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5215,
											"end": 5230,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 5024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4877,
											"end": 5293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5298,
											"end": 6104,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 5298,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5352,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5385,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5367,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 5367,
											"end": 5447,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5418,
											"end": 5419,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5432,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 5432,
											"end": 5437,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5367,
											"end": 5447,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 5367,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5466,
											"end": 5470,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5456,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 5456,
											"end": 5532,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 5517,
											"end": 5522,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5456,
											"end": 5532,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 5456,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5552,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5634,
											"end": 5635,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5591,
											"end": 5592,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5582,
											"end": 5592,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5582,
											"end": 5592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5605,
											"end": 5610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5605,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 5605,
											"end": 5610,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 5656,
											"end": 5664,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5653,
											"end": 5670,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5693,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 5650,
											"end": 5693,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 5673,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5715,
											"end": 5731,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5715,
											"end": 5731,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5744,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 5744,
											"end": 5749,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5843,
											"end": 5845,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5833,
											"end": 5841,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5846,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5824,
											"end": 5827,
											"name": "PUSH",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 5818,
											"end": 5822,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5815,
											"end": 5828,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5805,
											"end": 5807,
											"name": "PUSH",
											"source": 15,
											"value": "4E"
										},
										{
											"begin": 5795,
											"end": 5803,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5792,
											"end": 5808,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5778,
											"end": 5790,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5774,
											"end": 5809,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5771,
											"end": 5848,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 5912,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 5912,
											"end": 5917,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5959,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5978,
											"end": 5982,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5959,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 5959,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5959,
											"end": 5993,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 5959,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6029,
											"end": 6035,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 6017,
											"end": 6036,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6005,
											"end": 6037,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6002,
											"end": 6060,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6002,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 6002,
											"end": 6060,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 6040,
											"end": 6058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5298,
											"end": 6104,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5298,
											"end": 6104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6109,
											"end": 6249,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 6109,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6167,
											"end": 6172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 6237,
											"end": 6241,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 6227,
											"end": 6235,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6196,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 6196,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6254,
											"end": 6422,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 6254,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6358,
											"end": 6367,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6358,
											"end": 6367,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6375,
											"end": 6390,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6375,
											"end": 6390,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6375,
											"end": 6390,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 6369,
											"end": 6391,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6369,
											"end": 6391,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6355,
											"end": 6392,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 6345,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 6345,
											"end": 6416,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 6396,
											"end": 6414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7155,
											"end": 7167,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7155,
											"end": 7167,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7155,
											"end": 7167,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 7176,
											"end": 7237,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 7222,
											"end": 7228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7218,
											"end": 7235,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7208,
											"end": 7235,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7208,
											"end": 7235,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7237,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 7176,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7283,
											"end": 7285,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7281,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7272,
											"end": 7286,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7249,
											"end": 7287,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7329,
											"end": 7339,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7320,
											"end": 7340,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7317,
											"end": 7318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7341,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7364,
											"end": 7368,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7354,
											"end": 7369,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7392,
											"end": 7396,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7382,
											"end": 7397,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7033,
											"end": 7413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8040,
											"end": 8525,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 8040,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8225,
											"end": 8257,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8225,
											"end": 8257,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8207,
											"end": 8258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8207,
											"end": 8258,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8267,
											"end": 8297,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8267,
											"end": 8297,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8267,
											"end": 8297,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8306,
											"end": 8340,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8306,
											"end": 8340,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8306,
											"end": 8340,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8333,
											"end": 8339,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8377,
											"end": 8379,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8362,
											"end": 8380,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8362,
											"end": 8380,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8349,
											"end": 8397,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 8446,
											"end": 8447,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8439,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8417,
											"end": 8439,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8417,
											"end": 8439,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8443,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8413,
											"end": 8444,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8413,
											"end": 8444,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8413,
											"end": 8444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8448,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8448,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8448,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8448,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8484,
											"end": 8513,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8469,
											"end": 8514,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8465,
											"end": 8519,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8465,
											"end": 8519,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8040,
											"end": 8525,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8040,
											"end": 8525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8530,
											"end": 8714,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 8530,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8600,
											"end": 8606,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8653,
											"end": 8655,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8650,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8639,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8628,
											"end": 8651,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8624,
											"end": 8656,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8669,
											"end": 8670,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8667,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8659,
											"end": 8671,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8692,
											"end": 8708,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8692,
											"end": 8708,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8530,
											"end": 8714,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8530,
											"end": 8714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9256,
											"end": 9269,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9256,
											"end": 9269,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9305,
											"end": 9318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9305,
											"end": 9318,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9298,
											"end": 9319,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9288,
											"end": 9320,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9288,
											"end": 9320,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9278,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 9278,
											"end": 9338,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9334,
											"end": 9335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9331,
											"end": 9332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9324,
											"end": 9336,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9278,
											"end": 9338,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 9278,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9349,
											"end": 9551,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 9349,
											"end": 9551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9416,
											"end": 9422,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9471,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9448,
											"end": 9455,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9444,
											"end": 9467,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9485,
											"end": 9486,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9475,
											"end": 9487,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9508,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 9535,
											"end": 9544,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9508,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 9508,
											"end": 9545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9556,
											"end": 9900,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 9556,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9623,
											"end": 9625,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9617,
											"end": 9626,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9665,
											"end": 9668,
											"name": "PUSH",
											"source": 15,
											"value": "1E0"
										},
										{
											"begin": 9653,
											"end": 9669,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9653,
											"end": 9669,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9699,
											"end": 9717,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9684,
											"end": 9718,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9684,
											"end": 9718,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9720,
											"end": 9742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9720,
											"end": 9742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9720,
											"end": 9742,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9681,
											"end": 9743,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9785,
											"end": 9795,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9780,
											"end": 9783,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9773,
											"end": 9774,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9766,
											"end": 9797,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9820,
											"end": 9824,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 9817,
											"end": 9818,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9810,
											"end": 9825,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9848,
											"end": 9852,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9853,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9879,
											"end": 9881,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9872,
											"end": 9894,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9556,
											"end": 9900,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9556,
											"end": 9900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9905,
											"end": 10043,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 9905,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 9997,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9984,
											"end": 9997,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10006,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 9984,
											"end": 9997,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10006,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 10006,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10048,
											"end": 10199,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 10048,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10131,
											"end": 10144,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10131,
											"end": 10144,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10173,
											"end": 10174,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10163,
											"end": 10175,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10163,
											"end": 10175,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10153,
											"end": 10193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 10153,
											"end": 10193,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10189,
											"end": 10190,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10179,
											"end": 10191,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10204,
											"end": 11557,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 10204,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10359,
											"name": "PUSH",
											"source": 15,
											"value": "1E0"
										},
										{
											"begin": 10344,
											"end": 10353,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10331,
											"end": 10354,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10327,
											"end": 10360,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10373,
											"end": 10374,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10370,
											"end": 10371,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10363,
											"end": 10375,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10399,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 10399,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 10399,
											"end": 10416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10399,
											"end": 10416,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 10399,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 10439,
											"end": 10479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10439,
											"end": 10479,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 10439,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10432,
											"end": 10437,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10425,
											"end": 10480,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10512,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 10561,
											"end": 10563,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10559,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10546,
											"end": 10564,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10512,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 10512,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10512,
											"end": 10565,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 10512,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10507,
											"end": 10509,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10500,
											"end": 10505,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10489,
											"end": 10566,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10619,
											"end": 10621,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10608,
											"end": 10617,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10598,
											"end": 10623,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10593,
											"end": 10595,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10586,
											"end": 10591,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10582,
											"end": 10596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10624,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10666,
											"end": 10675,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10656,
											"end": 10681,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10651,
											"end": 10653,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10644,
											"end": 10649,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10633,
											"end": 10682,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10736,
											"end": 10739,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10721,
											"end": 10740,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10715,
											"end": 10741,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10709,
											"end": 10712,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10702,
											"end": 10707,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10698,
											"end": 10713,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10691,
											"end": 10742,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10796,
											"end": 10799,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 10785,
											"end": 10794,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10781,
											"end": 10800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10775,
											"end": 10801,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10769,
											"end": 10772,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 10762,
											"end": 10767,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10758,
											"end": 10773,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10751,
											"end": 10802,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10856,
											"end": 10859,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 10845,
											"end": 10854,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10841,
											"end": 10860,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10835,
											"end": 10861,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10829,
											"end": 10832,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 10822,
											"end": 10827,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10818,
											"end": 10833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10811,
											"end": 10862,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10916,
											"end": 10919,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 10905,
											"end": 10914,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10901,
											"end": 10920,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10895,
											"end": 10921,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10889,
											"end": 10892,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 10882,
											"end": 10887,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 10893,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10871,
											"end": 10922,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 10944,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 10997,
											"end": 10999,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10986,
											"end": 10995,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10982,
											"end": 11000,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10976,
											"end": 11001,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10971,
											"end": 10973,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10964,
											"end": 10969,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10953,
											"end": 11002,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10953,
											"end": 11002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11021,
											"end": 11024,
											"name": "PUSH",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 11077,
											"end": 11079,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11066,
											"end": 11075,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11056,
											"end": 11081,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11053,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11044,
											"end": 11049,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11040,
											"end": 11054,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11033,
											"end": 11082,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11033,
											"end": 11082,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11101,
											"end": 11104,
											"name": "PUSH",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 11157,
											"end": 11159,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11146,
											"end": 11155,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11142,
											"end": 11160,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11136,
											"end": 11161,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11131,
											"end": 11133,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11124,
											"end": 11129,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11120,
											"end": 11134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11113,
											"end": 11162,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11113,
											"end": 11162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11181,
											"end": 11184,
											"name": "PUSH",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 11237,
											"end": 11239,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11226,
											"end": 11235,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11222,
											"end": 11240,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11216,
											"end": 11241,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11211,
											"end": 11213,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11204,
											"end": 11209,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11200,
											"end": 11214,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11193,
											"end": 11242,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11193,
											"end": 11242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11261,
											"end": 11264,
											"name": "PUSH",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 11296,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 11341,
											"end": 11343,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11326,
											"end": 11344,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11296,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 11296,
											"end": 11345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11296,
											"end": 11345,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 11296,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11280,
											"end": 11294,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11280,
											"end": 11294,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11280,
											"end": 11294,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11273,
											"end": 11346,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11365,
											"end": 11368,
											"name": "PUSH",
											"source": 15,
											"value": "1A0"
										},
										{
											"begin": 11406,
											"end": 11424,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11406,
											"end": 11424,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11406,
											"end": 11424,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11400,
											"end": 11425,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11384,
											"end": 11398,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11384,
											"end": 11398,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11384,
											"end": 11398,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11426,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 11448,
											"name": "PUSH",
											"source": 15,
											"value": "1C0"
										},
										{
											"begin": 11480,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11480,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 11480,
											"end": 11526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11480,
											"end": 11526,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 11480,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11464,
											"end": 11478,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11464,
											"end": 11478,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11464,
											"end": 11478,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11457,
											"end": 11527,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11468,
											"end": 11473,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10204,
											"end": 11557,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10204,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12959,
											"end": 13084,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 12959,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13024,
											"end": 13033,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13024,
											"end": 13033,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13024,
											"end": 13033,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13045,
											"end": 13055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13045,
											"end": 13055,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13045,
											"end": 13055,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13042,
											"end": 13078,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13042,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 13042,
											"end": 13078,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13058,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 13058,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 13058,
											"end": 13076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/interfaces/IRedEnvelope.sol",
								"contracts/interfaces/ITaskControlWithToken.sol",
								"contracts/interfaces/ItaskCallee.sol",
								"contracts/taskControl/TaskControlWithToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_tasks(address)": "e405663f",
							"allowBuyTicket()": "b4309a9c",
							"allowSendTicket()": "06e2a29a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"getTask(address)": "019f232a",
							"getTicket(uint256,address,uint256)": "012c911e",
							"getTicketFrom(uint256,address,address,uint256)": "6ebd327b",
							"mintToken(address,address,bytes)": "d896fc10",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"redEnvelopeAddr()": "c7ff23bb",
							"renounceOwnership()": "715018a6",
							"setTask(address,uint256)": "082921a5",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,address,uint256)": "d9caed12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_redEnvelopeAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowBuyTicket\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowSendTicket\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"TaskAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"}],\"name\":\"TicketGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_tasks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowBuyTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowSendTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"}],\"name\":\"getTask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"getTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"getTicketFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redEnvelopeAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"setTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/taskControl/TaskControlWithToken.sol\":\"TaskControlWithToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/interfaces/IRedEnvelope.sol\":{\"keccak256\":\"0x59aba94fd75d769066dc8dc6db6f2511d424656acca2f8c7f60c66cff2dc1f7e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba2e181d89ef297a064a31f72797ca71e53368e8cda85c59bc834e581daa91d6\",\"dweb:/ipfs/QmXvVjSi3xpbSyEnjtRf69AAReEnzQQh6RzikYJajqK5R2\"]},\"contracts/interfaces/ITaskControlWithToken.sol\":{\"keccak256\":\"0xa300dbb4a946e2796b51b2f5454ea167daa18f5feff236936a79ef4c2cc0c0e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae372eeba68d16832a7f82dbc0bdd321d6d5c39fc9fa21927cdd927480d7a579\",\"dweb:/ipfs/QmWbF24urbpFcSFxANqWuw2Beh7P5pQUZMtzcUjCKM7bLw\"]},\"contracts/interfaces/ItaskCallee.sol\":{\"keccak256\":\"0x96f9931598e1fad8b2f9c5a1f560835657f1e1be9481ea2fb8f6d1f1f6dd5596\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://26f94f8a89fbe5944c9061d2e7c6e55b0e08c707b2eaffdc0d32573edee53a8b\",\"dweb:/ipfs/QmXFMoPoHe5H42gHtZLDXLPDZQF2wuF9mBhupXURgzPRAs\"]},\"contracts/taskControl/TaskControlWithToken.sol\":{\"keccak256\":\"0x1246093d6a9678bd5561862218de2b6f377541342cb26fe514f08be440a25bf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f928d4c3aa07d48afb4e150c9603fd90b6fc35212c11d3a003a5b607db18fa4\",\"dweb:/ipfs/QmcMiEVpvYCWYfnFCsvGqsudXyY3ViK85jHiEcDurxRgNz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1569,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "_status",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1964,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "redEnvelopeAddr",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1966,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "allowBuyTicket",
								"offset": 20,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1968,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "allowSendTicket",
								"offset": 21,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1972,
								"contract": "contracts/taskControl/TaskControlWithToken.sol:TaskControlWithToken",
								"label": "_tasks",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1558
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1559,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1558,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1558,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1558
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1540,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1558
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1559,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1558,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1558,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								1558
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1558
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 1559,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1558,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1558,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								1558
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:6",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:6",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3022:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3045:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3093:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3119:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 962,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3136:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 964,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "3155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 966,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:6"
									},
									"scope": 985,
									"src": "2997:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3501:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:6"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3539:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:6"
									},
									"scope": 985,
									"src": "3485:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:6"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "3791:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 981,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:6"
									},
									"scope": 985,
									"src": "3740:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 986,
							"src": "2113:1689:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1528
						],
						"IERC20": [
							877
						],
						"IERC20Permit": [
							985
						],
						"SafeERC20": [
							1275
						]
					},
					"id": 1276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1276,
							"sourceUnit": 878,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 991,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1276,
							"sourceUnit": 986,
							"src": "179:60:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 990,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "187:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 993,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1276,
							"sourceUnit": 1529,
							"src": "240:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 992,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1528,
										"src": "248:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 994,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1275,
							"linearizedBaseContracts": [
								1275
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 997,
									"libraryName": {
										"id": 995,
										"name": "Address",
										"nameLocations": [
											"781:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1528,
										"src": "781:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:7",
									"typeName": {
										"id": 996,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:7",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1002,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "907:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:7"
									},
									"src": "876:46:7"
								},
								{
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1011,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1043:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1060:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1086:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:7"
									},
									"src": "1004:109:7"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "1375:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "1405:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1026,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "1427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "1427:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1028,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "1444:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1029,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1448:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1024,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1022,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "1385:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:7"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "1325:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1013,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1325:6:7"
													},
													"referencedDeclaration": 877,
													"src": "1325:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "1339:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "1351:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:7"
									},
									"scope": 1275,
									"src": "1303:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "1792:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "1822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1052,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "1844:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 876,
																	"src": "1844:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1054,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1041,
																			"src": "1865:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1055,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1043,
																			"src": "1871:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1056,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "1875:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1057,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1050,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1048,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "1802:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:7"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1728:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1038,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1037,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1728:6:7"
													},
													"referencedDeclaration": 877,
													"src": "1728:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1742:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1756:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1768:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:7"
									},
									"scope": 1275,
									"src": "1702:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "2167:139:7",
										"statements": [
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "2177:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1079,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1275",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1275",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2231:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1075,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2200:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "2200:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2262:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1086,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2269:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "2278:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1088,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "2293:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "2249:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:7"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2112:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1064,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2112:6:7"
													},
													"referencedDeclaration": 877,
													"src": "2112:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2126:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2143:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:7"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:7"
									},
									"scope": 1275,
									"src": "2081:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "2607:370:7",
										"statements": [
											{
												"id": 1134,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:7",
												"statements": [
													{
														"assignments": [
															1105
														],
														"declarations": [
															{
																"constant": false,
																"id": 1105,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 1134,
																"src": "2641:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1104,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1114,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1110,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1275",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1275",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1108,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1112,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "2699:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1106,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2668:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "2668:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "2725:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1116,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "2744:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1125,
														"nodeType": "IfStatement",
														"src": "2721:160:7",
														"trueBody": {
															"id": 1124,
															"nodeType": "Block",
															"src": "2763:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1119,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "2821:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1120,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1105,
																				"src": "2830:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1121,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "2848:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1118,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1011,
																			"src": "2788:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1123,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1127,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "2907:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1128,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "2914:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1129,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "2923:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1130,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "2942:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1126,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "2894:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1133,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2540:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1096,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1095,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "2540:6:7"
													},
													"referencedDeclaration": 877,
													"src": "2540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2554:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2571:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:7"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:7"
									},
									"scope": 1275,
									"src": "2509:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "3373:303:7",
										"statements": [
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "3383:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1147,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1151,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "3426:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "3426:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1153,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "3442:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "3451:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1155,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1149,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:7"
											},
											{
												"condition": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1159,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "3498:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1160,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "3505:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$877",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1158,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "3474:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "3469:201:7",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "3520:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1164,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "3554:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1167,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "3576:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 864,
																				"src": "3576:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1169,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1142,
																						"src": "3592:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1170,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1171,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1165,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1163,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "3534:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1174,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1176,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "3639:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1177,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "3646:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1175,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "3619:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "3318:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1138,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "3318:6:7"
													},
													"referencedDeclaration": 877,
													"src": "3318:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "3332:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "3349:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:7"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:7"
									},
									"scope": 1275,
									"src": "3296:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "4129:559:7",
										"statements": [
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "4478:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1192,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4532:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1196,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "4512:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:7",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1349,
														"src": "4504:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1202,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "4551:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 1208,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "4589:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1209,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:7",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1211,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1206,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:7",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "4547:135:7",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "4610:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1218,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "4664:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1216,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1215,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "4631:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1221,
															"nodeType": "RevertStatement",
															"src": "4624:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4088:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1185,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "4088:6:7"
													},
													"referencedDeclaration": 877,
													"src": "4088:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "4102:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:7"
									},
									"scope": 1275,
									"src": "4059:629:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "5278:489:7",
										"statements": [
											{
												"assignments": [
													1237,
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1273,
														"src": "5574:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1236,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1273,
														"src": "5588:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1238,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"arguments": [
														{
															"id": 1245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "5635:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1242,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "5623:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1240,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:7",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1248,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "5657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1249,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1239,
																				"src": "5669:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:7",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1255,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1239,
																				"src": "5706:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1256,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1258,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1253,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:7",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1261,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1265,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "5738:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1263,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1235,
												"id": 1272,
												"nodeType": "Return",
												"src": "5650:110:7"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "5222:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1228,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1227,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "5222:6:7"
													},
													"referencedDeclaration": 877,
													"src": "5222:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "5236:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "5272:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:7"
									},
									"scope": 1275,
									"src": "5189:578:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1276,
							"src": "751:5018:7",
							"usedErrors": [
								1002,
								1011
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1528
						]
					},
					"id": 1529,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1277,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1278,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1528,
							"linearizedBaseContracts": [
								1528
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1283,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1288,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1291,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1528",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1528",
																		"typeString": "library Address"
																	}
																],
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1304,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1314,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 1313,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1309,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1528",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1528",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1307,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1306,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1312,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1316,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1315,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1323,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1317,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1319,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 1324,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1326,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1328,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 1528,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1343,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1344,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1342,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1347,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 1528,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1363,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1528",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1528",
																		"typeString": "library Address"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1361,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1366,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 1375,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1371,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1528",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1528",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1369,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1368,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1374,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1378,
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"arguments": [
														{
															"id": 1385,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1381,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1383,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1389,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1390,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1391,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1388,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1393,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 1528,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													1406,
													1408
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1420,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1405,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1408,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1420,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1407,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"arguments": [
														{
															"id": 1411,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1409,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1415,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1416,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1417,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1414,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1404,
												"id": 1419,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 1528,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													1432,
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1433,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1439,
												"initialValue": {
													"arguments": [
														{
															"id": 1437,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1435,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1443,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1440,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1445,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 1528,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 1459,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1484,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1466,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1454,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1470,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1450,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1481,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 1480,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1477,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1476,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1288,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1479,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1482,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1458,
															"id": 1483,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 1485,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 1465,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1462,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1461,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1464,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 1528,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 1497,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1506,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 1504,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1496,
															"id": 1505,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1500,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1499,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1502,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 1528,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1515,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1524,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1521,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1523,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 1525,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 1520,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1512,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1512,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 1519,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 1528,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1529,
							"src": "195:6066:8",
							"usedErrors": [
								1283,
								1288,
								1291
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1558
						]
					},
					"id": 1559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1531,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1558,
							"linearizedBaseContracts": [
								1558
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1536,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1538,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1558,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1545,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1544,
												"id": 1547,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1558,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1553,
												"id": 1555,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1558,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1559,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1627
						]
					},
					"id": 1628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1560,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1561,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:10",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1627,
							"linearizedBaseContracts": [
								1627
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1564,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "1674:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1567,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "1720:36:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1566,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1569,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "1763:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1568,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:10",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1572,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:10"
									},
									"src": "1850:37:10"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "1907:38:10",
										"statements": [
											{
												"expression": {
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1575,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "1917:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1576,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "1927:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:10"
											}
										]
									},
									"id": 1580,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:10"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:10"
									},
									"scope": 1627,
									"src": "1893:52:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "2346:79:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1583,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "2356:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:10"
											},
											{
												"id": 1586,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1587,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "2398:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:10"
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:10",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1591,
									"name": "nonReentrant",
									"nameLocation": "2331:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:10"
									},
									"src": "2322:103:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "2470:268:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1594,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "2558:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1595,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "2569:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "2554:86:10",
												"trueBody": {
													"id": 1600,
													"nodeType": "Block",
													"src": "2578:62:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1597,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "2599:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1599,
															"nodeType": "RevertStatement",
															"src": "2592:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1602,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "2714:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1603,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "2724:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:10"
											}
										]
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:10"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:10"
									},
									"scope": 1627,
									"src": "2431:307:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "2782:170:10",
										"statements": [
											{
												"expression": {
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1610,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "2924:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1611,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "2934:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:10"
											}
										]
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:10"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:10"
									},
									"scope": 1627,
									"src": "2744:208:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "3195:42:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1621,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "3212:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1622,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "3223:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1624,
												"nodeType": "Return",
												"src": "3205:25:10"
											}
										]
									},
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:10",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:10"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3189:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:10"
									},
									"scope": 1627,
									"src": "3131:106:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1628,
							"src": "886:2353:10",
							"usedErrors": [
								1572
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:10"
				},
				"id": 10
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IRedEnvelope.sol",
					"exportedSymbols": {
						"IRedEnvelope": [
							1870
						],
						"RedEnvelope": [
							1666
						],
						"Status": [
							1634
						],
						"Ticket": [
							1673
						]
					},
					"id": 1871,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:11"
						},
						{
							"canonicalName": "Status",
							"id": 1634,
							"members": [
								{
									"id": 1630,
									"name": "Pending",
									"nameLocation": "89:7:11",
									"nodeType": "EnumValue",
									"src": "89:7:11"
								},
								{
									"id": 1631,
									"name": "Open",
									"nameLocation": "103:4:11",
									"nodeType": "EnumValue",
									"src": "103:4:11"
								},
								{
									"id": 1632,
									"name": "Close",
									"nameLocation": "114:5:11",
									"nodeType": "EnumValue",
									"src": "114:5:11"
								},
								{
									"id": 1633,
									"name": "Claimable",
									"nameLocation": "126:9:11",
									"nodeType": "EnumValue",
									"src": "126:9:11"
								}
							],
							"name": "Status",
							"nameLocation": "75:6:11",
							"nodeType": "EnumDefinition",
							"src": "70:68:11"
						},
						{
							"canonicalName": "RedEnvelope",
							"id": 1666,
							"members": [
								{
									"constant": false,
									"id": 1636,
									"mutability": "mutable",
									"name": "ticketToken",
									"nameLocation": "173:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "165:19:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1635,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "165:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1639,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "198:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "191:13:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$1634",
										"typeString": "enum Status"
									},
									"typeName": {
										"id": 1638,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1637,
											"name": "Status",
											"nameLocations": [
												"191:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1634,
											"src": "191:6:11"
										},
										"referencedDeclaration": 1634,
										"src": "191:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$1634",
											"typeString": "enum Status"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1641,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "219:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "211:15:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1640,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "211:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1643,
									"mutability": "mutable",
									"name": "maxTickets",
									"nameLocation": "241:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "233:18:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1642,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1645,
									"mutability": "mutable",
									"name": "maxPrizeNum",
									"nameLocation": "266:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "258:19:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1644,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1647,
									"mutability": "mutable",
									"name": "buyTickets",
									"nameLocation": "313:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "305:18:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1646,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "305:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1649,
									"mutability": "mutable",
									"name": "sendTickets",
									"nameLocation": "365:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "357:19:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1648,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "357:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1651,
									"mutability": "mutable",
									"name": "injectTickets",
									"nameLocation": "419:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "411:21:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1650,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1653,
									"mutability": "mutable",
									"name": "userAddrNum",
									"nameLocation": "460:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "452:19:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1652,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "452:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1655,
									"mutability": "mutable",
									"name": "userTxNum",
									"nameLocation": "486:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "478:17:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1654,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1657,
									"mutability": "mutable",
									"name": "injectAddrNum",
									"nameLocation": "510:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "502:21:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1656,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "502:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1659,
									"mutability": "mutable",
									"name": "ticketPirce",
									"nameLocation": "538:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "530:19:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1658,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "530:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1661,
									"mutability": "mutable",
									"name": "sendAllowAddr",
									"nameLocation": "564:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "556:21:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1660,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "556:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1663,
									"mutability": "mutable",
									"name": "secret",
									"nameLocation": "697:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "689:14:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1662,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1665,
									"mutability": "mutable",
									"name": "autoClaim",
									"nameLocation": "715:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1666,
									"src": "710:14:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1664,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "710:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedEnvelope",
							"nameLocation": "147:11:11",
							"nodeType": "StructDefinition",
							"scope": 1871,
							"src": "140:589:11",
							"visibility": "public"
						},
						{
							"canonicalName": "Ticket",
							"id": 1673,
							"members": [
								{
									"constant": false,
									"id": 1668,
									"mutability": "mutable",
									"name": "totalNumbers",
									"nameLocation": "761:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1673,
									"src": "753:20:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1667,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "753:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1670,
									"mutability": "mutable",
									"name": "receiveAddress",
									"nameLocation": "788:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1673,
									"src": "780:22:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1669,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "780:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1672,
									"mutability": "mutable",
									"name": "buy",
									"nameLocation": "814:3:11",
									"nodeType": "VariableDeclaration",
									"scope": 1673,
									"src": "809:8:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1671,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "809:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Ticket",
							"nameLocation": "740:6:11",
							"nodeType": "StructDefinition",
							"scope": 1871,
							"src": "733:88:11",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRedEnvelope",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1870,
							"linearizedBaseContracts": [
								1870
							],
							"name": "IRedEnvelope",
							"nameLocation": "835:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "d1e3ee1889517a916aeecc9d0b214ca142fce1f8562cd5e9071876b998ec7eea",
									"id": 1691,
									"name": "RedEnvelopeCreated",
									"nameLocation": "857:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "902:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "886:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "923:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "915:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxTickets",
												"nameLocation": "949:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "941:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxPrizeNum",
												"nameLocation": "979:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "971:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketPirce",
												"nameLocation": "1009:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "1001:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketToken",
												"nameLocation": "1039:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "1031:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"indexed": false,
												"mutability": "mutable",
												"name": "sendAllowAddr",
												"nameLocation": "1069:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "1061:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "1098:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "1093:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:239:11"
									},
									"src": "851:264:11"
								},
								{
									"anonymous": false,
									"eventSelector": "8e8517d306c35510333dea682099e81a1454bbf42be03c51d19d593ad811bb70",
									"id": 1703,
									"name": "RedEnvelopeClosed",
									"nameLocation": "1129:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1173:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1157:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1194:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1186:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyTickets",
												"nameLocation": "1220:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1212:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"indexed": false,
												"mutability": "mutable",
												"name": "sendTickets",
												"nameLocation": "1249:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1241:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": false,
												"mutability": "mutable",
												"name": "injectTickets",
												"nameLocation": "1279:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1271:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:153:11"
									},
									"src": "1123:177:11"
								},
								{
									"anonymous": false,
									"eventSelector": "66f6b4cd34444af165fb78bce3996496528b37af161c26f737b7341cc37063bb",
									"id": 1709,
									"name": "RedEnvelopeClaimable",
									"nameLocation": "1314:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1361:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1345:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1382:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1374:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:62:11"
									},
									"src": "1308:89:11"
								},
								{
									"anonymous": false,
									"eventSelector": "2f21f7ec4c4f5661e7ee11613bb65b35b597763197b0d487352af168e7689653",
									"id": 1721,
									"name": "TicketsPurchase",
									"nameLocation": "1604:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1646:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1630:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1675:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1659:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "1708:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1692:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketIndex",
												"nameLocation": "1741:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1733:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "1775:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1767:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:176:11"
									},
									"src": "1598:198:11"
								},
								{
									"anonymous": false,
									"eventSelector": "044a018626111fd20a3d6ed65f4bf175632a5877b08c4aa033d87b2c7b6318b5",
									"id": 1733,
									"name": "TicketsGet",
									"nameLocation": "1810:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1847:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1831:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1876:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1860:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "1909:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1893:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketIndex",
												"nameLocation": "1942:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1934:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "1972:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1964:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:172:11"
									},
									"src": "1804:189:11"
								},
								{
									"anonymous": false,
									"eventSelector": "a95519638524dcea0d5d0102c719d77dc3d8b1ae68d2d1e37c79be21bc7b113b",
									"id": 1741,
									"name": "TicketsInject",
									"nameLocation": "2007:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2047:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "2031:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2076:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "2060:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "2101:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "2093:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:101:11"
									},
									"src": "2001:121:11"
								},
								{
									"anonymous": false,
									"eventSelector": "927546e38b674f5e5dff7edce9c7afdcf21a35ac03ba70fe8e341f61f2c73ded",
									"id": 1753,
									"name": "PrizeDrawn",
									"nameLocation": "2138:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2175:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2159:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2204:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2188:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2221:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2261:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2253:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "2283:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2278:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:151:11"
									},
									"src": "2132:168:11"
								},
								{
									"anonymous": false,
									"eventSelector": "268ef67ed0490cc273925a4865e6fbdb4dcf7e0802aad957aa682a78c7618bef",
									"id": 1763,
									"name": "ClaimPrize",
									"nameLocation": "2314:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2351:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2335:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2380:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2364:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "2405:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2397:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "2432:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2427:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2427:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:124:11"
									},
									"src": "2308:141:11"
								},
								{
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "2455:398:11",
										"text": " @notice create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式\n @dev Callable by operator\n @param _endTime: endTime of the RedEnvelope，0 = no limit\n @param _maxTickets: max ticket of the RedEnvelope，0 = no limit\n @param _maxPrizeNum: prize num of the RedEnvelope，0为100%中奖\n @param _secret: "
									},
									"functionSelector": "0e9e1262",
									"id": 1775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createRedEnvelope",
									"nameLocation": "2868:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "2904:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2896:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2896:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "_maxTickets",
												"nameLocation": "2931:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2923:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "_maxPrizeNum",
												"nameLocation": "2961:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2953:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "_secret",
												"nameLocation": "2992:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2984:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:121:11"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3014:0:11"
									},
									"scope": 1870,
									"src": "2859:156:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a42c8f6",
									"id": 1798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createRedEnvelopeDetail",
									"nameLocation": "3116:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "3158:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3150:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3150:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "_ticketPirce",
												"nameLocation": "3206:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3198:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3198:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "3237:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3229:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "_maxTickets",
												"nameLocation": "3264:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3256:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3256:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "_maxPrizeNum",
												"nameLocation": "3294:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3286:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "_injectAddress",
												"nameLocation": "3325:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3317:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "_injectTicketNum",
												"nameLocation": "3438:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3430:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "_sendAllowAddr",
												"nameLocation": "3518:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3510:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "_secret",
												"nameLocation": "3741:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3733:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "_autoClaim",
												"nameLocation": "3764:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3759:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3759:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3139:738:11"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3885:0:11"
									},
									"scope": 1870,
									"src": "3107:779:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "559f24bc",
									"id": 1805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "injectTickets",
									"nameLocation": "4002:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4024:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4016:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4036:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4028:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:36:11"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4059:0:11"
									},
									"scope": 1870,
									"src": "3993:67:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c42e0c5",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendTickets",
									"nameLocation": "4166:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4186:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "4178:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "4198:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "4190:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4222:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "4214:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:60:11"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4245:0:11"
									},
									"scope": 1870,
									"src": "4157:89:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5e7bb33",
									"id": 1823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyTickets",
									"nameLocation": "4339:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4358:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "4350:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "4370:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "4362:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4394:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "4386:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:60:11"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4417:0:11"
									},
									"scope": 1870,
									"src": "4330:88:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3834efe1",
									"id": 1828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "endRedEnvelope",
									"nameLocation": "4523:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4546:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "4538:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4538:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4537:13:11"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4558:0:11"
									},
									"scope": 1870,
									"src": "4514:45:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bce3468d",
									"id": 1835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "drawPrize",
									"nameLocation": "4646:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4664:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4656:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "4676:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4668:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4655:28:11"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4691:0:11"
									},
									"scope": 1870,
									"src": "4637:55:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d7098154",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimPrize",
									"nameLocation": "4798:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4817:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "4809:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4809:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4808:13:11"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4829:0:11"
									},
									"scope": 1870,
									"src": "4789:41:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe5c5976",
									"id": 1847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelopeStatus",
									"nameLocation": "4879:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4909:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "4901:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:13:11"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "4937:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4937:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4936:6:11"
									},
									"scope": 1870,
									"src": "4870:73:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94456fa4",
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCurrentRedEnvelopeId",
									"nameLocation": "4986:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5010:2:11"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "5035:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5034:9:11"
									},
									"scope": 1870,
									"src": "4977:67:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f91cd17",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelope",
									"nameLocation": "5085:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5109:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "5101:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5101:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5100:13:11"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "5136:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RedEnvelope_$1666_memory_ptr",
													"typeString": "struct RedEnvelope"
												},
												"typeName": {
													"id": 1857,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1856,
														"name": "RedEnvelope",
														"nameLocations": [
															"5136:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1666,
														"src": "5136:11:11"
													},
													"referencedDeclaration": 1666,
													"src": "5136:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RedEnvelope_$1666_storage_ptr",
														"typeString": "struct RedEnvelope"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:20:11"
									},
									"scope": 1870,
									"src": "5076:80:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dc912a81",
									"id": 1869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelopeClaimPrize",
									"nameLocation": "5221:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5255:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "5247:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5267:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "5259:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5259:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:27:11"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "5295:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5294:9:11"
									},
									"scope": 1870,
									"src": "5212:92:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1871,
							"src": "825:4484:11",
							"usedErrors": [],
							"usedEvents": [
								1691,
								1703,
								1709,
								1721,
								1733,
								1741,
								1753,
								1763
							]
						}
					],
					"src": "38:5271:11"
				},
				"id": 11
			},
			"contracts/interfaces/ITaskControlWithToken.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ITaskControlWithToken.sol",
					"exportedSymbols": {
						"ITaskControlWithToken": [
							1926
						]
					},
					"id": 1927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1872,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "93:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITaskControlWithToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1926,
							"linearizedBaseContracts": [
								1926
							],
							"name": "ITaskControlWithToken",
							"nameLocation": "133:21:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "4d914fbdb28a885441bb0f6e06bb01dfdfe8a8b6902391853b46eb747ae136ef",
									"id": 1882,
									"name": "TokenMint",
									"nameLocation": "172:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "190:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "182:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"indexed": false,
												"mutability": "mutable",
												"name": "taskAddr",
												"nameLocation": "205:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "197:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "222:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "214:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "245:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "237:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:71:12"
									},
									"src": "166:87:12"
								},
								{
									"anonymous": false,
									"eventSelector": "ebc14ddbdd1e1ebc5a287d8957bd1ca84faef18f192f27829b8459fd15f5195d",
									"id": 1896,
									"name": "TicketGet",
									"nameLocation": "268:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "286:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "278:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"indexed": false,
												"mutability": "mutable",
												"name": "fromAddress",
												"nameLocation": "297:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "289:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "317:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "309:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "340:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "332:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "355:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "347:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"indexed": false,
												"mutability": "mutable",
												"name": "buy",
												"nameLocation": "374:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "369:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "369:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:101:12"
									},
									"src": "262:117:12"
								},
								{
									"functionSelector": "d896fc10",
									"id": 1905,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "468:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "486:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "478:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "504:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "496:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "535:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "520:20:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1901,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "520:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:64:12"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:12"
									},
									"scope": 1926,
									"src": "459:93:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "012c911e",
									"id": 1914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTicket",
									"nameLocation": "620:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "638:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "630:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "650:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "642:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "674:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "666:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "629:60:12"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:0:12"
									},
									"scope": 1926,
									"src": "611:89:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6ebd327b",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTicketFrom",
									"nameLocation": "777:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "799:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "791:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "_fromAddress",
												"nameLocation": "811:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "803:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "832:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "824:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "856:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "848:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:81:12"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:0:12"
									},
									"scope": 1926,
									"src": "768:114:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1927,
							"src": "123:765:12",
							"usedErrors": [],
							"usedEvents": [
								1882,
								1896
							]
						}
					],
					"src": "93:795:12"
				},
				"id": 12
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ItaskCallee.sol",
					"exportedSymbols": {
						"ItaskCallee": [
							1938
						]
					},
					"id": 1939,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ItaskCallee",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1938,
							"linearizedBaseContracts": [
								1938
							],
							"name": "ItaskCallee",
							"nameLocation": "73:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e1ac8d26",
									"id": 1937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "taskCall",
									"nameLocation": "130:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "147:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "139:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "169:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "154:19:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "154:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:36:13"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "193:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:9:13"
									},
									"scope": 1938,
									"src": "121:81:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1939,
							"src": "63:141:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:168:13"
				},
				"id": 13
			},
			"contracts/taskControl/TaskControlWithToken.sol": {
				"ast": {
					"absolutePath": "contracts/taskControl/TaskControlWithToken.sol",
					"exportedSymbols": {
						"Address": [
							1528
						],
						"Context": [
							1558
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"IERC20Permit": [
							985
						],
						"IRedEnvelope": [
							1870
						],
						"ITaskControlWithToken": [
							1926
						],
						"ItaskCallee": [
							1938
						],
						"Ownable": [
							147
						],
						"RedEnvelope": [
							1666
						],
						"ReentrancyGuard": [
							1627
						],
						"SafeERC20": [
							1275
						],
						"Status": [
							1634
						],
						"TaskControlWithToken": [
							2300
						],
						"Ticket": [
							1673
						]
					},
					"id": 2301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1940,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "93:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2301,
							"sourceUnit": 800,
							"src": "123:55:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2301,
							"sourceUnit": 1276,
							"src": "183:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2301,
							"sourceUnit": 924,
							"src": "253:74:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1944,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2301,
							"sourceUnit": 148,
							"src": "332:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1945,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2301,
							"sourceUnit": 1628,
							"src": "389:59:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IRedEnvelope.sol",
							"file": "../interfaces/IRedEnvelope.sol",
							"id": 1946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2301,
							"sourceUnit": 1871,
							"src": "453:40:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ITaskControlWithToken.sol",
							"file": "../interfaces/ITaskControlWithToken.sol",
							"id": 1947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2301,
							"sourceUnit": 1927,
							"src": "498:49:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ItaskCallee.sol",
							"file": "../interfaces/ItaskCallee.sol",
							"id": 1948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2301,
							"sourceUnit": 1939,
							"src": "552:39:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1949,
										"name": "ITaskControlWithToken",
										"nameLocations": [
											"630:21:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1926,
										"src": "630:21:14"
									},
									"id": 1950,
									"nodeType": "InheritanceSpecifier",
									"src": "630:21:14"
								},
								{
									"baseName": {
										"id": 1951,
										"name": "ERC20",
										"nameLocations": [
											"652:5:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "652:5:14"
									},
									"id": 1952,
									"nodeType": "InheritanceSpecifier",
									"src": "652:5:14"
								},
								{
									"baseName": {
										"id": 1953,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"658:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1627,
										"src": "658:15:14"
									},
									"id": 1954,
									"nodeType": "InheritanceSpecifier",
									"src": "658:15:14"
								},
								{
									"baseName": {
										"id": 1955,
										"name": "ERC20Burnable",
										"nameLocations": [
											"675:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "675:13:14"
									},
									"id": 1956,
									"nodeType": "InheritanceSpecifier",
									"src": "675:13:14"
								},
								{
									"baseName": {
										"id": 1957,
										"name": "Ownable",
										"nameLocations": [
											"690:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "690:7:14"
									},
									"id": 1958,
									"nodeType": "InheritanceSpecifier",
									"src": "690:7:14"
								}
							],
							"canonicalName": "TaskControlWithToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2300,
							"linearizedBaseContracts": [
								2300,
								147,
								923,
								1627,
								799,
								189,
								949,
								877,
								1558,
								1926
							],
							"name": "TaskControlWithToken",
							"nameLocation": "606:20:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1962,
									"libraryName": {
										"id": 1959,
										"name": "SafeERC20",
										"nameLocations": [
											"714:9:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1275,
										"src": "714:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "708:27:14",
									"typeName": {
										"id": 1961,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1960,
											"name": "IERC20",
											"nameLocations": [
												"728:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "728:6:14"
										},
										"referencedDeclaration": 877,
										"src": "728:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "c7ff23bb",
									"id": 1964,
									"mutability": "mutable",
									"name": "redEnvelopeAddr",
									"nameLocation": "759:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 2300,
									"src": "744:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1963,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4309a9c",
									"id": 1966,
									"mutability": "mutable",
									"name": "allowBuyTicket",
									"nameLocation": "796:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2300,
									"src": "784:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1965,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "784:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06e2a29a",
									"id": 1968,
									"mutability": "mutable",
									"name": "allowSendTicket",
									"nameLocation": "832:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 2300,
									"src": "820:27:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1967,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "820:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e405663f",
									"id": 1972,
									"mutability": "mutable",
									"name": "_tasks",
									"nameLocation": "893:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 2300,
									"src": "858:41:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1971,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1969,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "866:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "858:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1970,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "877:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8",
									"id": 1978,
									"name": "TaskAdd",
									"nameLocation": "944:7:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"indexed": false,
												"mutability": "mutable",
												"name": "taskAddr",
												"nameLocation": "960:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "952:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "977:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "969:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:33:14"
									},
									"src": "938:47:14"
								},
								{
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "1170:225:14",
										"statements": [
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1998,
														"name": "redEnvelopeAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "1243:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1999,
														"name": "_redEnvelopeAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1980,
														"src": "1261:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1243:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "1243:34:14"
											},
											{
												"expression": {
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2002,
														"name": "allowBuyTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "1291:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2003,
														"name": "_allowBuyTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1982,
														"src": "1308:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1291:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "1291:32:14"
											},
											{
												"expression": {
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2006,
														"name": "allowSendTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "1337:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2007,
														"name": "_allowSendTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1984,
														"src": "1355:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1337:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "1337:34:14"
											}
										]
									},
									"id": 2011,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "6c6f74746572795469636b6574",
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1094:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cc28e07ade3da62a701fc6b6c5fb7e2d52f2f8a262d24a0a00aa62c89688d76d",
														"typeString": "literal_string \"lotteryTicket\""
													},
													"value": "lotteryTicket"
												},
												{
													"hexValue": "5469636b6574",
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1111:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_adc9ea83d7d69e1f89766083ed31732a556805d45b99c35409751054a912085a",
														"typeString": "literal_string \"Ticket\""
													},
													"value": "Ticket"
												}
											],
											"id": 1989,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1986,
												"name": "ERC20",
												"nameLocations": [
													"1088:5:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1088:5:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1088:32:14"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"expression": {
																"id": 1993,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1149:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1153:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1149:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1141:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1991,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1141:7:14",
															"typeDescriptions": {}
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1141:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1996,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1990,
												"name": "Ownable",
												"nameLocations": [
													"1133:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1133:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1133:28:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "_redEnvelopeAddr",
												"nameLocation": "1015:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1007:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "_allowBuyTicket",
												"nameLocation": "1037:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1032:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1032:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "_allowSendTicket",
												"nameLocation": "1058:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1053:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1983,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1053:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:69:14"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1170:0:14"
									},
									"scope": 2300,
									"src": "995:400:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "1667:98:14",
										"statements": [
											{
												"expression": {
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2020,
															"name": "_tasks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "1681:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2022,
														"indexExpression": {
															"id": 2021,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "1688:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1681:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2023,
														"name": "_weight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "1701:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1681:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2025,
												"nodeType": "ExpressionStatement",
												"src": "1681:27:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2027,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "1735:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2028,
															"name": "_weight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "1746:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2026,
														"name": "TaskAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "1727:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1727:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2030,
												"nodeType": "EmitStatement",
												"src": "1722:32:14"
											}
										]
									},
									"functionSelector": "082921a5",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2018,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2017,
												"name": "onlyOwner",
												"nameLocations": [
													"1658:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1658:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1658:9:14"
										}
									],
									"name": "setTask",
									"nameLocation": "1607:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "1623:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "1615:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "_weight",
												"nameLocation": "1641:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "1633:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:35:14"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1667:0:14"
									},
									"scope": 2300,
									"src": "1598:167:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "1841:49:14",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2039,
														"name": "_tasks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "1862:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2041,
													"indexExpression": {
														"id": 2040,
														"name": "_taskAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "1869:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1862:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2042,
												"nodeType": "Return",
												"src": "1855:24:14"
											}
										]
									},
									"functionSelector": "019f232a",
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTask",
									"nameLocation": "1783:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "1799:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "1791:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:19:14"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "1832:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:9:14"
									},
									"scope": 2300,
									"src": "1774:116:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1905
									],
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "2022:370:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2057,
																	"name": "_tasks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1972,
																	"src": "2044:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2059,
																"indexExpression": {
																	"id": 2058,
																	"name": "_taskAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "2051:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2044:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2065:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2044:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f20736574206173207461736b",
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2067:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673",
																"typeString": "literal_string \"no set as task\""
															},
															"value": "no set as task"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673",
																"typeString": "literal_string \"no set as task\""
															}
														],
														"id": 2056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2036:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:48:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2064,
												"nodeType": "ExpressionStatement",
												"src": "2036:48:14"
											},
											{
												"assignments": [
													2066
												],
												"declarations": [
													{
														"constant": false,
														"id": 2066,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2168:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2099,
														"src": "2160:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2160:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2082,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2073,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2217:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2221:6:14",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2217:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2209:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2071,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2209:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2209:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2076,
																"name": "_data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "2229:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2068,
																		"name": "_taskAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "2189:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2067,
																	"name": "ItaskCallee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "2177:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ItaskCallee_$1938_$",
																		"typeString": "type(contract ItaskCallee)"
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2177:22:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ItaskCallee_$1938",
																	"typeString": "contract ItaskCallee"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2200:8:14",
															"memberName": "taskCall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1937,
															"src": "2177:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (address,bytes memory) external returns (uint256)"
															}
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2177:58:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"baseExpression": {
															"id": 2078,
															"name": "_tasks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "2238:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2080,
														"indexExpression": {
															"id": 2079,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "2245:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2238:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2177:78:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2160:95:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2084,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "2275:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2085,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "2292:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2083,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2269:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:30:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "2269:30:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2091,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2336:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2340:6:14",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2336:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2328:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2089,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2328:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2328:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2094,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "2348:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2095,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "2358:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2096,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "2374:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2088,
														"name": "TokenMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "2318:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2318:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2098,
												"nodeType": "EmitStatement",
												"src": "2313:68:14"
											}
										]
									},
									"functionSelector": "d896fc10",
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2054,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2053,
												"name": "nonReentrant",
												"nameLocations": [
													"2010:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1591,
												"src": "2010:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2010:12:14"
										}
									],
									"name": "mintToken",
									"nameLocation": "1910:9:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2052,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2001:8:14"
									},
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "1928:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "1920:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "1946:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "1938:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1977:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "1962:20:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1962:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:64:14"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:14"
									},
									"scope": 2300,
									"src": "1901:491:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "2503:815:14",
										"statements": [
											{
												"assignments": [
													2112
												],
												"declarations": [
													{
														"constant": false,
														"id": 2112,
														"mutability": "mutable",
														"name": "buy",
														"nameLocation": "2522:3:14",
														"nodeType": "VariableDeclaration",
														"scope": 2189,
														"src": "2517:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2111,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2517:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2114,
												"initialValue": {
													"hexValue": "74727565",
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2528:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2517:15:14"
											},
											{
												"assignments": [
													2117
												],
												"declarations": [
													{
														"constant": false,
														"id": 2117,
														"mutability": "mutable",
														"name": "redEnvelope",
														"nameLocation": "2565:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2189,
														"src": "2546:30:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RedEnvelope_$1666_memory_ptr",
															"typeString": "struct RedEnvelope"
														},
														"typeName": {
															"id": 2116,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2115,
																"name": "RedEnvelope",
																"nameLocations": [
																	"2546:11:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1666,
																"src": "2546:11:14"
															},
															"referencedDeclaration": 1666,
															"src": "2546:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RedEnvelope_$1666_storage_ptr",
																"typeString": "struct RedEnvelope"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2124,
												"initialValue": {
													"arguments": [
														{
															"id": 2122,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "2625:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2119,
																	"name": "redEnvelopeAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1964,
																	"src": "2592:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2118,
																"name": "IRedEnvelope",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "2579:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1870_$",
																	"typeString": "type(contract IRedEnvelope)"
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2579:29:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRedEnvelope_$1870",
																"typeString": "contract IRedEnvelope"
															}
														},
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2609:15:14",
														"memberName": "viewRedEnvelope",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1860,
														"src": "2579:45:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_RedEnvelope_$1666_memory_ptr_$",
															"typeString": "function (uint256) view external returns (struct RedEnvelope memory)"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2579:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RedEnvelope_$1666_memory_ptr",
														"typeString": "struct RedEnvelope memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2546:83:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2125,
															"name": "redEnvelope",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "2647:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RedEnvelope_$1666_memory_ptr",
																"typeString": "struct RedEnvelope memory"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2659:13:14",
														"memberName": "sendAllowAddr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1661,
														"src": "2647:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2684:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2676:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2127,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2676:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2676:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2647:39:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2185,
													"nodeType": "Block",
													"src": "3055:229:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2166,
																			"name": "allowSendTicket",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1968,
																			"src": "3081:15:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 2167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3100:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "3081:23:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "73656e64207469636b6574206e6f20616c6c6f77",
																		"id": 2169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3106:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0",
																			"typeString": "literal_string \"send ticket no allow\""
																		},
																		"value": "send ticket no allow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0",
																			"typeString": "literal_string \"send ticket no allow\""
																		}
																	],
																	"id": 2165,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3073:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3073:56:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2171,
															"nodeType": "ExpressionStatement",
															"src": "3073:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2176,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2102,
																		"src": "3205:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2177,
																		"name": "_receiveAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "3209:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2178,
																		"name": "_ticketNumbers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2106,
																		"src": "3225:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2173,
																				"name": "redEnvelopeAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "3176:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2172,
																			"name": "IRedEnvelope",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "3163:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1870_$",
																				"typeString": "type(contract IRedEnvelope)"
																			}
																		},
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3163:29:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IRedEnvelope_$1870",
																			"typeString": "contract IRedEnvelope"
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3193:11:14",
																	"memberName": "sendTickets",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1814,
																	"src": "3163:41:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256) external"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3163:77:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2180,
															"nodeType": "ExpressionStatement",
															"src": "3163:77:14"
														},
														{
															"expression": {
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2181,
																	"name": "buy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2112,
																	"src": "3258:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3264:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3258:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2184,
															"nodeType": "ExpressionStatement",
															"src": "3258:11:14"
														}
													]
												},
												"id": 2186,
												"nodeType": "IfStatement",
												"src": "2643:641:14",
												"trueBody": {
													"id": 2164,
													"nodeType": "Block",
													"src": "2687:364:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2133,
																			"name": "allowBuyTicket",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1966,
																			"src": "2719:14:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2737:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "2719:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "627579207469636b6574206e6f20616c6c6f77",
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2743:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78",
																			"typeString": "literal_string \"buy ticket no allow\""
																		},
																		"value": "buy ticket no allow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78",
																			"typeString": "literal_string \"buy ticket no allow\""
																		}
																	],
																	"id": 2132,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2711:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2711:54:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2138,
															"nodeType": "ExpressionStatement",
															"src": "2711:54:14"
														},
														{
															"assignments": [
																2140
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2140,
																	"mutability": "mutable",
																	"name": "approveAmount",
																	"nameLocation": "2791:13:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2164,
																	"src": "2783:21:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2139,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2783:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2145,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2141,
																		"name": "redEnvelope",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "2807:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RedEnvelope_$1666_memory_ptr",
																			"typeString": "struct RedEnvelope memory"
																		}
																	},
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2819:11:14",
																	"memberName": "ticketPirce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1659,
																	"src": "2807:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2143,
																	"name": "_ticketNumbers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "2833:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2807:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2783:64:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2151,
																		"name": "redEnvelopeAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "2905:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2152,
																		"name": "approveAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2140,
																		"src": "2921:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2147,
																					"name": "redEnvelope",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "2872:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RedEnvelope_$1666_memory_ptr",
																						"typeString": "struct RedEnvelope memory"
																					}
																				},
																				"id": 2148,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2884:11:14",
																				"memberName": "ticketToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1636,
																				"src": "2872:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2146,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "2865:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2865:31:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2897:7:14",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "2865:39:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2865:70:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2154,
															"nodeType": "ExpressionStatement",
															"src": "2865:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2159,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2102,
																		"src": "3001:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2160,
																		"name": "_receiveAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "3005:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2161,
																		"name": "_ticketNumbers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2106,
																		"src": "3021:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2156,
																				"name": "redEnvelopeAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "2973:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2155,
																			"name": "IRedEnvelope",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "2960:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1870_$",
																				"typeString": "type(contract IRedEnvelope)"
																			}
																		},
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2960:29:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IRedEnvelope_$1870",
																			"typeString": "contract IRedEnvelope"
																		}
																	},
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2990:10:14",
																	"memberName": "buyTickets",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1823,
																	"src": "2960:40:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256) external"
																	}
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2960:76:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2163,
															"nodeType": "ExpressionStatement",
															"src": "2960:76:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2187,
													"name": "buy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2112,
													"src": "3304:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2110,
												"id": 2188,
												"nodeType": "Return",
												"src": "3297:10:14"
											}
										]
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTicket",
									"nameLocation": "2411:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2430:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2422:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "2442:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2434:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2434:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "2466:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2458:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:60:14"
									},
									"returnParameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2498:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2498:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:6:14"
									},
									"scope": 2300,
									"src": "2402:916:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1914
									],
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "3432:268:14",
										"statements": [
											{
												"assignments": [
													2201
												],
												"declarations": [
													{
														"constant": false,
														"id": 2201,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3454:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "3446:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2200,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3446:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2208,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2202,
														"name": "_ticketNumbers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "3463:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3480:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2204,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "3486:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3486:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "3480:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3463:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3446:50:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2210,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "3515:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2209,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3510:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:12:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2212,
												"nodeType": "ExpressionStatement",
												"src": "3510:12:14"
											},
											{
												"assignments": [
													2214
												],
												"declarations": [
													{
														"constant": false,
														"id": 2214,
														"mutability": "mutable",
														"name": "buy",
														"nameLocation": "3541:3:14",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "3536:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2213,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3536:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2220,
												"initialValue": {
													"arguments": [
														{
															"id": 2216,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "3558:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2217,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "3562:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2218,
															"name": "_ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "3578:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2215,
														"name": "_getTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "3547:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,address,uint256) returns (bool)"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3547:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3536:57:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2222,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "3623:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2225,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3635:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3639:6:14",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3635:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3627:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2223,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3627:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3627:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2228,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "3647:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2229,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "3663:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2230,
															"name": "_ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "3670:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2231,
															"name": "buy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "3685:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2221,
														"name": "TicketGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "3613:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,bool)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3613:76:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "EmitStatement",
												"src": "3608:81:14"
											}
										]
									},
									"functionSelector": "012c911e",
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTicket",
									"nameLocation": "3337:9:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2198,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3423:8:14"
									},
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3355:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "3347:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3347:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "3367:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "3359:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "3391:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "3383:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3346:60:14"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3432:0:14"
									},
									"scope": 2300,
									"src": "3328:372:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1925
									],
									"body": {
										"id": 2278,
										"nodeType": "Block",
										"src": "3838:278:14",
										"statements": [
											{
												"assignments": [
													2248
												],
												"declarations": [
													{
														"constant": false,
														"id": 2248,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3860:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2278,
														"src": "3852:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3852:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2255,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2249,
														"name": "_ticketNumbers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "3869:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3886:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2251,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "3892:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3892:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "3886:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3869:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3852:50:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2257,
															"name": "_fromAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "3925:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2258,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "3938:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2256,
														"name": "burnFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "3916:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:29:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "3916:29:14"
											},
											{
												"assignments": [
													2262
												],
												"declarations": [
													{
														"constant": false,
														"id": 2262,
														"mutability": "mutable",
														"name": "buy",
														"nameLocation": "3964:3:14",
														"nodeType": "VariableDeclaration",
														"scope": 2278,
														"src": "3959:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2261,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3959:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2268,
												"initialValue": {
													"arguments": [
														{
															"id": 2264,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "3981:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2265,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "3985:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2266,
															"name": "_ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "4001:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2263,
														"name": "_getTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "3970:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,address,uint256) returns (bool)"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3970:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3959:57:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2270,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "4046:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2271,
															"name": "_fromAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "4050:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2272,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "4063:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "4079:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2274,
															"name": "_ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "4086:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2275,
															"name": "buy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "4101:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2269,
														"name": "TicketGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "4036:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,bool)"
														}
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:69:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2277,
												"nodeType": "EmitStatement",
												"src": "4031:74:14"
											}
										]
									},
									"functionSelector": "6ebd327b",
									"id": 2279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTicketFrom",
									"nameLocation": "3718:13:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2245,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3829:8:14"
									},
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3740:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "3732:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "_fromAddress",
												"nameLocation": "3752:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "3744:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "3773:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "3765:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "3797:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "3789:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3731:81:14"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3838:0:14"
									},
									"scope": 2300,
									"src": "3709:407:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "4244:60:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2294,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "4282:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2295,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "4286:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2291,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2281,
																	"src": "4265:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2290,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "4258:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4258:14:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4273:8:14",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "4258:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "4258:35:14"
											}
										]
									},
									"functionSelector": "d9caed12",
									"id": 2299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2287,
												"name": "onlyOwner",
												"nameLocations": [
													"4235:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4235:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4235:9:14"
										}
									],
									"name": "withdraw",
									"nameLocation": "4167:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4184:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "4176:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4199:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "4191:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "4211:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "4203:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4203:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4175:43:14"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4244:0:14"
									},
									"scope": 2300,
									"src": "4158:146:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 2301,
							"src": "597:3713:14",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1572
							],
							"usedEvents": [
								24,
								811,
								820,
								1882,
								1896,
								1978
							]
						}
					],
					"src": "93:4217:14"
				},
				"id": 14
			}
		}
	}
}