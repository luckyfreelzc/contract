{
	"id": "db66854b0fbf0a8cabd4fcc2280bbd33",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/DefaultTaskControl.sol": {
				"content": "    // SPDX-License-Identifier: MIT\n    // Compatible with OpenZeppelin Contracts ^5.0.0\n    pragma solidity ^0.8.19;\n\n    import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n    import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n    import \"@openzeppelin/contracts/access/Ownable.sol\";\n    import \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n    import \"./interfaces/IRedEnvelope.sol\";\n    import \"./interfaces/ITaskControl.sol\";\n    import \"./interfaces/ItaskCallee.sol\";\n\n    contract DefaultTaskControl is ITaskControl,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {\n        address public redEnvelopeAddr;\n        bool public allowBuyTicket;\n        bool public allowSendTicket;\n\n        mapping(address => uint256) private _tasks;     //记录任务及权重\n\n        event TaskAdd(address taskAddr,uint256 weight);\n\n        constructor(address _redEnvelopeAddr,bool _allowBuyTicket,bool _allowSendTicket)\n            ERC20(\"lotteryTicket\", \"Ticket\")\n            Ownable(address(msg.sender))\n        {\n            //_mint(msg.sender, 10000 * 10 ** decimals());\n            redEnvelopeAddr = _redEnvelopeAddr;\n            allowBuyTicket = _allowBuyTicket;\n            allowSendTicket = _allowSendTicket;\n            \n        }\n\n        /*\n        function decimals() public view override virtual returns (uint8) {\n            return 6;\n        }*/\n\n        //设置任务及权重，若权重为0，则等同删除任务\n        function setTask(address _taskAddr,uint256 _weight)external onlyOwner{\n            _tasks[_taskAddr] = _weight;\n            emit TaskAdd(_taskAddr, _weight);\n        }\n\n\n        function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data) external nonReentrant{\n            require(_tasks[_taskAddr] != 0,\"no set as task\");\n\n            //实际铸造token数为runTask返回值*权重\n            uint256 amount = ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr];\n            _mint(_receiveAddress, amount);\n            emit TokenMint(address(msg.sender),_taskAddr,_receiveAddress,amount);\n        }\n\n        function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){\n            bool buy = true;\n            RedEnvelope memory redEnvelope = IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id);\n            if (redEnvelope.sendAllowAddr == address(0)){      \n                require(allowBuyTicket == true, \"buy ticket no allow\");\n                uint256 approveAmount = redEnvelope.ticketPirce * _ticketNumbers;\n                IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount);       \n                IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers);\n            }else{\n                require(allowSendTicket == true, \"send ticket no allow\");                \n                IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers);\n                buy = false;\n            }\n            return buy;\n        }\n\n        function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external{\n            uint256 amount = _ticketNumbers * 10 ** decimals();\n            burn(amount);\n            bool buy = _getTicket(_id,_receiveAddress,_ticketNumbers);\n\n            emit TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy);\n        }\n        function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external{\n            uint256 amount = _ticketNumbers * 10 ** decimals();\n            burnFrom(_fromAddress,amount);\n            bool buy = _getTicket(_id,_receiveAddress,_ticketNumbers);\n\n            emit TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy);\n        }\n\n        //提取第三方代币\n        function withdraw(address _token,address _to,uint256 _value)external onlyOwner{\n            IERC20(_token).transfer(_to,_value);\n        }\n    }"
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.19;\n\ninterface ItaskCallee{\n    //执行具体领取任务\n    function taskCall(address sender,bytes calldata data) external  returns(uint256);\n}\n"
			},
			"contracts/interfaces/ITaskControl.sol": {
				"content": "    // SPDX-License-Identifier: MIT\n    // Compatible with OpenZeppelin Contracts ^5.0.0\n    pragma solidity ^0.8.19;\n\n    interface ITaskControl  {\n        event TokenMint(address sender,address taskAddr,address receiveAddress,uint256 amount);\n        event TicketGet(uint256 id,address fromAddress,address receiveAddress,uint256 amount,uint256 ticketNumbers,bool buy);\n        \n        //执行_taskAddr合约任务，并发放任务代币\n        function mintToken(address _taskAddr,address _receiveAddress,bytes calldata data) external;\n        //花费自身任务代币并参与抽奖\n        function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external;\n\n        function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external;\n    }"
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity ^0.8.19;\r\n\r\n\r\n\r\nenum Status {\r\n    Pending,\r\n    Open,\r\n    Close,\r\n    Claimable\r\n}\r\nstruct RedEnvelope{\r\n    address ticketToken;\r\n    Status status;\r\n    uint256 endTime;\r\n    uint256 maxTickets;\r\n    uint256 maxPrizeNum;    //最大中奖数\r\n    uint256 buyTickets;    //用户购买投注数\r\n    uint256 sendTickets;     //用户获取投注数\r\n    uint256 injectTickets;  //捐赠数\r\n    uint256 userAddrNum;\r\n    uint256 userTxNum;\r\n    uint256 injectAddrNum;\r\n    uint256 ticketPirce;\r\n    address sendAllowAddr;  //可调用领取接口的地址，若设置非0x0，则仅允许getTickets，否则仅允许buyTickets\r\n    uint256 secret;\r\n    bool autoClaim; \r\n}\r\n\r\nstruct Ticket{\r\n    uint256 totalNumbers;\r\n    address receiveAddress;\r\n    bool buy;\r\n}\r\n\r\ninterface IRedEnvelope{\r\n event RedEnvelopeCreated(\r\n        uint256 indexed id,\r\n        uint256 endTime,\r\n        uint256 maxTickets, \r\n        uint256 maxPrizeNum,\r\n        uint256 ticketPirce,\r\n        address ticketToken,\r\n        address sendAllowAddr,\r\n        bool autoClaim\r\n    );\r\n\r\n    event RedEnvelopeClosed(\r\n        uint256 indexed id,\r\n        uint256 endTime,\r\n        uint256 buyTickets,\r\n        uint256 sendTickets,\r\n        uint256 injectTickets\r\n    );\r\n\r\n    event RedEnvelopeClaimable(\r\n        uint256 indexed id,\r\n        uint256 endTime\r\n    );\r\n\r\n    //ticketIndex表明购注的起始编号\r\n    //若ticketIndex为23，ticketNumbers为1，则奖注的编号为23\r\n    //若ticketIndex为0，ticketNumbers为10，则奖注的编号为0-9\r\n    event TicketsPurchase(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        address indexed receiveAddress,\r\n        uint256 ticketIndex,    \r\n        uint256 ticketNumbers\r\n    );\r\n\r\n    event TicketsGet(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        address indexed receiveAddress,\r\n        uint256 ticketIndex,\r\n        uint256 ticketNumbers\r\n    );\r\n\r\n    event TicketsInject(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        uint256 ticketNumbers\r\n    );\r\n\r\n\r\n    event PrizeDrawn(\r\n        uint256 indexed id,\r\n        address indexed winner,\r\n        uint256 indexed index,\r\n        uint256 amount,\r\n        bool autoClaim\r\n    );\r\n\r\n    event ClaimPrize(\r\n        uint256 indexed id,\r\n        address indexed winner,\r\n        uint256 totalAmount,\r\n        bool autoClaim\r\n    );\r\n    /**\r\n     * @notice create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式\r\n     * @dev Callable by operator\r\n     * @param _endTime: endTime of the RedEnvelope，0 = no limit\r\n     * @param _maxTickets: max ticket of the RedEnvelope，0 = no limit\r\n     * @param _maxPrizeNum: prize num of the RedEnvelope，0为100%中奖\r\n     * @param _secret: \r\n     */\r\n    function createRedEnvelope(\r\n        uint256 _endTime,\r\n        uint256 _maxTickets,\r\n        uint256 _maxPrizeNum,\r\n        uint256 _secret\r\n    )external;\r\n    \r\n    //精细化创建红包，指定该批次红包的代币及奖注价格，\r\n    function createRedEnvelopeDetail(\r\n        address _tokenAddress,  //代币地址\r\n        uint256 _ticketPirce,\r\n        uint256 _endTime,\r\n        uint256 _maxTickets,\r\n        uint256 _maxPrizeNum,\r\n        address _injectAddress,     //可在创建活动时即向该红包奖池捐赠代币，需approve额度\r\n        uint256 _injectTicketNum,   //初始化时捐赠额度，0为不捐赠\r\n        address _sendAllowAddr,     //若为0x0，则表明为buyTickets模式，仅允许buyTickets；若为非0x0地址，则为sendTickets模式，仅允许_sendTicketAddr地址对第三方通过sendTickets赠送奖注\r\n        uint256 _secret,\r\n        bool _autoClaim             //是否自动领取，若为false，需要中奖用户自行通过claimPrize领奖\r\n    )external;\r\n\r\n    //向奖池捐赠资产额度，不参与抽奖，任何地址可调用，需要approve授权\r\n    function injectTickets(uint256 _id,uint256 _ticketNumbers)external;\r\n\r\n    //在sendTickets模式下可被SendAllowAddr地址调用，指定领取奖注额度\r\n    function sendTickets(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external;\r\n\r\n    //在buyTickets模式下可被任何地址调用，需要approve额度\r\n    function buyTickets(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external;\r\n\r\n    //结束投注，调用后该红包不再接受injectTickets/getTickets/buyTickets\r\n    function endRedEnvelope(uint256 _id)external;\r\n\r\n    //开奖，若_autoClaim为true，则自动向中奖用户派奖\r\n    function drawPrize(uint256 _id,uint256 _nonce)external;\r\n\r\n    //开奖后，若_autoClaim为false，需要中奖用户调用该接口手动领奖\r\n    function claimPrize(uint256 _id)external;\r\n\r\n    //查询指定红包状态\r\n    function viewRedEnvelopeStatus(uint256 _id)external view  returns (uint);\r\n    //查询最新红包id\r\n    function viewCurrentRedEnvelopeId() external view returns(uint256);\r\n    //查询红包详情\r\n    function viewRedEnvelope(uint256 _id)external view returns (RedEnvelope memory);\r\n    //查询指定用户可领取的中奖金额\r\n    function viewRedEnvelopeClaimPrize(uint256 _id,address _user)external view returns(uint256);\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 990,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DefaultTaskControl.sol": {
				"DefaultTaskControl": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_redEnvelopeAddr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_allowBuyTicket",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_allowSendTicket",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "TaskAdd",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fromAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "buy",
									"type": "bool"
								}
							],
							"name": "TicketGet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "allowBuyTicket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allowSendTicket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "getTicket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_fromAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "getTicketFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redEnvelopeAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "setTask",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DefaultTaskControl.sol\":515:3996  contract DefaultTaskControl is ITaskControl,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DefaultTaskControl.sol\":867:1267  constructor(address _redEnvelopeAddr,bool _allowBuyTicket,bool _allowSendTicket)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/DefaultTaskControl.sol\":1021:1031  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x9a, 0x1b1bdd1d195c9e551a58dad95d)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd2, 0x151a58dad95d)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x05\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  sstore\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3469:3520   */\n  mstore\n    /* \"#utility.yul\":3442:3460   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/DefaultTaskControl.sol\":1115:1130  redEnvelopeAddr */\n  0x07\n    /* \"contracts/DefaultTaskControl.sol\":1115:1149  redEnvelopeAddr = _redEnvelopeAddr */\n  dup1\n  sload\n    /* \"contracts/DefaultTaskControl.sol\":1209:1243  allowSendTicket = _allowSendTicket */\n  swap2\n  iszero\n  iszero\n  shl(0xa8, 0x01)\n  mul\n  not(shl(0xa8, 0xff))\n    /* \"contracts/DefaultTaskControl.sol\":1163:1195  allowBuyTicket = _allowBuyTicket */\n  swap4\n  iszero\n  iszero\n  shl(0xa0, 0x01)\n  mul\n  not(sub(shl(0xa8, 0x01), 0x01))\n  swap1\n  swap4\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/DefaultTaskControl.sol\":1115:1149  redEnvelopeAddr = _redEnvelopeAddr */\n  swap1\n  swap6\n  and\n    /* \"contracts/DefaultTaskControl.sol\":1163:1195  allowBuyTicket = _allowBuyTicket */\n  swap5\n  swap1\n  swap5\n  or\n  swap2\n  swap1\n  swap2\n  or\n    /* \"contracts/DefaultTaskControl.sol\":1209:1243  allowSendTicket = _allowSendTicket */\n  swap2\n  swap1\n  swap2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/DefaultTaskControl.sol\":515:3996  contract DefaultTaskControl is ITaskControl,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:178   */\ntag_22:\n    /* \"#utility.yul\":90:103   */\n  dup1\n  mload\n    /* \"#utility.yul\":139:152   */\n  dup1\n  iszero\n    /* \"#utility.yul\":132:153   */\n  iszero\n    /* \"#utility.yul\":122:154   */\n  dup2\n  eq\n    /* \"#utility.yul\":112:172   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":168:169   */\n  0x00\n    /* \"#utility.yul\":165:166   */\n  dup1\n    /* \"#utility.yul\":158:170   */\n  revert\n    /* \"#utility.yul\":112:172   */\ntag_30:\n    /* \"#utility.yul\":14:178   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":183:631   */\ntag_3:\n    /* \"#utility.yul\":265:271   */\n  0x00\n    /* \"#utility.yul\":273:279   */\n  dup1\n    /* \"#utility.yul\":281:287   */\n  0x00\n    /* \"#utility.yul\":334:336   */\n  0x60\n    /* \"#utility.yul\":322:331   */\n  dup5\n    /* \"#utility.yul\":313:320   */\n  dup7\n    /* \"#utility.yul\":309:332   */\n  sub\n    /* \"#utility.yul\":305:337   */\n  slt\n    /* \"#utility.yul\":302:354   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":350:351   */\n  0x00\n    /* \"#utility.yul\":347:348   */\n  dup1\n    /* \"#utility.yul\":340:352   */\n  revert\n    /* \"#utility.yul\":302:354   */\ntag_32:\n    /* \"#utility.yul\":376:392   */\n  dup4\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":421:452   */\n  dup2\n  and\n    /* \"#utility.yul\":411:453   */\n  dup2\n  eq\n    /* \"#utility.yul\":401:471   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":467:468   */\n  0x00\n    /* \"#utility.yul\":464:465   */\n  dup1\n    /* \"#utility.yul\":457:469   */\n  revert\n    /* \"#utility.yul\":401:471   */\ntag_33:\n    /* \"#utility.yul\":490:495   */\n  swap3\n  pop\n    /* \"#utility.yul\":514:560   */\n  tag_34\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":541:559   */\n  dup6\n  add\n    /* \"#utility.yul\":514:560   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":504:560   */\n  swap2\n  pop\n    /* \"#utility.yul\":579:625   */\n  tag_35\n    /* \"#utility.yul\":621:623   */\n  0x40\n    /* \"#utility.yul\":610:619   */\n  dup6\n    /* \"#utility.yul\":606:624   */\n  add\n    /* \"#utility.yul\":579:625   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":569:625   */\n  swap1\n  pop\n    /* \"#utility.yul\":183:631   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":636:763   */\ntag_23:\n    /* \"#utility.yul\":697:707   */\n  0x4e487b71\n    /* \"#utility.yul\":692:695   */\n  0xe0\n    /* \"#utility.yul\":688:708   */\n  shl\n    /* \"#utility.yul\":685:686   */\n  0x00\n    /* \"#utility.yul\":678:709   */\n  mstore\n    /* \"#utility.yul\":728:732   */\n  0x41\n    /* \"#utility.yul\":725:726   */\n  0x04\n    /* \"#utility.yul\":718:733   */\n  mstore\n    /* \"#utility.yul\":752:756   */\n  0x24\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":742:757   */\n  revert\n    /* \"#utility.yul\":768:1148   */\ntag_24:\n    /* \"#utility.yul\":847:848   */\n  0x01\n    /* \"#utility.yul\":843:855   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":890:902   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":911:972   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":965:969   */\n  0x7f\n    /* \"#utility.yul\":957:963   */\n  dup3\n    /* \"#utility.yul\":953:970   */\n  and\n    /* \"#utility.yul\":943:970   */\n  swap2\n  pop\n    /* \"#utility.yul\":911:972   */\ntag_38:\n    /* \"#utility.yul\":1018:1020   */\n  0x20\n    /* \"#utility.yul\":1010:1016   */\n  dup3\n    /* \"#utility.yul\":1007:1021   */\n  lt\n    /* \"#utility.yul\":987:1005   */\n  dup2\n    /* \"#utility.yul\":984:1022   */\n  sub\n    /* \"#utility.yul\":981:1142   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1064:1074   */\n  0x4e487b71\n    /* \"#utility.yul\":1059:1062   */\n  0xe0\n    /* \"#utility.yul\":1055:1075   */\n  shl\n    /* \"#utility.yul\":1052:1053   */\n  0x00\n    /* \"#utility.yul\":1045:1076   */\n  mstore\n    /* \"#utility.yul\":1099:1103   */\n  0x22\n    /* \"#utility.yul\":1096:1097   */\n  0x04\n    /* \"#utility.yul\":1089:1104   */\n  mstore\n    /* \"#utility.yul\":1127:1131   */\n  0x24\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1117:1132   */\n  revert\n    /* \"#utility.yul\":981:1142   */\ntag_39:\n  pop\n    /* \"#utility.yul\":768:1148   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1279:1797   */\ntag_26:\n    /* \"#utility.yul\":1381:1383   */\n  0x1f\n    /* \"#utility.yul\":1376:1379   */\n  dup3\n    /* \"#utility.yul\":1373:1384   */\n  gt\n    /* \"#utility.yul\":1370:1791   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1417:1422   */\n  dup1\n    /* \"#utility.yul\":1414:1415   */\n  0x00\n    /* \"#utility.yul\":1407:1423   */\n  mstore\n    /* \"#utility.yul\":1461:1465   */\n  0x20\n    /* \"#utility.yul\":1458:1459   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  keccak256\n    /* \"#utility.yul\":1531:1533   */\n  0x1f\n    /* \"#utility.yul\":1519:1529   */\n  dup5\n    /* \"#utility.yul\":1515:1534   */\n  add\n    /* \"#utility.yul\":1512:1513   */\n  0x05\n    /* \"#utility.yul\":1508:1535   */\n  shr\n    /* \"#utility.yul\":1502:1506   */\n  dup2\n    /* \"#utility.yul\":1498:1536   */\n  add\n    /* \"#utility.yul\":1567:1571   */\n  0x20\n    /* \"#utility.yul\":1555:1565   */\n  dup6\n    /* \"#utility.yul\":1552:1572   */\n  lt\n    /* \"#utility.yul\":1549:1596   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":1590:1594   */\n  dup1\n    /* \"#utility.yul\":1549:1596   */\ntag_43:\n    /* \"#utility.yul\":1645:1647   */\n  0x1f\n    /* \"#utility.yul\":1640:1643   */\n  dup5\n    /* \"#utility.yul\":1636:1648   */\n  add\n    /* \"#utility.yul\":1633:1634   */\n  0x05\n    /* \"#utility.yul\":1629:1649   */\n  shr\n    /* \"#utility.yul\":1623:1627   */\n  dup3\n    /* \"#utility.yul\":1619:1650   */\n  add\n    /* \"#utility.yul\":1609:1650   */\n  swap2\n  pop\n    /* \"#utility.yul\":1700:1781   */\ntag_44:\n    /* \"#utility.yul\":1718:1720   */\n  dup2\n    /* \"#utility.yul\":1711:1716   */\n  dup2\n    /* \"#utility.yul\":1708:1721   */\n  lt\n    /* \"#utility.yul\":1700:1781   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1777:1778   */\n  0x00\n    /* \"#utility.yul\":1763:1779   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1744:1745   */\n  0x01\n    /* \"#utility.yul\":1733:1746   */\n  add\n    /* \"#utility.yul\":1700:1781   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":1704:1707   */\n  pop\n  pop\n    /* \"#utility.yul\":1370:1791   */\ntag_42:\n    /* \"#utility.yul\":1279:1797   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1973:3318   */\ntag_10:\n    /* \"#utility.yul\":2093:2103   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2115:2145   */\n  dup2\n  gt\n    /* \"#utility.yul\":2112:2168   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2148:2166   */\n  tag_50\n  tag_23\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2177:2274   */\n  tag_51\n    /* \"#utility.yul\":2267:2273   */\n  dup2\n    /* \"#utility.yul\":2227:2265   */\n  tag_52\n    /* \"#utility.yul\":2259:2263   */\n  dup5\n    /* \"#utility.yul\":2253:2264   */\n  sload\n    /* \"#utility.yul\":2227:2265   */\n  tag_24\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2221:2225   */\n  dup5\n    /* \"#utility.yul\":2177:2274   */\n  tag_26\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2329:2333   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2386:2388   */\n  0x1f\n    /* \"#utility.yul\":2375:2389   */\n  dup4\n  gt\n    /* \"#utility.yul\":2403:2404   */\n  0x01\n    /* \"#utility.yul\":2398:3061   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3105:3106   */\n  0x00\n    /* \"#utility.yul\":3122:3128   */\n  dup5\n    /* \"#utility.yul\":3119:3208   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":3174:3193   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3168:3194   */\n  mload\n    /* \"#utility.yul\":3119:3208   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":1930:1931   */\n  0x03\n    /* \"#utility.yul\":1926:1937   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1922:1946   */\n  shr\n    /* \"#utility.yul\":1918:1947   */\n  not\n    /* \"#utility.yul\":1908:1948   */\n  and\n    /* \"#utility.yul\":1954:1955   */\n  0x01\n    /* \"#utility.yul\":1950:1961   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1905:1962   */\n  or\n    /* \"#utility.yul\":3221:3302   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2368:3312   */\n  jump(tag_53)\n    /* \"#utility.yul\":2398:3061   */\ntag_54:\n    /* \"#utility.yul\":1226:1227   */\n  0x00\n    /* \"#utility.yul\":1219:1233   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1263:1267   */\n  0x20\n    /* \"#utility.yul\":1250:1268   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2434:2454   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2552:2788   */\ntag_58:\n    /* \"#utility.yul\":2566:2573   */\n  dup3\n    /* \"#utility.yul\":2563:2564   */\n  dup2\n    /* \"#utility.yul\":2560:2574   */\n  lt\n    /* \"#utility.yul\":2552:2788   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2655:2674   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2649:2675   */\n  mload\n    /* \"#utility.yul\":2634:2676   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2747:2774   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2715:2716   */\n  0x01\n    /* \"#utility.yul\":2703:2717   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2582:2601   */\n  dup5\n  add\n    /* \"#utility.yul\":2552:2788   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":2556:2559   */\n  pop\n    /* \"#utility.yul\":2816:2822   */\n  dup6\n    /* \"#utility.yul\":2807:2814   */\n  dup3\n    /* \"#utility.yul\":2804:2823   */\n  lt\n    /* \"#utility.yul\":2801:3002   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2877:2896   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2871:2897   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2960:2961   */\n  0x03\n    /* \"#utility.yul\":2956:2970   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2972:2975   */\n  0xf8\n    /* \"#utility.yul\":2952:2976   */\n  and\n    /* \"#utility.yul\":2948:2985   */\n  shr\n    /* \"#utility.yul\":2944:2986   */\n  not\n    /* \"#utility.yul\":2929:2987   */\n  and\n    /* \"#utility.yul\":2914:2988   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2801:3002   */\ntag_61:\n  pop\n  pop\n    /* \"#utility.yul\":3048:3049   */\n  0x01\n    /* \"#utility.yul\":3039:3045   */\n  dup5\n    /* \"#utility.yul\":3036:3037   */\n  0x01\n    /* \"#utility.yul\":3032:3046   */\n  shl\n    /* \"#utility.yul\":3028:3050   */\n  add\n    /* \"#utility.yul\":3022:3026   */\n  dup6\n    /* \"#utility.yul\":3015:3051   */\n  sstore\n    /* \"#utility.yul\":2368:3312   */\ntag_53:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1973:3318   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3323:3526   */\ntag_28:\n    /* \"contracts/DefaultTaskControl.sol\":515:3996  contract DefaultTaskControl is ITaskControl,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DefaultTaskControl.sol\":515:3996  contract DefaultTaskControl is ITaskControl,ERC20,ReentrancyGuard, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb4309a9c\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xb4309a9c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc7ff23bb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd896fc10\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd9caed12\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x18160ddd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6ebd327b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x012c911e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06e2a29a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x082921a5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DefaultTaskControl.sol\":3058:3412  function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external{... */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/DefaultTaskControl.sol\":691:718  bool public allowSendTicket */\n    tag_4:\n      sload(0x07)\n      tag_32\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":703:717   */\n      swap1\n      iszero\n        /* \"#utility.yul\":696:718   */\n      iszero\n        /* \"#utility.yul\":678:719   */\n      dup2\n      mstore\n        /* \"#utility.yul\":666:668   */\n      0x20\n        /* \"#utility.yul\":651:669   */\n      add\n        /* \"contracts/DefaultTaskControl.sol\":691:718  bool public allowSendTicket */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/DefaultTaskControl.sol\":1470:1637  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n    tag_6:\n      tag_28\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_32\n      tag_45\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1619:1644   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1592:1610   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_34\n        /* \"#utility.yul\":1473:1650   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_32\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":2258:2294   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2246:2248   */\n      0x20\n        /* \"#utility.yul\":2231:2249   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_34\n        /* \"#utility.yul\":2116:2300   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_11:\n      tag_28\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"contracts/DefaultTaskControl.sol\":3421:3810  function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external{... */\n    tag_12:\n      tag_28\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_48\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_28\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_15:\n      tag_28\n      tag_77\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_79:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3436:3468   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3418:3469   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3406:3408   */\n      0x20\n        /* \"#utility.yul\":3391:3409   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_34\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_36\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_32\n      tag_87\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"contracts/DefaultTaskControl.sol\":655:681  bool public allowBuyTicket */\n    tag_19:\n      sload(0x07)\n      tag_32\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/DefaultTaskControl.sol\":615:645  address public redEnvelopeAddr */\n    tag_20:\n      sload(0x07)\n      tag_79\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DefaultTaskControl.sol\":1648:2122  function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data) external nonReentrant{... */\n    tag_21:\n      tag_28\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"contracts/DefaultTaskControl.sol\":3852:3990  function withdraw(address _token,address _to,uint256 _value)external onlyOwner{... */\n    tag_22:\n      tag_28\n      tag_101\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_48\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_28\n      tag_109\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"contracts/DefaultTaskControl.sol\":3058:3412  function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external{... */\n    tag_31:\n        /* \"contracts/DefaultTaskControl.sol\":3158:3172  uint256 amount */\n      0x00\n        /* \"contracts/DefaultTaskControl.sol\":3192:3208  10 ** decimals() */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"contracts/DefaultTaskControl.sol\":3192:3194  10 */\n      0x0a\n        /* \"contracts/DefaultTaskControl.sol\":3192:3208  10 ** decimals() */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"contracts/DefaultTaskControl.sol\":3175:3208  _ticketNumbers * 10 ** decimals() */\n      tag_115\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":3175:3189  _ticketNumbers */\n      dup4\n        /* \"contracts/DefaultTaskControl.sol\":3175:3208  _ticketNumbers * 10 ** decimals() */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/DefaultTaskControl.sol\":3158:3208  uint256 amount = _ticketNumbers * 10 ** decimals() */\n      swap1\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":3222:3234  burn(amount) */\n      tag_117\n        /* \"contracts/DefaultTaskControl.sol\":3227:3233  amount */\n      dup2\n        /* \"contracts/DefaultTaskControl.sol\":3222:3226  burn */\n      tag_64\n        /* \"contracts/DefaultTaskControl.sol\":3222:3234  burn(amount) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/DefaultTaskControl.sol\":3248:3256  bool buy */\n      0x00\n        /* \"contracts/DefaultTaskControl.sol\":3259:3305  _getTicket(_id,_receiveAddress,_ticketNumbers) */\n      tag_118\n        /* \"contracts/DefaultTaskControl.sol\":3270:3273  _id */\n      dup6\n        /* \"contracts/DefaultTaskControl.sol\":3274:3289  _receiveAddress */\n      dup6\n        /* \"contracts/DefaultTaskControl.sol\":3290:3304  _ticketNumbers */\n      dup6\n        /* \"contracts/DefaultTaskControl.sol\":3259:3269  _getTicket */\n      tag_119\n        /* \"contracts/DefaultTaskControl.sol\":3259:3305  _getTicket(_id,_receiveAddress,_ticketNumbers) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/DefaultTaskControl.sol\":3325:3401  TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6708:6733   */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":3347:3357  msg.sender */\n      caller\n        /* \"#utility.yul\":6802:6804   */\n      0x20\n        /* \"#utility.yul\":6787:6805   */\n      dup3\n      add\n        /* \"#utility.yul\":6780:6823   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6859:6874   */\n      dup8\n      and\n        /* \"#utility.yul\":6839:6857   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":6832:6875   */\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x60\n        /* \"#utility.yul\":6891:6909   */\n      dup2\n      add\n        /* \"#utility.yul\":6884:6918   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":6949:6952   */\n      0x80\n        /* \"#utility.yul\":6934:6953   */\n      dup2\n      add\n        /* \"#utility.yul\":6927:6962   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":7006:7020   */\n      dup3\n      iszero\n        /* \"#utility.yul\":6999:7021   */\n      iszero\n        /* \"#utility.yul\":6760:6763   */\n      0xa0\n        /* \"#utility.yul\":6978:6997   */\n      dup3\n      add\n        /* \"#utility.yul\":6971:7022   */\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":3325:3401  TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy) */\n      swap1\n      mload\n        /* \"#utility.yul\":7006:7020   */\n      swap2\n      swap3\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":3325:3401  TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy) */\n      0xebc14ddbdd1e1ebc5a287d8957bd1ca84faef18f192f27829b8459fd15f5195d\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6695:6698   */\n      0xc0\n        /* \"contracts/DefaultTaskControl.sol\":3325:3401  TicketGet(_id,address(msg.sender),_receiveAddress,amount,_ticketNumbers,buy) */\n      add\n      swap1\n      log1\n        /* \"contracts/DefaultTaskControl.sol\":3144:3412  {... */\n      pop\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":3058:3412  function getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_124\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DefaultTaskControl.sol\":1470:1637  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DefaultTaskControl.sol\":1553:1570  _tasks[_taskAddr] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":1553:1559  _tasks */\n      0x08\n        /* \"contracts/DefaultTaskControl.sol\":1553:1570  _tasks[_taskAddr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DefaultTaskControl.sol\":1553:1580  _tasks[_taskAddr] = _weight */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/DefaultTaskControl.sol\":1599:1626  TaskAdd(_taskAddr, _weight) */\n      dup2\n      mload\n        /* \"#utility.yul\":7592:7643   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":7659:7677   */\n      dup3\n      add\n        /* \"#utility.yul\":7652:7686   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":1599:1626  TaskAdd(_taskAddr, _weight) */\n      0xd7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8\n      swap2\n        /* \"#utility.yul\":7565:7583   */\n      add\n        /* \"contracts/DefaultTaskControl.sol\":1599:1626  TaskAdd(_taskAddr, _weight) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DefaultTaskControl.sol\":1470:1637  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_135:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_145:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/DefaultTaskControl.sol\":3421:3810  function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external{... */\n    tag_68:\n        /* \"contracts/DefaultTaskControl.sol\":3546:3560  uint256 amount */\n      0x00\n        /* \"contracts/DefaultTaskControl.sol\":3580:3596  10 ** decimals() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"contracts/DefaultTaskControl.sol\":3580:3582  10 */\n      0x0a\n        /* \"contracts/DefaultTaskControl.sol\":3580:3596  10 ** decimals() */\n      tag_114\n      jump\t// in\n    tag_154:\n        /* \"contracts/DefaultTaskControl.sol\":3563:3596  _ticketNumbers * 10 ** decimals() */\n      tag_155\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":3563:3577  _ticketNumbers */\n      dup4\n        /* \"contracts/DefaultTaskControl.sol\":3563:3596  _ticketNumbers * 10 ** decimals() */\n      tag_116\n      jump\t// in\n    tag_155:\n        /* \"contracts/DefaultTaskControl.sol\":3546:3596  uint256 amount = _ticketNumbers * 10 ** decimals() */\n      swap1\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":3610:3639  burnFrom(_fromAddress,amount) */\n      tag_156\n        /* \"contracts/DefaultTaskControl.sol\":3619:3631  _fromAddress */\n      dup5\n        /* \"contracts/DefaultTaskControl.sol\":3632:3638  amount */\n      dup3\n        /* \"contracts/DefaultTaskControl.sol\":3610:3618  burnFrom */\n      tag_78\n        /* \"contracts/DefaultTaskControl.sol\":3610:3639  burnFrom(_fromAddress,amount) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/DefaultTaskControl.sol\":3653:3661  bool buy */\n      0x00\n        /* \"contracts/DefaultTaskControl.sol\":3664:3710  _getTicket(_id,_receiveAddress,_ticketNumbers) */\n      tag_157\n        /* \"contracts/DefaultTaskControl.sol\":3675:3678  _id */\n      dup7\n        /* \"contracts/DefaultTaskControl.sol\":3679:3694  _receiveAddress */\n      dup6\n        /* \"contracts/DefaultTaskControl.sol\":3695:3709  _ticketNumbers */\n      dup6\n        /* \"contracts/DefaultTaskControl.sol\":3664:3674  _getTicket */\n      tag_119\n        /* \"contracts/DefaultTaskControl.sol\":3664:3710  _getTicket(_id,_receiveAddress,_ticketNumbers) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/DefaultTaskControl.sol\":3730:3799  TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6708:6733   */\n      dup9\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6807:6822   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":6802:6804   */\n      0x20\n        /* \"#utility.yul\":6787:6805   */\n      dup4\n      add\n        /* \"#utility.yul\":6780:6823   */\n      mstore\n        /* \"#utility.yul\":6859:6874   */\n      dup8\n      and\n        /* \"#utility.yul\":6839:6857   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":6832:6875   */\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x60\n        /* \"#utility.yul\":6891:6909   */\n      dup2\n      add\n        /* \"#utility.yul\":6884:6918   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":6949:6952   */\n      0x80\n        /* \"#utility.yul\":6934:6953   */\n      dup2\n      add\n        /* \"#utility.yul\":6927:6962   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":7006:7020   */\n      dup3\n      iszero\n        /* \"#utility.yul\":6999:7021   */\n      iszero\n        /* \"#utility.yul\":6760:6763   */\n      0xa0\n        /* \"#utility.yul\":6978:6997   */\n      dup3\n      add\n        /* \"#utility.yul\":6971:7022   */\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":3730:3799  TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy) */\n      swap1\n      mload\n        /* \"#utility.yul\":7006:7020   */\n      swap2\n      swap3\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":3730:3799  TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy) */\n      0xebc14ddbdd1e1ebc5a287d8957bd1ca84faef18f192f27829b8459fd15f5195d\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":6695:6698   */\n      0xc0\n        /* \"contracts/DefaultTaskControl.sol\":3730:3799  TicketGet(_id,_fromAddress,_receiveAddress,amount,_ticketNumbers,buy) */\n      add\n      swap1\n      log1\n        /* \"contracts/DefaultTaskControl.sol\":3532:3810  {... */\n      pop\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":3421:3810  function getTicketFrom(uint256 _id,address _fromAddress,address _receiveAddress,uint256 _ticketNumbers)external{... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/DefaultTaskControl.sol\":1648:2122  function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data) external nonReentrant{... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_180\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DefaultTaskControl.sol\":1774:1791  _tasks[_taskAddr] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":1774:1780  _tasks */\n      0x08\n        /* \"contracts/DefaultTaskControl.sol\":1774:1791  _tasks[_taskAddr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/DefaultTaskControl.sol\":1774:1796  _tasks[_taskAddr] != 0 */\n      swap1\n      sub\n        /* \"contracts/DefaultTaskControl.sol\":1766:1814  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7899:7901   */\n      0x20\n        /* \"contracts/DefaultTaskControl.sol\":1766:1814  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7881:7902   */\n      mstore\n        /* \"#utility.yul\":7938:7940   */\n      0x0e\n        /* \"#utility.yul\":7918:7936   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7911:7941   */\n      mstore\n      shl(0x90, 0x6e6f20736574206173207461736b)\n        /* \"#utility.yul\":7957:7975   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7950:7994   */\n      mstore\n        /* \"#utility.yul\":8011:8029   */\n      0x64\n      add\n        /* \"contracts/DefaultTaskControl.sol\":1766:1814  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DefaultTaskControl.sol\":1968:1985  _tasks[_taskAddr] */\n      dup5\n      and\n        /* \"contracts/DefaultTaskControl.sol\":1890:1904  uint256 amount */\n      0x00\n        /* \"contracts/DefaultTaskControl.sol\":1968:1985  _tasks[_taskAddr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":1968:1974  _tasks */\n      0x08\n        /* \"contracts/DefaultTaskControl.sol\":1968:1985  _tasks[_taskAddr] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/DefaultTaskControl.sol\":1907:1965  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      swap1\n      mload\n      shl(0xe1, 0x70d64693)\n      dup2\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":1890:1904  uint256 amount */\n      swap2\n      swap3\n        /* \"contracts/DefaultTaskControl.sol\":1968:1985  _tasks[_taskAddr] */\n      swap1\n      swap2\n        /* \"contracts/DefaultTaskControl.sol\":1907:1938  ItaskCallee(_taskAddr).taskCall */\n      0xe1ac8d26\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":1907:1965  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      tag_186\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":1947:1957  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":1959:1964  _data */\n      dup9\n      swap1\n      dup9\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":1907:1965  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      0x04\n      add\n      tag_187\n      jump\t// in\n    tag_186:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/DefaultTaskControl.sol\":1907:1985  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr] */\n      tag_192\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_192:\n        /* \"contracts/DefaultTaskControl.sol\":1890:1985  uint256 amount = ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr] */\n      swap1\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":1999:2029  _mint(_receiveAddress, amount) */\n      tag_193\n        /* \"contracts/DefaultTaskControl.sol\":2005:2020  _receiveAddress */\n      dup5\n        /* \"contracts/DefaultTaskControl.sol\":2022:2028  amount */\n      dup3\n        /* \"contracts/DefaultTaskControl.sol\":1999:2004  _mint */\n      tag_194\n        /* \"contracts/DefaultTaskControl.sol\":1999:2029  _mint(_receiveAddress, amount) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/DefaultTaskControl.sol\":2048:2111  TokenMint(address(msg.sender),_taskAddr,_receiveAddress,amount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/DefaultTaskControl.sol\":2066:2076  msg.sender */\n      caller\n        /* \"#utility.yul\":8988:9022   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9058:9073   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":9053:9055   */\n      0x20\n        /* \"#utility.yul\":9038:9056   */\n      dup4\n      add\n        /* \"#utility.yul\":9031:9074   */\n      mstore\n        /* \"#utility.yul\":9110:9125   */\n      dup7\n      and\n        /* \"#utility.yul\":9090:9108   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":9083:9126   */\n      mstore\n        /* \"#utility.yul\":9157:9159   */\n      0x60\n        /* \"#utility.yul\":9142:9160   */\n      dup2\n      add\n        /* \"#utility.yul\":9135:9169   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":2048:2111  TokenMint(address(msg.sender),_taskAddr,_receiveAddress,amount) */\n      swap1\n      mload\n      0x4d914fbdb28a885441bb0f6e06bb01dfdfe8a8b6902391853b46eb747ae136ef\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8937:8940   */\n      0x80\n        /* \"contracts/DefaultTaskControl.sol\":2048:2111  TokenMint(address(msg.sender),_taskAddr,_receiveAddress,amount) */\n      add\n      swap1\n      log1\n        /* \"contracts/DefaultTaskControl.sol\":1752:2122  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x05\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n    tag_197:\n        /* \"contracts/DefaultTaskControl.sol\":1648:2122  function mintToken(address _taskAddr,address _receiveAddress,bytes calldata _data) external nonReentrant{... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DefaultTaskControl.sol\":3852:3990  function withdraw(address _token,address _to,uint256 _value)external onlyOwner{... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/DefaultTaskControl.sol\":3944:3979  IERC20(_token).transfer(_to,_value) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7610:7642   */\n      dup4\n      dup2\n      and\n        /* \"contracts/DefaultTaskControl.sol\":3944:3979  IERC20(_token).transfer(_to,_value) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7592:7643   */\n      mstore\n        /* \"#utility.yul\":7659:7677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7652:7686   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":3944:3967  IERC20(_token).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7565:7583   */\n      0x44\n      add\n        /* \"contracts/DefaultTaskControl.sol\":3944:3979  IERC20(_token).transfer(_to,_value) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_184\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/DefaultTaskControl.sol\":2132:3048  function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){... */\n    tag_119:\n        /* \"contracts/DefaultTaskControl.sol\":2322:2337  redEnvelopeAddr */\n      sload(0x07)\n        /* \"contracts/DefaultTaskControl.sol\":2309:2359  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      mload(0x40)\n      shl(0xe0, 0x8f91cd17)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1619:1644   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":2228:2232  bool */\n      0x00\n      swap2\n        /* \"contracts/DefaultTaskControl.sol\":2258:2262  true */\n      0x01\n      swap2\n        /* \"contracts/DefaultTaskControl.sol\":2228:2232  bool */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DefaultTaskControl.sol\":2322:2337  redEnvelopeAddr */\n      and\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":2309:2354  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope */\n      0x8f91cd17\n      swap1\n        /* \"#utility.yul\":1592:1610   */\n      0x24\n      add\n        /* \"contracts/DefaultTaskControl.sol\":2309:2359  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      0x01e0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"contracts/DefaultTaskControl.sol\":2377:2402  redEnvelope.sendAllowAddr */\n      0x0180\n      dup2\n      add\n      mload\n        /* \"contracts/DefaultTaskControl.sol\":2276:2359  RedEnvelope memory redEnvelope = IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DefaultTaskControl.sol\":2377:2416  redEnvelope.sendAllowAddr == address(0) */\n      and\n        /* \"contracts/DefaultTaskControl.sol\":2373:3014  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n      tag_220\n      jumpi\n        /* \"contracts/DefaultTaskControl.sol\":2449:2463  allowBuyTicket */\n      sload(0x07)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DefaultTaskControl.sol\":2449:2471  allowBuyTicket == true */\n      iszero\n      iszero\n        /* \"contracts/DefaultTaskControl.sol\":2467:2471  true */\n      0x01\n        /* \"contracts/DefaultTaskControl.sol\":2449:2471  allowBuyTicket == true */\n      eq\n        /* \"contracts/DefaultTaskControl.sol\":2441:2495  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11764:11766   */\n      0x20\n        /* \"contracts/DefaultTaskControl.sol\":2441:2495  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11746:11767   */\n      mstore\n        /* \"#utility.yul\":11803:11805   */\n      0x13\n        /* \"#utility.yul\":11783:11801   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11776:11806   */\n      mstore\n      shl(0x68, 0x627579207469636b6574206e6f20616c6c6f77)\n        /* \"#utility.yul\":11822:11840   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11815:11864   */\n      mstore\n        /* \"#utility.yul\":11881:11899   */\n      0x64\n      add\n        /* \"contracts/DefaultTaskControl.sol\":2441:2495  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      tag_184\n        /* \"#utility.yul\":11562:11905   */\n      jump\n        /* \"contracts/DefaultTaskControl.sol\":2441:2495  require(allowBuyTicket == true, \"buy ticket no allow\") */\n    tag_221:\n        /* \"contracts/DefaultTaskControl.sol\":2513:2534  uint256 approveAmount */\n      0x00\n        /* \"contracts/DefaultTaskControl.sol\":2563:2577  _ticketNumbers */\n      dup5\n        /* \"contracts/DefaultTaskControl.sol\":2537:2548  redEnvelope */\n      dup3\n        /* \"contracts/DefaultTaskControl.sol\":2537:2560  redEnvelope.ticketPirce */\n      0x0160\n      add\n      mload\n        /* \"contracts/DefaultTaskControl.sol\":2537:2577  redEnvelope.ticketPirce * _ticketNumbers */\n      tag_224\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_224:\n        /* \"contracts/DefaultTaskControl.sol\":2602:2625  redEnvelope.ticketToken */\n      dup3\n      mload\n        /* \"contracts/DefaultTaskControl.sol\":2635:2650  redEnvelopeAddr */\n      sload(0x07)\n        /* \"contracts/DefaultTaskControl.sol\":2595:2665  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DefaultTaskControl.sol\":2635:2650  redEnvelopeAddr */\n      swap2\n      dup3\n      and\n        /* \"contracts/DefaultTaskControl.sol\":2595:2665  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7592:7643   */\n      mstore\n        /* \"#utility.yul\":7659:7677   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7652:7686   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":2513:2577  uint256 approveAmount = redEnvelope.ticketPirce * _ticketNumbers */\n      swap3\n      swap4\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":2595:2634  IERC20(redEnvelope.ticketToken).approve */\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":7565:7583   */\n      0x44\n      add\n        /* \"contracts/DefaultTaskControl.sol\":2595:2665  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_228:\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":2703:2718  redEnvelopeAddr */\n      sload(0x07)\n        /* \"contracts/DefaultTaskControl.sol\":2690:2766  IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers) */\n      mload(0x40)\n      shl(0xe0, 0xc5e7bb33)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":12112:12137   */\n      dup10\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12173:12205   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":12153:12171   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12146:12206   */\n      mstore\n        /* \"#utility.yul\":12222:12240   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12215:12249   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":2703:2718  redEnvelopeAddr */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":2690:2730  IRedEnvelope(redEnvelopeAddr).buyTickets */\n      0xc5e7bb33\n      swap1\n        /* \"#utility.yul\":12085:12103   */\n      0x64\n      add\n        /* \"contracts/DefaultTaskControl.sol\":2690:2766  IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":2417:2781  {      ... */\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":2373:3014  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n      jump(tag_234)\n    tag_220:\n        /* \"contracts/DefaultTaskControl.sol\":2811:2826  allowSendTicket */\n      sload(0x07)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DefaultTaskControl.sol\":2811:2834  allowSendTicket == true */\n      iszero\n      iszero\n        /* \"contracts/DefaultTaskControl.sol\":2830:2834  true */\n      0x01\n        /* \"contracts/DefaultTaskControl.sol\":2811:2834  allowSendTicket == true */\n      eq\n        /* \"contracts/DefaultTaskControl.sol\":2803:2859  require(allowSendTicket == true, \"send ticket no allow\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12462:12464   */\n      0x20\n        /* \"contracts/DefaultTaskControl.sol\":2803:2859  require(allowSendTicket == true, \"send ticket no allow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12444:12465   */\n      mstore\n        /* \"#utility.yul\":12501:12503   */\n      0x14\n        /* \"#utility.yul\":12481:12499   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12474:12504   */\n      mstore\n      shl(0x60, 0x73656e64207469636b6574206e6f20616c6c6f77)\n        /* \"#utility.yul\":12520:12538   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12513:12563   */\n      mstore\n        /* \"#utility.yul\":12580:12598   */\n      0x64\n      add\n        /* \"contracts/DefaultTaskControl.sol\":2803:2859  require(allowSendTicket == true, \"send ticket no allow\") */\n      tag_184\n        /* \"#utility.yul\":12260:12604   */\n      jump\n        /* \"contracts/DefaultTaskControl.sol\":2803:2859  require(allowSendTicket == true, \"send ticket no allow\") */\n    tag_235:\n        /* \"contracts/DefaultTaskControl.sol\":2906:2921  redEnvelopeAddr */\n      sload(0x07)\n        /* \"contracts/DefaultTaskControl.sol\":2893:2970  IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers) */\n      mload(0x40)\n      shl(0xe0, 0x5c42e0c5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":12112:12137   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12173:12205   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":12153:12171   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12146:12206   */\n      mstore\n        /* \"#utility.yul\":12222:12240   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12215:12249   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/DefaultTaskControl.sol\":2906:2921  redEnvelopeAddr */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/DefaultTaskControl.sol\":2893:2934  IRedEnvelope(redEnvelopeAddr).sendTickets */\n      0x5c42e0c5\n      swap1\n        /* \"#utility.yul\":12085:12103   */\n      0x64\n      add\n        /* \"contracts/DefaultTaskControl.sol\":2893:2970  IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":2994:2999  false */\n      0x00\n        /* \"contracts/DefaultTaskControl.sol\":2988:2999  buy = false */\n      swap2\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":2373:3014  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n    tag_234:\n      pop\n        /* \"contracts/DefaultTaskControl.sol\":3034:3037  buy */\n      swap5\n        /* \"contracts/DefaultTaskControl.sol\":2132:3048  function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_184\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12829:12861   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12811:12862   */\n      mstore\n        /* \"#utility.yul\":12878:12896   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12871:12905   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":12921:12939   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12914:12948   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":12784:12802   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_184\n        /* \"#utility.yul\":12609:12954   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_184\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_184\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_184\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x05\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_184\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_184\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3418:3469   */\n      mstore\n        /* \"#utility.yul\":3391:3409   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_184\n        /* \"#utility.yul\":3272:3475   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_284\n      swap2\n        /* \"#utility.yul\":1619:1644   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1592:1610   */\n      add\n      swap1\n        /* \"#utility.yul\":1473:1650   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_287\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_289\n      swap1\n      pop\n      jump\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12829:12861   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12811:12862   */\n      mstore\n        /* \"#utility.yul\":12878:12896   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12871:12905   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":12921:12939   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12914:12948   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":12784:12802   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_184\n        /* \"#utility.yul\":12609:12954   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_289:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_293)\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_294\n      swap2\n        /* \"#utility.yul\":1619:1644   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1592:1610   */\n      add\n      swap1\n        /* \"#utility.yul\":1473:1650   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_295:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:533   */\n    tag_30:\n        /* \"#utility.yul\":227:233   */\n      0x00\n        /* \"#utility.yul\":235:241   */\n      dup1\n        /* \"#utility.yul\":243:249   */\n      0x00\n        /* \"#utility.yul\":296:298   */\n      0x60\n        /* \"#utility.yul\":284:293   */\n      dup5\n        /* \"#utility.yul\":275:282   */\n      dup7\n        /* \"#utility.yul\":271:294   */\n      sub\n        /* \"#utility.yul\":267:299   */\n      slt\n        /* \"#utility.yul\":264:316   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":312:313   */\n      0x00\n        /* \"#utility.yul\":309:310   */\n      dup1\n        /* \"#utility.yul\":302:314   */\n      revert\n        /* \"#utility.yul\":264:316   */\n    tag_307:\n        /* \"#utility.yul\":348:357   */\n      dup4\n        /* \"#utility.yul\":335:358   */\n      calldataload\n        /* \"#utility.yul\":325:358   */\n      swap3\n      pop\n        /* \"#utility.yul\":408:410   */\n      0x20\n        /* \"#utility.yul\":397:406   */\n      dup5\n        /* \"#utility.yul\":393:411   */\n      add\n        /* \"#utility.yul\":380:412   */\n      calldataload\n        /* \"#utility.yul\":421:452   */\n      tag_308\n        /* \"#utility.yul\":446:451   */\n      dup2\n        /* \"#utility.yul\":421:452   */\n      tag_295\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":150:533   */\n      swap3\n      swap6\n        /* \"#utility.yul\":471:476   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":523:525   */\n      0x40\n        /* \"#utility.yul\":508:526   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":495:527   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":150:533   */\n      jump\t// out\n        /* \"#utility.yul\":730:1148   */\n    tag_39:\n        /* \"#utility.yul\":879:881   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup2\n        /* \"#utility.yul\":861:882   */\n      mstore\n        /* \"#utility.yul\":842:846   */\n      0x00\n        /* \"#utility.yul\":911:917   */\n      dup3\n        /* \"#utility.yul\":905:918   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":938:947   */\n      dup5\n        /* \"#utility.yul\":934:952   */\n      add\n        /* \"#utility.yul\":927:961   */\n      mstore\n        /* \"#utility.yul\":1013:1019   */\n      dup1\n        /* \"#utility.yul\":1008:1010   */\n      0x20\n        /* \"#utility.yul\":1000:1006   */\n      dup6\n        /* \"#utility.yul\":996:1011   */\n      add\n        /* \"#utility.yul\":991:993   */\n      0x40\n        /* \"#utility.yul\":980:989   */\n      dup6\n        /* \"#utility.yul\":976:994   */\n      add\n        /* \"#utility.yul\":970:1020   */\n      mcopy\n        /* \"#utility.yul\":1069:1070   */\n      0x00\n        /* \"#utility.yul\":1064:1066   */\n      0x40\n        /* \"#utility.yul\":1055:1061   */\n      dup3\n        /* \"#utility.yul\":1044:1053   */\n      dup6\n        /* \"#utility.yul\":1040:1062   */\n      add\n        /* \"#utility.yul\":1036:1067   */\n      add\n        /* \"#utility.yul\":1029:1071   */\n      mstore\n        /* \"#utility.yul\":1139:1141   */\n      0x40\n        /* \"#utility.yul\":1132:1134   */\n      0x1f\n        /* \"#utility.yul\":1128:1135   */\n      not\n        /* \"#utility.yul\":1123:1125   */\n      0x1f\n        /* \"#utility.yul\":1115:1121   */\n      dup4\n        /* \"#utility.yul\":1111:1126   */\n      add\n        /* \"#utility.yul\":1107:1136   */\n      and\n        /* \"#utility.yul\":1096:1105   */\n      dup5\n        /* \"#utility.yul\":1092:1137   */\n      add\n        /* \"#utility.yul\":1088:1142   */\n      add\n        /* \"#utility.yul\":1080:1142   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":730:1148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1153:1468   */\n    tag_42:\n        /* \"#utility.yul\":1221:1227   */\n      0x00\n        /* \"#utility.yul\":1229:1235   */\n      dup1\n        /* \"#utility.yul\":1282:1284   */\n      0x40\n        /* \"#utility.yul\":1270:1279   */\n      dup4\n        /* \"#utility.yul\":1261:1268   */\n      dup6\n        /* \"#utility.yul\":1257:1280   */\n      sub\n        /* \"#utility.yul\":1253:1285   */\n      slt\n        /* \"#utility.yul\":1250:1302   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":1298:1299   */\n      0x00\n        /* \"#utility.yul\":1295:1296   */\n      dup1\n        /* \"#utility.yul\":1288:1300   */\n      revert\n        /* \"#utility.yul\":1250:1302   */\n    tag_312:\n        /* \"#utility.yul\":1337:1346   */\n      dup3\n        /* \"#utility.yul\":1324:1347   */\n      calldataload\n        /* \"#utility.yul\":1356:1387   */\n      tag_313\n        /* \"#utility.yul\":1381:1386   */\n      dup2\n        /* \"#utility.yul\":1356:1387   */\n      tag_295\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1406:1411   */\n      swap5\n        /* \"#utility.yul\":1458:1460   */\n      0x20\n        /* \"#utility.yul\":1443:1461   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1430:1462   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1153:1468   */\n      jump\t// out\n        /* \"#utility.yul\":1655:2111   */\n    tag_54:\n        /* \"#utility.yul\":1732:1738   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup1\n        /* \"#utility.yul\":1748:1754   */\n      0x00\n        /* \"#utility.yul\":1801:1803   */\n      0x60\n        /* \"#utility.yul\":1789:1798   */\n      dup5\n        /* \"#utility.yul\":1780:1787   */\n      dup7\n        /* \"#utility.yul\":1776:1799   */\n      sub\n        /* \"#utility.yul\":1772:1804   */\n      slt\n        /* \"#utility.yul\":1769:1821   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":1817:1818   */\n      0x00\n        /* \"#utility.yul\":1814:1815   */\n      dup1\n        /* \"#utility.yul\":1807:1819   */\n      revert\n        /* \"#utility.yul\":1769:1821   */\n    tag_316:\n        /* \"#utility.yul\":1856:1865   */\n      dup4\n        /* \"#utility.yul\":1843:1866   */\n      calldataload\n        /* \"#utility.yul\":1875:1906   */\n      tag_317\n        /* \"#utility.yul\":1900:1905   */\n      dup2\n        /* \"#utility.yul\":1875:1906   */\n      tag_295\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1925:1930   */\n      swap3\n      pop\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1967:1985   */\n      dup5\n      add\n        /* \"#utility.yul\":1954:1986   */\n      calldataload\n        /* \"#utility.yul\":1995:2028   */\n      tag_308\n        /* \"#utility.yul\":1954:1986   */\n      dup2\n        /* \"#utility.yul\":1995:2028   */\n      tag_295\n      jump\t// in\n        /* \"#utility.yul\":2305:2485   */\n    tag_63:\n        /* \"#utility.yul\":2364:2370   */\n      0x00\n        /* \"#utility.yul\":2417:2419   */\n      0x20\n        /* \"#utility.yul\":2405:2414   */\n      dup3\n        /* \"#utility.yul\":2396:2403   */\n      dup5\n        /* \"#utility.yul\":2392:2415   */\n      sub\n        /* \"#utility.yul\":2388:2420   */\n      slt\n        /* \"#utility.yul\":2385:2437   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2433:2434   */\n      0x00\n        /* \"#utility.yul\":2430:2431   */\n      dup1\n        /* \"#utility.yul\":2423:2435   */\n      revert\n        /* \"#utility.yul\":2385:2437   */\n    tag_321:\n      pop\n        /* \"#utility.yul\":2456:2479   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2305:2485   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2490:3015   */\n    tag_67:\n        /* \"#utility.yul\":2576:2582   */\n      0x00\n        /* \"#utility.yul\":2584:2590   */\n      dup1\n        /* \"#utility.yul\":2592:2598   */\n      0x00\n        /* \"#utility.yul\":2600:2606   */\n      dup1\n        /* \"#utility.yul\":2653:2656   */\n      0x80\n        /* \"#utility.yul\":2641:2650   */\n      dup6\n        /* \"#utility.yul\":2632:2639   */\n      dup8\n        /* \"#utility.yul\":2628:2651   */\n      sub\n        /* \"#utility.yul\":2624:2657   */\n      slt\n        /* \"#utility.yul\":2621:2674   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2670:2671   */\n      0x00\n        /* \"#utility.yul\":2667:2668   */\n      dup1\n        /* \"#utility.yul\":2660:2672   */\n      revert\n        /* \"#utility.yul\":2621:2674   */\n    tag_323:\n        /* \"#utility.yul\":2706:2715   */\n      dup5\n        /* \"#utility.yul\":2693:2716   */\n      calldataload\n        /* \"#utility.yul\":2683:2716   */\n      swap4\n      pop\n        /* \"#utility.yul\":2766:2768   */\n      0x20\n        /* \"#utility.yul\":2755:2764   */\n      dup6\n        /* \"#utility.yul\":2751:2769   */\n      add\n        /* \"#utility.yul\":2738:2770   */\n      calldataload\n        /* \"#utility.yul\":2779:2810   */\n      tag_324\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2779:2810   */\n      tag_295\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2829:2834   */\n      swap3\n      pop\n        /* \"#utility.yul\":2886:2888   */\n      0x40\n        /* \"#utility.yul\":2871:2889   */\n      dup6\n      add\n        /* \"#utility.yul\":2858:2890   */\n      calldataload\n        /* \"#utility.yul\":2899:2932   */\n      tag_325\n        /* \"#utility.yul\":2858:2890   */\n      dup2\n        /* \"#utility.yul\":2899:2932   */\n      tag_295\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2490:3015   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":2951:2958   */\n      swap3\n      swap4\n        /* \"#utility.yul\":3005:3007   */\n      0x60\n        /* \"#utility.yul\":2990:3008   */\n      add\n        /* \"#utility.yul\":2977:3009   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2490:3015   */\n      jump\t// out\n        /* \"#utility.yul\":3020:3267   */\n    tag_71:\n        /* \"#utility.yul\":3079:3085   */\n      0x00\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"#utility.yul\":3120:3129   */\n      dup3\n        /* \"#utility.yul\":3111:3118   */\n      dup5\n        /* \"#utility.yul\":3107:3130   */\n      sub\n        /* \"#utility.yul\":3103:3135   */\n      slt\n        /* \"#utility.yul\":3100:3152   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3148:3149   */\n      0x00\n        /* \"#utility.yul\":3145:3146   */\n      dup1\n        /* \"#utility.yul\":3138:3150   */\n      revert\n        /* \"#utility.yul\":3100:3152   */\n    tag_327:\n        /* \"#utility.yul\":3187:3196   */\n      dup2\n        /* \"#utility.yul\":3174:3197   */\n      calldataload\n        /* \"#utility.yul\":3206:3237   */\n      tag_328\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3206:3237   */\n      tag_295\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3256:3261   */\n      swap4\n        /* \"#utility.yul\":3020:3267   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3480:4347   */\n    tag_98:\n        /* \"#utility.yul\":3568:3574   */\n      0x00\n        /* \"#utility.yul\":3576:3582   */\n      dup1\n        /* \"#utility.yul\":3584:3590   */\n      0x00\n        /* \"#utility.yul\":3592:3598   */\n      dup1\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3633:3642   */\n      dup6\n        /* \"#utility.yul\":3624:3631   */\n      dup8\n        /* \"#utility.yul\":3620:3643   */\n      sub\n        /* \"#utility.yul\":3616:3648   */\n      slt\n        /* \"#utility.yul\":3613:3665   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":3661:3662   */\n      0x00\n        /* \"#utility.yul\":3658:3659   */\n      dup1\n        /* \"#utility.yul\":3651:3663   */\n      revert\n        /* \"#utility.yul\":3613:3665   */\n    tag_331:\n        /* \"#utility.yul\":3700:3709   */\n      dup5\n        /* \"#utility.yul\":3687:3710   */\n      calldataload\n        /* \"#utility.yul\":3719:3750   */\n      tag_332\n        /* \"#utility.yul\":3744:3749   */\n      dup2\n        /* \"#utility.yul\":3719:3750   */\n      tag_295\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3769:3774   */\n      swap4\n      pop\n        /* \"#utility.yul\":3826:3828   */\n      0x20\n        /* \"#utility.yul\":3811:3829   */\n      dup6\n      add\n        /* \"#utility.yul\":3798:3830   */\n      calldataload\n        /* \"#utility.yul\":3839:3872   */\n      tag_333\n        /* \"#utility.yul\":3798:3830   */\n      dup2\n        /* \"#utility.yul\":3839:3872   */\n      tag_295\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3891:3898   */\n      swap3\n      pop\n        /* \"#utility.yul\":3949:3951   */\n      0x40\n        /* \"#utility.yul\":3934:3952   */\n      dup6\n      add\n        /* \"#utility.yul\":3921:3953   */\n      calldataload\n        /* \"#utility.yul\":3972:3990   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4002:4016   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3999:4033   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":4029:4030   */\n      0x00\n        /* \"#utility.yul\":4026:4027   */\n      dup1\n        /* \"#utility.yul\":4019:4031   */\n      revert\n        /* \"#utility.yul\":3999:4033   */\n    tag_334:\n        /* \"#utility.yul\":4067:4073   */\n      dup2\n        /* \"#utility.yul\":4056:4065   */\n      dup8\n        /* \"#utility.yul\":4052:4074   */\n      add\n        /* \"#utility.yul\":4042:4074   */\n      swap2\n      pop\n        /* \"#utility.yul\":4112:4119   */\n      dup8\n        /* \"#utility.yul\":4105:4109   */\n      0x1f\n        /* \"#utility.yul\":4101:4103   */\n      dup4\n        /* \"#utility.yul\":4097:4110   */\n      add\n        /* \"#utility.yul\":4093:4120   */\n      slt\n        /* \"#utility.yul\":4083:4138   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4131:4132   */\n      dup1\n        /* \"#utility.yul\":4124:4136   */\n      revert\n        /* \"#utility.yul\":4083:4138   */\n    tag_335:\n        /* \"#utility.yul\":4174:4176   */\n      dup2\n        /* \"#utility.yul\":4161:4177   */\n      calldataload\n        /* \"#utility.yul\":4200:4202   */\n      dup2\n        /* \"#utility.yul\":4192:4198   */\n      dup2\n        /* \"#utility.yul\":4189:4203   */\n      gt\n        /* \"#utility.yul\":4186:4220   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":4216:4217   */\n      0x00\n        /* \"#utility.yul\":4213:4214   */\n      dup1\n        /* \"#utility.yul\":4206:4218   */\n      revert\n        /* \"#utility.yul\":4186:4220   */\n    tag_336:\n        /* \"#utility.yul\":4261:4268   */\n      dup9\n        /* \"#utility.yul\":4256:4258   */\n      0x20\n        /* \"#utility.yul\":4247:4253   */\n      dup3\n        /* \"#utility.yul\":4243:4245   */\n      dup6\n        /* \"#utility.yul\":4239:4254   */\n      add\n        /* \"#utility.yul\":4235:4259   */\n      add\n        /* \"#utility.yul\":4232:4269   */\n      gt\n        /* \"#utility.yul\":4229:4286   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":4282:4283   */\n      0x00\n        /* \"#utility.yul\":4279:4280   */\n      dup1\n        /* \"#utility.yul\":4272:4284   */\n      revert\n        /* \"#utility.yul\":4229:4286   */\n    tag_337:\n        /* \"#utility.yul\":3480:4347   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":4313:4315   */\n      0x20\n        /* \"#utility.yul\":4305:4316   */\n      add\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3480:4347   */\n      jump\t// out\n        /* \"#utility.yul\":4352:4740   */\n    tag_105:\n        /* \"#utility.yul\":4420:4426   */\n      0x00\n        /* \"#utility.yul\":4428:4434   */\n      dup1\n        /* \"#utility.yul\":4481:4483   */\n      0x40\n        /* \"#utility.yul\":4469:4478   */\n      dup4\n        /* \"#utility.yul\":4460:4467   */\n      dup6\n        /* \"#utility.yul\":4456:4479   */\n      sub\n        /* \"#utility.yul\":4452:4484   */\n      slt\n        /* \"#utility.yul\":4449:4501   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":4497:4498   */\n      0x00\n        /* \"#utility.yul\":4494:4495   */\n      dup1\n        /* \"#utility.yul\":4487:4499   */\n      revert\n        /* \"#utility.yul\":4449:4501   */\n    tag_339:\n        /* \"#utility.yul\":4536:4545   */\n      dup3\n        /* \"#utility.yul\":4523:4546   */\n      calldataload\n        /* \"#utility.yul\":4555:4586   */\n      tag_340\n        /* \"#utility.yul\":4580:4585   */\n      dup2\n        /* \"#utility.yul\":4555:4586   */\n      tag_295\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4605:4610   */\n      swap2\n      pop\n        /* \"#utility.yul\":4662:4664   */\n      0x20\n        /* \"#utility.yul\":4647:4665   */\n      dup4\n      add\n        /* \"#utility.yul\":4634:4666   */\n      calldataload\n        /* \"#utility.yul\":4675:4708   */\n      tag_341\n        /* \"#utility.yul\":4634:4666   */\n      dup2\n        /* \"#utility.yul\":4675:4708   */\n      tag_295\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4727:4734   */\n      dup1\n        /* \"#utility.yul\":4717:4734   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4352:4740   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4745:4872   */\n    tag_296:\n        /* \"#utility.yul\":4806:4816   */\n      0x4e487b71\n        /* \"#utility.yul\":4801:4804   */\n      0xe0\n        /* \"#utility.yul\":4797:4817   */\n      shl\n        /* \"#utility.yul\":4794:4795   */\n      0x00\n        /* \"#utility.yul\":4787:4818   */\n      mstore\n        /* \"#utility.yul\":4837:4841   */\n      0x11\n        /* \"#utility.yul\":4834:4835   */\n      0x04\n        /* \"#utility.yul\":4827:4842   */\n      mstore\n        /* \"#utility.yul\":4861:4865   */\n      0x24\n        /* \"#utility.yul\":4858:4859   */\n      0x00\n        /* \"#utility.yul\":4851:4866   */\n      revert\n        /* \"#utility.yul\":4877:5293   */\n    tag_297:\n        /* \"#utility.yul\":4966:4967   */\n      0x01\n        /* \"#utility.yul\":5003:5008   */\n      dup2\n        /* \"#utility.yul\":4966:4967   */\n      dup2\n        /* \"#utility.yul\":5017:5287   */\n    tag_344:\n        /* \"#utility.yul\":5038:5045   */\n      dup1\n        /* \"#utility.yul\":5028:5036   */\n      dup6\n        /* \"#utility.yul\":5025:5046   */\n      gt\n        /* \"#utility.yul\":5017:5287   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":5097:5101   */\n      dup2\n        /* \"#utility.yul\":5093:5094   */\n      0x00\n        /* \"#utility.yul\":5089:5095   */\n      not\n        /* \"#utility.yul\":5085:5102   */\n      div\n        /* \"#utility.yul\":5079:5083   */\n      dup3\n        /* \"#utility.yul\":5076:5103   */\n      gt\n        /* \"#utility.yul\":5073:5126   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":5106:5124   */\n      tag_348\n      tag_296\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5156:5163   */\n      dup1\n        /* \"#utility.yul\":5146:5154   */\n      dup6\n        /* \"#utility.yul\":5142:5164   */\n      and\n        /* \"#utility.yul\":5139:5194   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5176:5192   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":5139:5194   */\n    tag_349:\n        /* \"#utility.yul\":5255:5277   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":5215:5230   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":5017:5287   */\n      jump(tag_344)\n    tag_346:\n        /* \"#utility.yul\":5021:5024   */\n      pop\n        /* \"#utility.yul\":4877:5293   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5298:6104   */\n    tag_298:\n        /* \"#utility.yul\":5347:5352   */\n      0x00\n        /* \"#utility.yul\":5377:5385   */\n      dup3\n        /* \"#utility.yul\":5367:5447   */\n      tag_351\n      jumpi\n      pop\n        /* \"#utility.yul\":5418:5419   */\n      0x01\n        /* \"#utility.yul\":5432:5437   */\n      jump(tag_135)\n        /* \"#utility.yul\":5367:5447   */\n    tag_351:\n        /* \"#utility.yul\":5466:5470   */\n      dup2\n        /* \"#utility.yul\":5456:5532   */\n      tag_352\n      jumpi\n      pop\n        /* \"#utility.yul\":5503:5504   */\n      0x00\n        /* \"#utility.yul\":5517:5522   */\n      jump(tag_135)\n        /* \"#utility.yul\":5456:5532   */\n    tag_352:\n        /* \"#utility.yul\":5548:5552   */\n      dup2\n        /* \"#utility.yul\":5566:5567   */\n      0x01\n        /* \"#utility.yul\":5561:5620   */\n      dup2\n      eq\n      tag_354\n      jumpi\n        /* \"#utility.yul\":5634:5635   */\n      0x02\n        /* \"#utility.yul\":5629:5759   */\n      dup2\n      eq\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5541:5759   */\n      jump(tag_353)\n        /* \"#utility.yul\":5561:5620   */\n    tag_354:\n        /* \"#utility.yul\":5591:5592   */\n      0x01\n        /* \"#utility.yul\":5582:5592   */\n      swap2\n      pop\n        /* \"#utility.yul\":5605:5610   */\n      pop\n      jump(tag_135)\n        /* \"#utility.yul\":5629:5759   */\n    tag_355:\n        /* \"#utility.yul\":5666:5669   */\n      0xff\n        /* \"#utility.yul\":5656:5664   */\n      dup5\n        /* \"#utility.yul\":5653:5670   */\n      gt\n        /* \"#utility.yul\":5650:5693   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":5673:5691   */\n      tag_357\n      tag_296\n      jump\t// in\n    tag_357:\n      pop\n      pop\n        /* \"#utility.yul\":5729:5730   */\n      0x01\n        /* \"#utility.yul\":5715:5731   */\n      dup3\n      shl\n        /* \"#utility.yul\":5744:5749   */\n      jump(tag_135)\n        /* \"#utility.yul\":5541:5759   */\n    tag_353:\n      pop\n        /* \"#utility.yul\":5843:5845   */\n      0x20\n        /* \"#utility.yul\":5833:5841   */\n      dup4\n        /* \"#utility.yul\":5830:5846   */\n      lt\n        /* \"#utility.yul\":5824:5827   */\n      0x0133\n        /* \"#utility.yul\":5818:5822   */\n      dup4\n        /* \"#utility.yul\":5815:5828   */\n      lt\n        /* \"#utility.yul\":5811:5847   */\n      and\n        /* \"#utility.yul\":5805:5807   */\n      0x4e\n        /* \"#utility.yul\":5795:5803   */\n      dup5\n        /* \"#utility.yul\":5792:5808   */\n      lt\n        /* \"#utility.yul\":5787:5789   */\n      0x0b\n        /* \"#utility.yul\":5781:5785   */\n      dup5\n        /* \"#utility.yul\":5778:5790   */\n      lt\n        /* \"#utility.yul\":5774:5809   */\n      and\n        /* \"#utility.yul\":5771:5848   */\n      or\n        /* \"#utility.yul\":5768:5927   */\n      iszero\n      tag_358\n      jumpi\n      pop\n        /* \"#utility.yul\":5880:5899   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":5912:5917   */\n      jump(tag_135)\n        /* \"#utility.yul\":5768:5927   */\n    tag_358:\n        /* \"#utility.yul\":5959:5993   */\n      tag_359\n        /* \"#utility.yul\":5984:5992   */\n      dup4\n        /* \"#utility.yul\":5978:5982   */\n      dup4\n        /* \"#utility.yul\":5959:5993   */\n      tag_297\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6029:6035   */\n      dup1\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6021:6027   */\n      not\n        /* \"#utility.yul\":6017:6036   */\n      div\n        /* \"#utility.yul\":6008:6015   */\n      dup3\n        /* \"#utility.yul\":6005:6037   */\n      gt\n        /* \"#utility.yul\":6002:6060   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":6040:6058   */\n      tag_361\n      tag_296\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6078:6098   */\n      mul\n      swap4\n        /* \"#utility.yul\":5298:6104   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6109:6249   */\n    tag_114:\n        /* \"#utility.yul\":6167:6172   */\n      0x00\n        /* \"#utility.yul\":6196:6243   */\n      tag_328\n        /* \"#utility.yul\":6237:6241   */\n      0xff\n        /* \"#utility.yul\":6227:6235   */\n      dup5\n        /* \"#utility.yul\":6223:6242   */\n      and\n        /* \"#utility.yul\":6217:6221   */\n      dup4\n        /* \"#utility.yul\":6196:6243   */\n      tag_298\n      jump\t// in\n        /* \"#utility.yul\":6254:6422   */\n    tag_116:\n        /* \"#utility.yul\":6327:6336   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6358:6367   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6375:6390   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6369:6391   */\n      dup5\n      eq\n        /* \"#utility.yul\":6355:6392   */\n      or\n        /* \"#utility.yul\":6345:6416   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":6396:6414   */\n      tag_135\n      tag_296\n      jump\t// in\n        /* \"#utility.yul\":7033:7413   */\n    tag_124:\n        /* \"#utility.yul\":7112:7113   */\n      0x01\n        /* \"#utility.yul\":7108:7120   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7155:7167   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7176:7237   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":7230:7234   */\n      0x7f\n        /* \"#utility.yul\":7222:7228   */\n      dup3\n        /* \"#utility.yul\":7218:7235   */\n      and\n        /* \"#utility.yul\":7208:7235   */\n      swap2\n      pop\n        /* \"#utility.yul\":7176:7237   */\n    tag_369:\n        /* \"#utility.yul\":7283:7285   */\n      0x20\n        /* \"#utility.yul\":7275:7281   */\n      dup3\n        /* \"#utility.yul\":7272:7286   */\n      lt\n        /* \"#utility.yul\":7252:7270   */\n      dup2\n        /* \"#utility.yul\":7249:7287   */\n      sub\n        /* \"#utility.yul\":7246:7407   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":7329:7339   */\n      0x4e487b71\n        /* \"#utility.yul\":7324:7327   */\n      0xe0\n        /* \"#utility.yul\":7320:7340   */\n      shl\n        /* \"#utility.yul\":7317:7318   */\n      0x00\n        /* \"#utility.yul\":7310:7341   */\n      mstore\n        /* \"#utility.yul\":7364:7368   */\n      0x22\n        /* \"#utility.yul\":7361:7362   */\n      0x04\n        /* \"#utility.yul\":7354:7369   */\n      mstore\n        /* \"#utility.yul\":7392:7396   */\n      0x24\n        /* \"#utility.yul\":7389:7390   */\n      0x00\n        /* \"#utility.yul\":7382:7397   */\n      revert\n        /* \"#utility.yul\":7246:7407   */\n    tag_370:\n      pop\n        /* \"#utility.yul\":7033:7413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8040:8525   */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8225:8257   */\n      dup5\n      and\n        /* \"#utility.yul\":8207:8258   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8294:8296   */\n      0x40\n        /* \"#utility.yul\":8289:8291   */\n      0x20\n        /* \"#utility.yul\":8274:8292   */\n      dup3\n      add\n        /* \"#utility.yul\":8267:8297   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8313:8331   */\n      dup2\n      add\n        /* \"#utility.yul\":8306:8340   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":8333:8339   */\n      dup2\n        /* \"#utility.yul\":8382:8388   */\n      dup4\n        /* \"#utility.yul\":8377:8379   */\n      0x60\n        /* \"#utility.yul\":8362:8380   */\n      dup4\n      add\n        /* \"#utility.yul\":8349:8397   */\n      calldatacopy\n        /* \"#utility.yul\":8446:8447   */\n      0x00\n        /* \"#utility.yul\":8417:8439   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":8441:8443   */\n      0x60\n        /* \"#utility.yul\":8413:8444   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8406:8448   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8509:8511   */\n      0x1f\n        /* \"#utility.yul\":8488:8503   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8484:8513   */\n      and\n        /* \"#utility.yul\":8469:8514   */\n      add\n        /* \"#utility.yul\":8465:8519   */\n      add\n      swap3\n        /* \"#utility.yul\":8040:8525   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8530:8714   */\n    tag_191:\n        /* \"#utility.yul\":8600:8606   */\n      0x00\n        /* \"#utility.yul\":8653:8655   */\n      0x20\n        /* \"#utility.yul\":8641:8650   */\n      dup3\n        /* \"#utility.yul\":8632:8639   */\n      dup5\n        /* \"#utility.yul\":8628:8651   */\n      sub\n        /* \"#utility.yul\":8624:8656   */\n      slt\n        /* \"#utility.yul\":8621:8673   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":8669:8670   */\n      0x00\n        /* \"#utility.yul\":8666:8667   */\n      dup1\n        /* \"#utility.yul\":8659:8671   */\n      revert\n        /* \"#utility.yul\":8621:8673   */\n    tag_375:\n      pop\n        /* \"#utility.yul\":8692:8708   */\n      mload\n      swap2\n        /* \"#utility.yul\":8530:8714   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9180:9344   */\n    tag_299:\n        /* \"#utility.yul\":9256:9269   */\n      dup1\n      mload\n        /* \"#utility.yul\":9305:9318   */\n      dup1\n      iszero\n        /* \"#utility.yul\":9298:9319   */\n      iszero\n        /* \"#utility.yul\":9288:9320   */\n      dup2\n      eq\n        /* \"#utility.yul\":9278:9338   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":9334:9335   */\n      0x00\n        /* \"#utility.yul\":9331:9332   */\n      dup1\n        /* \"#utility.yul\":9324:9336   */\n      revert\n        /* \"#utility.yul\":9278:9338   */\n    tag_378:\n        /* \"#utility.yul\":9180:9344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9349:9551   */\n    tag_206:\n        /* \"#utility.yul\":9416:9422   */\n      0x00\n        /* \"#utility.yul\":9469:9471   */\n      0x20\n        /* \"#utility.yul\":9457:9466   */\n      dup3\n        /* \"#utility.yul\":9448:9455   */\n      dup5\n        /* \"#utility.yul\":9444:9467   */\n      sub\n        /* \"#utility.yul\":9440:9472   */\n      slt\n        /* \"#utility.yul\":9437:9489   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":9485:9486   */\n      0x00\n        /* \"#utility.yul\":9482:9483   */\n      dup1\n        /* \"#utility.yul\":9475:9487   */\n      revert\n        /* \"#utility.yul\":9437:9489   */\n    tag_380:\n        /* \"#utility.yul\":9508:9545   */\n      tag_328\n        /* \"#utility.yul\":9535:9544   */\n      dup3\n        /* \"#utility.yul\":9508:9545   */\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":9556:9900   */\n    tag_300:\n        /* \"#utility.yul\":9623:9625   */\n      0x40\n        /* \"#utility.yul\":9617:9626   */\n      mload\n        /* \"#utility.yul\":9665:9668   */\n      0x01e0\n        /* \"#utility.yul\":9653:9669   */\n      dup2\n      add\n        /* \"#utility.yul\":9699:9717   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9684:9718   */\n      dup2\n      gt\n        /* \"#utility.yul\":9720:9742   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":9681:9743   */\n      or\n        /* \"#utility.yul\":9678:9863   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":9785:9795   */\n      0x4e487b71\n        /* \"#utility.yul\":9780:9783   */\n      0xe0\n        /* \"#utility.yul\":9776:9796   */\n      shl\n        /* \"#utility.yul\":9773:9774   */\n      0x00\n        /* \"#utility.yul\":9766:9797   */\n      mstore\n        /* \"#utility.yul\":9820:9824   */\n      0x41\n        /* \"#utility.yul\":9817:9818   */\n      0x04\n        /* \"#utility.yul\":9810:9825   */\n      mstore\n        /* \"#utility.yul\":9848:9852   */\n      0x24\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9838:9853   */\n      revert\n        /* \"#utility.yul\":9678:9863   */\n    tag_383:\n        /* \"#utility.yul\":9879:9881   */\n      0x40\n        /* \"#utility.yul\":9872:9894   */\n      mstore\n        /* \"#utility.yul\":9556:9900   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9905:10043   */\n    tag_301:\n        /* \"#utility.yul\":9984:9997   */\n      dup1\n      mload\n        /* \"#utility.yul\":10006:10037   */\n      tag_378\n        /* \"#utility.yul\":9984:9997   */\n      dup2\n        /* \"#utility.yul\":10006:10037   */\n      tag_295\n      jump\t// in\n        /* \"#utility.yul\":10048:10199   */\n    tag_302:\n        /* \"#utility.yul\":10131:10144   */\n      dup1\n      mload\n        /* \"#utility.yul\":10173:10174   */\n      0x04\n        /* \"#utility.yul\":10163:10175   */\n      dup2\n      lt\n        /* \"#utility.yul\":10153:10193   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":10189:10190   */\n      0x00\n        /* \"#utility.yul\":10186:10187   */\n      dup1\n        /* \"#utility.yul\":10179:10191   */\n      revert\n        /* \"#utility.yul\":10204:11557   */\n    tag_219:\n        /* \"#utility.yul\":10303:10309   */\n      0x00\n        /* \"#utility.yul\":10356:10359   */\n      0x01e0\n        /* \"#utility.yul\":10344:10353   */\n      dup3\n        /* \"#utility.yul\":10335:10342   */\n      dup5\n        /* \"#utility.yul\":10331:10354   */\n      sub\n        /* \"#utility.yul\":10327:10360   */\n      slt\n        /* \"#utility.yul\":10324:10377   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":10373:10374   */\n      0x00\n        /* \"#utility.yul\":10370:10371   */\n      dup1\n        /* \"#utility.yul\":10363:10375   */\n      revert\n        /* \"#utility.yul\":10324:10377   */\n    tag_389:\n        /* \"#utility.yul\":10399:10416   */\n      tag_390\n      tag_300\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":10439:10479   */\n      tag_391\n        /* \"#utility.yul\":10469:10478   */\n      dup4\n        /* \"#utility.yul\":10439:10479   */\n      tag_301\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":10432:10437   */\n      dup2\n        /* \"#utility.yul\":10425:10480   */\n      mstore\n        /* \"#utility.yul\":10512:10565   */\n      tag_392\n        /* \"#utility.yul\":10561:10563   */\n      0x20\n        /* \"#utility.yul\":10550:10559   */\n      dup5\n        /* \"#utility.yul\":10546:10564   */\n      add\n        /* \"#utility.yul\":10512:10565   */\n      tag_302\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":10507:10509   */\n      0x20\n        /* \"#utility.yul\":10500:10505   */\n      dup3\n        /* \"#utility.yul\":10496:10510   */\n      add\n        /* \"#utility.yul\":10489:10566   */\n      mstore\n        /* \"#utility.yul\":10619:10621   */\n      0x40\n        /* \"#utility.yul\":10608:10617   */\n      dup4\n        /* \"#utility.yul\":10604:10622   */\n      add\n        /* \"#utility.yul\":10598:10623   */\n      mload\n        /* \"#utility.yul\":10593:10595   */\n      0x40\n        /* \"#utility.yul\":10586:10591   */\n      dup3\n        /* \"#utility.yul\":10582:10596   */\n      add\n        /* \"#utility.yul\":10575:10624   */\n      mstore\n        /* \"#utility.yul\":10677:10679   */\n      0x60\n        /* \"#utility.yul\":10666:10675   */\n      dup4\n        /* \"#utility.yul\":10662:10680   */\n      add\n        /* \"#utility.yul\":10656:10681   */\n      mload\n        /* \"#utility.yul\":10651:10653   */\n      0x60\n        /* \"#utility.yul\":10644:10649   */\n      dup3\n        /* \"#utility.yul\":10640:10654   */\n      add\n        /* \"#utility.yul\":10633:10682   */\n      mstore\n        /* \"#utility.yul\":10736:10739   */\n      0x80\n        /* \"#utility.yul\":10725:10734   */\n      dup4\n        /* \"#utility.yul\":10721:10740   */\n      add\n        /* \"#utility.yul\":10715:10741   */\n      mload\n        /* \"#utility.yul\":10709:10712   */\n      0x80\n        /* \"#utility.yul\":10702:10707   */\n      dup3\n        /* \"#utility.yul\":10698:10713   */\n      add\n        /* \"#utility.yul\":10691:10742   */\n      mstore\n        /* \"#utility.yul\":10796:10799   */\n      0xa0\n        /* \"#utility.yul\":10785:10794   */\n      dup4\n        /* \"#utility.yul\":10781:10800   */\n      add\n        /* \"#utility.yul\":10775:10801   */\n      mload\n        /* \"#utility.yul\":10769:10772   */\n      0xa0\n        /* \"#utility.yul\":10762:10767   */\n      dup3\n        /* \"#utility.yul\":10758:10773   */\n      add\n        /* \"#utility.yul\":10751:10802   */\n      mstore\n        /* \"#utility.yul\":10856:10859   */\n      0xc0\n        /* \"#utility.yul\":10845:10854   */\n      dup4\n        /* \"#utility.yul\":10841:10860   */\n      add\n        /* \"#utility.yul\":10835:10861   */\n      mload\n        /* \"#utility.yul\":10829:10832   */\n      0xc0\n        /* \"#utility.yul\":10822:10827   */\n      dup3\n        /* \"#utility.yul\":10818:10833   */\n      add\n        /* \"#utility.yul\":10811:10862   */\n      mstore\n        /* \"#utility.yul\":10916:10919   */\n      0xe0\n        /* \"#utility.yul\":10905:10914   */\n      dup4\n        /* \"#utility.yul\":10901:10920   */\n      add\n        /* \"#utility.yul\":10895:10921   */\n      mload\n        /* \"#utility.yul\":10889:10892   */\n      0xe0\n        /* \"#utility.yul\":10882:10887   */\n      dup3\n        /* \"#utility.yul\":10878:10893   */\n      add\n        /* \"#utility.yul\":10871:10922   */\n      mstore\n        /* \"#utility.yul\":10941:10944   */\n      0x0100\n        /* \"#utility.yul\":10997:10999   */\n      dup1\n        /* \"#utility.yul\":10986:10995   */\n      dup5\n        /* \"#utility.yul\":10982:11000   */\n      add\n        /* \"#utility.yul\":10976:11001   */\n      mload\n        /* \"#utility.yul\":10971:10973   */\n      dup2\n        /* \"#utility.yul\":10964:10969   */\n      dup4\n        /* \"#utility.yul\":10960:10974   */\n      add\n        /* \"#utility.yul\":10953:11002   */\n      mstore\n      pop\n        /* \"#utility.yul\":11021:11024   */\n      0x0120\n        /* \"#utility.yul\":11077:11079   */\n      dup1\n        /* \"#utility.yul\":11066:11075   */\n      dup5\n        /* \"#utility.yul\":11062:11080   */\n      add\n        /* \"#utility.yul\":11056:11081   */\n      mload\n        /* \"#utility.yul\":11051:11053   */\n      dup2\n        /* \"#utility.yul\":11044:11049   */\n      dup4\n        /* \"#utility.yul\":11040:11054   */\n      add\n        /* \"#utility.yul\":11033:11082   */\n      mstore\n      pop\n        /* \"#utility.yul\":11101:11104   */\n      0x0140\n        /* \"#utility.yul\":11157:11159   */\n      dup1\n        /* \"#utility.yul\":11146:11155   */\n      dup5\n        /* \"#utility.yul\":11142:11160   */\n      add\n        /* \"#utility.yul\":11136:11161   */\n      mload\n        /* \"#utility.yul\":11131:11133   */\n      dup2\n        /* \"#utility.yul\":11124:11129   */\n      dup4\n        /* \"#utility.yul\":11120:11134   */\n      add\n        /* \"#utility.yul\":11113:11162   */\n      mstore\n      pop\n        /* \"#utility.yul\":11181:11184   */\n      0x0160\n        /* \"#utility.yul\":11237:11239   */\n      dup1\n        /* \"#utility.yul\":11226:11235   */\n      dup5\n        /* \"#utility.yul\":11222:11240   */\n      add\n        /* \"#utility.yul\":11216:11241   */\n      mload\n        /* \"#utility.yul\":11211:11213   */\n      dup2\n        /* \"#utility.yul\":11204:11209   */\n      dup4\n        /* \"#utility.yul\":11200:11214   */\n      add\n        /* \"#utility.yul\":11193:11242   */\n      mstore\n      pop\n        /* \"#utility.yul\":11261:11264   */\n      0x0180\n        /* \"#utility.yul\":11296:11345   */\n      tag_393\n        /* \"#utility.yul\":11341:11343   */\n      dup2\n        /* \"#utility.yul\":11330:11339   */\n      dup6\n        /* \"#utility.yul\":11326:11344   */\n      add\n        /* \"#utility.yul\":11296:11345   */\n      tag_301\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11280:11294   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11273:11346   */\n      mstore\n        /* \"#utility.yul\":11365:11368   */\n      0x01a0\n        /* \"#utility.yul\":11406:11424   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":11400:11425   */\n      mload\n        /* \"#utility.yul\":11384:11398   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11377:11426   */\n      mstore\n        /* \"#utility.yul\":11445:11448   */\n      0x01c0\n        /* \"#utility.yul\":11480:11526   */\n      tag_394\n        /* \"#utility.yul\":11507:11525   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":11480:11526   */\n      tag_299\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11464:11478   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11457:11527   */\n      mstore\n        /* \"#utility.yul\":11468:11473   */\n      swap4\n        /* \"#utility.yul\":10204:11557   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12959:13084   */\n    tag_288:\n        /* \"#utility.yul\":13024:13033   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13045:13055   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":13042:13078   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":13058:13076   */\n      tag_135\n      tag_296\n      jump\t// in\n\n    auxdata: 0xa264697066735822122060738b03002327869dbd97fd1a4daebd42488587a3d8622b079e869bbeaeb19e64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1001": {
									"entryPoint": null,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1116": {
									"entryPoint": null,
									"id": 1116,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 281,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_boolt_bool_fromMemory": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3528:12",
										"nodeType": "YulBlock",
										"src": "0:3528:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "71:107:12",
													"nodeType": "YulBlock",
													"src": "71:107:12",
													"statements": [
														{
															"nativeSrc": "81:22:12",
															"nodeType": "YulAssignment",
															"src": "81:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "96:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "96:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "90:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "90:5:12"
																},
																"nativeSrc": "90:13:12",
																"nodeType": "YulFunctionCall",
																"src": "90:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "81:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "81:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "156:16:12",
																"nodeType": "YulBlock",
																"src": "156:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "165:1:12",
																					"nodeType": "YulLiteral",
																					"src": "165:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "168:1:12",
																					"nodeType": "YulLiteral",
																					"src": "168:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "158:6:12"
																			},
																			"nativeSrc": "158:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "158:12:12"
																		},
																		"nativeSrc": "158:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "158:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "125:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "125:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "146:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "146:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "139:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "139:6:12"
																						},
																						"nativeSrc": "139:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "139:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "132:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "132:6:12"
																				},
																				"nativeSrc": "132:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "132:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "122:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "122:2:12"
																		},
																		"nativeSrc": "122:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "122:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "115:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "115:6:12"
																},
																"nativeSrc": "115:40:12",
																"nodeType": "YulFunctionCall",
																"src": "115:40:12"
															},
															"nativeSrc": "112:60:12",
															"nodeType": "YulIf",
															"src": "112:60:12"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nativeSrc": "14:164:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "50:6:12",
														"nodeType": "YulTypedName",
														"src": "50:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "61:5:12",
														"nodeType": "YulTypedName",
														"src": "61:5:12",
														"type": ""
													}
												],
												"src": "14:164:12"
											},
											{
												"body": {
													"nativeSrc": "292:339:12",
													"nodeType": "YulBlock",
													"src": "292:339:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "338:16:12",
																"nodeType": "YulBlock",
																"src": "338:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "347:1:12",
																					"nodeType": "YulLiteral",
																					"src": "347:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "350:1:12",
																					"nodeType": "YulLiteral",
																					"src": "350:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "340:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:12"
																			},
																			"nativeSrc": "340:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:12"
																		},
																		"nativeSrc": "340:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "313:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "322:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "309:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:12"
																		},
																		"nativeSrc": "309:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "334:2:12",
																		"nodeType": "YulLiteral",
																		"src": "334:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "305:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:12"
																},
																"nativeSrc": "305:32:12",
																"nodeType": "YulFunctionCall",
																"src": "305:32:12"
															},
															"nativeSrc": "302:52:12",
															"nodeType": "YulIf",
															"src": "302:52:12"
														},
														{
															"nativeSrc": "363:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "363:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "382:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "382:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "376:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "376:5:12"
																},
																"nativeSrc": "376:16:12",
																"nodeType": "YulFunctionCall",
																"src": "376:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "367:5:12",
																	"nodeType": "YulTypedName",
																	"src": "367:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "455:16:12",
																"nodeType": "YulBlock",
																"src": "455:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "464:1:12",
																					"nodeType": "YulLiteral",
																					"src": "464:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "467:1:12",
																					"nodeType": "YulLiteral",
																					"src": "467:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "457:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "457:6:12"
																			},
																			"nativeSrc": "457:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "457:12:12"
																		},
																		"nativeSrc": "457:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "457:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "414:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "414:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "425:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "425:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "440:3:12",
																										"nodeType": "YulLiteral",
																										"src": "440:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "445:1:12",
																										"nodeType": "YulLiteral",
																										"src": "445:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "436:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "436:3:12"
																								},
																								"nativeSrc": "436:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "436:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "449:1:12",
																								"nodeType": "YulLiteral",
																								"src": "449:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "432:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "432:3:12"
																						},
																						"nativeSrc": "432:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "432:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "421:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "421:3:12"
																				},
																				"nativeSrc": "421:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "421:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "411:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "411:2:12"
																		},
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "411:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "404:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "404:6:12"
																},
																"nativeSrc": "404:50:12",
																"nodeType": "YulFunctionCall",
																"src": "404:50:12"
															},
															"nativeSrc": "401:70:12",
															"nodeType": "YulIf",
															"src": "401:70:12"
														},
														{
															"nativeSrc": "480:15:12",
															"nodeType": "YulAssignment",
															"src": "480:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "490:5:12",
																"nodeType": "YulIdentifier",
																"src": "490:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "480:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:12"
																}
															]
														},
														{
															"nativeSrc": "504:56:12",
															"nodeType": "YulAssignment",
															"src": "504:56:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "545:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "545:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:12",
																				"nodeType": "YulLiteral",
																				"src": "556:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "541:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:12"
																		},
																		"nativeSrc": "541:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "541:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "514:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "514:26:12"
																},
																"nativeSrc": "514:46:12",
																"nodeType": "YulFunctionCall",
																"src": "514:46:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "504:6:12"
																}
															]
														},
														{
															"nativeSrc": "569:56:12",
															"nodeType": "YulAssignment",
															"src": "569:56:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "610:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "610:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "621:2:12",
																				"nodeType": "YulLiteral",
																				"src": "621:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "606:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:12"
																		},
																		"nativeSrc": "606:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "606:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "579:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "579:26:12"
																},
																"nativeSrc": "579:46:12",
																"nodeType": "YulFunctionCall",
																"src": "579:46:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "569:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "569:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_boolt_bool_fromMemory",
												"nativeSrc": "183:448:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "242:9:12",
														"nodeType": "YulTypedName",
														"src": "242:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "253:7:12",
														"nodeType": "YulTypedName",
														"src": "253:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "265:6:12",
														"nodeType": "YulTypedName",
														"src": "265:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "273:6:12",
														"nodeType": "YulTypedName",
														"src": "273:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "281:6:12",
														"nodeType": "YulTypedName",
														"src": "281:6:12",
														"type": ""
													}
												],
												"src": "183:448:12"
											},
											{
												"body": {
													"nativeSrc": "668:95:12",
													"nodeType": "YulBlock",
													"src": "668:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "685:1:12",
																		"nodeType": "YulLiteral",
																		"src": "685:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "692:3:12",
																				"nodeType": "YulLiteral",
																				"src": "692:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "697:10:12",
																				"nodeType": "YulLiteral",
																				"src": "697:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "688:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:12"
																		},
																		"nativeSrc": "688:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "688:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "678:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:12"
																},
																"nativeSrc": "678:31:12",
																"nodeType": "YulFunctionCall",
																"src": "678:31:12"
															},
															"nativeSrc": "678:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "678:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "725:1:12",
																		"nodeType": "YulLiteral",
																		"src": "725:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:4:12",
																		"nodeType": "YulLiteral",
																		"src": "728:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "718:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:12"
																},
																"nativeSrc": "718:15:12",
																"nodeType": "YulFunctionCall",
																"src": "718:15:12"
															},
															"nativeSrc": "718:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "718:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "749:1:12",
																		"nodeType": "YulLiteral",
																		"src": "749:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "752:4:12",
																		"nodeType": "YulLiteral",
																		"src": "752:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "742:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "742:6:12"
																},
																"nativeSrc": "742:15:12",
																"nodeType": "YulFunctionCall",
																"src": "742:15:12"
															},
															"nativeSrc": "742:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "742:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "636:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "636:127:12"
											},
											{
												"body": {
													"nativeSrc": "823:325:12",
													"nodeType": "YulBlock",
													"src": "823:325:12",
													"statements": [
														{
															"nativeSrc": "833:22:12",
															"nodeType": "YulAssignment",
															"src": "833:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "847:1:12",
																		"nodeType": "YulLiteral",
																		"src": "847:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "850:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "850:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "843:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:12"
																},
																"nativeSrc": "843:12:12",
																"nodeType": "YulFunctionCall",
																"src": "843:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "833:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:12"
																}
															]
														},
														{
															"nativeSrc": "864:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "864:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "894:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "894:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "900:1:12",
																		"nodeType": "YulLiteral",
																		"src": "900:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "890:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "890:3:12"
																},
																"nativeSrc": "890:12:12",
																"nodeType": "YulFunctionCall",
																"src": "890:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "868:18:12",
																	"nodeType": "YulTypedName",
																	"src": "868:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "941:31:12",
																"nodeType": "YulBlock",
																"src": "941:31:12",
																"statements": [
																	{
																		"nativeSrc": "943:27:12",
																		"nodeType": "YulAssignment",
																		"src": "943:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "957:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "957:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "965:4:12",
																					"nodeType": "YulLiteral",
																					"src": "965:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "953:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "953:3:12"
																			},
																			"nativeSrc": "953:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "953:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "943:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "943:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "921:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "921:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "914:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:12"
																},
																"nativeSrc": "914:26:12",
																"nodeType": "YulFunctionCall",
																"src": "914:26:12"
															},
															"nativeSrc": "911:61:12",
															"nodeType": "YulIf",
															"src": "911:61:12"
														},
														{
															"body": {
																"nativeSrc": "1031:111:12",
																"nodeType": "YulBlock",
																"src": "1031:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1052:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1059:3:12",
																							"nodeType": "YulLiteral",
																							"src": "1059:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1064:10:12",
																							"nodeType": "YulLiteral",
																							"src": "1064:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1055:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1055:3:12"
																					},
																					"nativeSrc": "1055:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1055:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1045:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1045:6:12"
																			},
																			"nativeSrc": "1045:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1045:31:12"
																		},
																		"nativeSrc": "1045:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1045:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1096:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1096:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1099:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1099:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1089:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1089:6:12"
																			},
																			"nativeSrc": "1089:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1089:15:12"
																		},
																		"nativeSrc": "1089:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1089:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1124:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1124:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1127:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1127:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1117:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1117:6:12"
																			},
																			"nativeSrc": "1117:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1117:15:12"
																		},
																		"nativeSrc": "1117:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1117:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "987:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "987:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1018:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1018:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1007:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:12"
																		},
																		"nativeSrc": "1007:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1007:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "984:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "984:2:12"
																},
																"nativeSrc": "984:38:12",
																"nodeType": "YulFunctionCall",
																"src": "984:38:12"
															},
															"nativeSrc": "981:161:12",
															"nodeType": "YulIf",
															"src": "981:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "768:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "803:4:12",
														"nodeType": "YulTypedName",
														"src": "803:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "812:6:12",
														"nodeType": "YulTypedName",
														"src": "812:6:12",
														"type": ""
													}
												],
												"src": "768:380:12"
											},
											{
												"body": {
													"nativeSrc": "1209:65:12",
													"nodeType": "YulBlock",
													"src": "1209:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1226:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1226:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1229:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1229:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1219:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1219:6:12"
																},
																"nativeSrc": "1219:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1219:14:12"
															},
															"nativeSrc": "1219:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "1219:14:12"
														},
														{
															"nativeSrc": "1242:26:12",
															"nodeType": "YulAssignment",
															"src": "1242:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1260:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1263:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1263:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1250:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1250:9:12"
																},
																"nativeSrc": "1250:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1250:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1242:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1242:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1153:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1192:3:12",
														"nodeType": "YulTypedName",
														"src": "1192:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1200:4:12",
														"nodeType": "YulTypedName",
														"src": "1200:4:12",
														"type": ""
													}
												],
												"src": "1153:121:12"
											},
											{
												"body": {
													"nativeSrc": "1360:437:12",
													"nodeType": "YulBlock",
													"src": "1360:437:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1393:398:12",
																"nodeType": "YulBlock",
																"src": "1393:398:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1414:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1414:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1417:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1417:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1407:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1407:6:12"
																			},
																			"nativeSrc": "1407:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1407:16:12"
																		},
																		"nativeSrc": "1407:16:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1407:16:12"
																	},
																	{
																		"nativeSrc": "1436:30:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1436:30:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1458:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1461:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1461:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1448:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:12"
																			},
																			"nativeSrc": "1448:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1448:18:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1440:4:12",
																				"nodeType": "YulTypedName",
																				"src": "1440:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1479:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1479:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1502:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1502:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1512:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1512:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1519:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1519:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1531:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1531:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1515:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1515:3:12"
																							},
																							"nativeSrc": "1515:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1515:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1508:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1508:3:12"
																					},
																					"nativeSrc": "1508:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1508:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1498:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1498:3:12"
																			},
																			"nativeSrc": "1498:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1498:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1483:11:12",
																				"nodeType": "YulTypedName",
																				"src": "1483:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1573:23:12",
																			"nodeType": "YulBlock",
																			"src": "1573:23:12",
																			"statements": [
																				{
																					"nativeSrc": "1575:19:12",
																					"nodeType": "YulAssignment",
																					"src": "1575:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1590:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1590:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1575:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "1575:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1555:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "1555:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1567:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1567:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1552:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1552:2:12"
																			},
																			"nativeSrc": "1552:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1552:20:12"
																		},
																		"nativeSrc": "1549:47:12",
																		"nodeType": "YulIf",
																		"src": "1549:47:12"
																	},
																	{
																		"nativeSrc": "1609:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1609:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1623:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1623:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1633:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1633:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1640:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1640:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1645:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1645:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1636:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1636:3:12"
																							},
																							"nativeSrc": "1636:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1636:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1629:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1629:3:12"
																					},
																					"nativeSrc": "1629:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1629:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1619:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1619:3:12"
																			},
																			"nativeSrc": "1619:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1619:31:12"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1613:2:12",
																				"nodeType": "YulTypedName",
																				"src": "1613:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1663:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1663:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1676:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "1676:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1667:5:12",
																				"nodeType": "YulTypedName",
																				"src": "1667:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1761:20:12",
																			"nodeType": "YulBlock",
																			"src": "1761:20:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1770:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1770:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1777:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1777:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1763:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "1763:6:12"
																						},
																						"nativeSrc": "1763:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1763:16:12"
																					},
																					"nativeSrc": "1763:16:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "1763:16:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1711:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1711:5:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1718:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1718:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1708:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1708:2:12"
																			},
																			"nativeSrc": "1708:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1708:13:12"
																		},
																		"nativeSrc": "1700:81:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1722:26:12",
																			"nodeType": "YulBlock",
																			"src": "1722:26:12",
																			"statements": [
																				{
																					"nativeSrc": "1724:22:12",
																					"nodeType": "YulAssignment",
																					"src": "1724:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1737:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1737:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1744:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1744:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1733:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1733:3:12"
																						},
																						"nativeSrc": "1733:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1733:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1724:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "1724:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1704:3:12",
																			"nodeType": "YulBlock",
																			"src": "1704:3:12",
																			"statements": []
																		},
																		"src": "1700:81:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1376:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1376:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1381:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1381:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1373:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1373:2:12"
																},
																"nativeSrc": "1373:11:12",
																"nodeType": "YulFunctionCall",
																"src": "1373:11:12"
															},
															"nativeSrc": "1370:421:12",
															"nodeType": "YulIf",
															"src": "1370:421:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1279:518:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1332:5:12",
														"nodeType": "YulTypedName",
														"src": "1332:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1339:3:12",
														"nodeType": "YulTypedName",
														"src": "1339:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1344:10:12",
														"nodeType": "YulTypedName",
														"src": "1344:10:12",
														"type": ""
													}
												],
												"src": "1279:518:12"
											},
											{
												"body": {
													"nativeSrc": "1887:81:12",
													"nodeType": "YulBlock",
													"src": "1887:81:12",
													"statements": [
														{
															"nativeSrc": "1897:65:12",
															"nodeType": "YulAssignment",
															"src": "1897:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1912:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1912:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1930:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1930:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1933:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1933:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1926:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1926:3:12"
																								},
																								"nativeSrc": "1926:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1926:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1943:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1943:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1939:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1939:3:12"
																								},
																								"nativeSrc": "1939:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1939:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1922:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1922:3:12"
																						},
																						"nativeSrc": "1922:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1922:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1918:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1918:3:12"
																				},
																				"nativeSrc": "1918:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1918:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1908:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:12"
																		},
																		"nativeSrc": "1908:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1908:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1954:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1954:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1957:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1957:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1950:3:12"
																		},
																		"nativeSrc": "1950:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1950:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1905:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1905:2:12"
																},
																"nativeSrc": "1905:57:12",
																"nodeType": "YulFunctionCall",
																"src": "1905:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1897:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1897:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1802:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1864:4:12",
														"nodeType": "YulTypedName",
														"src": "1864:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1870:3:12",
														"nodeType": "YulTypedName",
														"src": "1870:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1878:4:12",
														"nodeType": "YulTypedName",
														"src": "1878:4:12",
														"type": ""
													}
												],
												"src": "1802:166:12"
											},
											{
												"body": {
													"nativeSrc": "2069:1249:12",
													"nodeType": "YulBlock",
													"src": "2069:1249:12",
													"statements": [
														{
															"nativeSrc": "2079:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2079:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2099:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2093:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2093:5:12"
																},
																"nativeSrc": "2093:10:12",
																"nodeType": "YulFunctionCall",
																"src": "2093:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2083:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2083:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:22:12",
																"nodeType": "YulBlock",
																"src": "2146:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2148:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2148:16:12"
																			},
																			"nativeSrc": "2148:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:18:12"
																		},
																		"nativeSrc": "2148:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2118:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2134:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2134:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2138:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2138:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2130:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2130:3:12"
																				},
																				"nativeSrc": "2130:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2130:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2142:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2142:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2126:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2126:3:12"
																		},
																		"nativeSrc": "2126:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2126:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2115:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:12"
																},
																"nativeSrc": "2115:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2115:30:12"
															},
															"nativeSrc": "2112:56:12",
															"nodeType": "YulIf",
															"src": "2112:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2221:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2221:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2259:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2259:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2253:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2253:5:12"
																				},
																				"nativeSrc": "2253:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2253:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2227:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "2227:25:12"
																		},
																		"nativeSrc": "2227:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2227:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2267:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2267:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2177:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2177:43:12"
																},
																"nativeSrc": "2177:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2177:97:12"
															},
															"nativeSrc": "2177:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "2177:97:12"
														},
														{
															"nativeSrc": "2283:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2283:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2300:1:12",
																"nodeType": "YulLiteral",
																"src": "2300:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2287:9:12",
																	"nodeType": "YulTypedName",
																	"src": "2287:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2310:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2310:23:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2329:4:12",
																"nodeType": "YulLiteral",
																"src": "2329:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2314:11:12",
																	"nodeType": "YulTypedName",
																	"src": "2314:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2342:17:12",
															"nodeType": "YulAssignment",
															"src": "2342:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2355:4:12",
																"nodeType": "YulLiteral",
																"src": "2355:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2342:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2342:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2405:656:12",
																		"nodeType": "YulBlock",
																		"src": "2405:656:12",
																		"statements": [
																			{
																				"nativeSrc": "2419:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2419:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2438:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2438:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2450:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2450:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2446:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2446:3:12"
																							},
																							"nativeSrc": "2446:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2446:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2434:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2434:3:12"
																					},
																					"nativeSrc": "2434:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2434:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2423:7:12",
																						"nodeType": "YulTypedName",
																						"src": "2423:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2467:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2467:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2511:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2511:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2481:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "2481:29:12"
																					},
																					"nativeSrc": "2481:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2481:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2471:6:12",
																						"nodeType": "YulTypedName",
																						"src": "2471:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2529:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2529:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2538:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2538:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2533:1:12",
																						"nodeType": "YulTypedName",
																						"src": "2533:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2616:172:12",
																					"nodeType": "YulBlock",
																					"src": "2616:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2641:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2641:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2659:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "2659:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2664:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "2664:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2655:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2655:3:12"
																												},
																												"nativeSrc": "2655:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2655:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2649:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "2649:5:12"
																										},
																										"nativeSrc": "2649:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2649:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2634:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2634:6:12"
																								},
																								"nativeSrc": "2634:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2634:42:12"
																							},
																							"nativeSrc": "2634:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2634:42:12"
																						},
																						{
																							"nativeSrc": "2693:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2693:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2707:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2707:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2715:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2715:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2703:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2703:3:12"
																								},
																								"nativeSrc": "2703:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2703:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2693:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2693:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2734:40:12",
																							"nodeType": "YulAssignment",
																							"src": "2734:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2751:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "2751:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2762:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "2762:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2747:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2747:3:12"
																								},
																								"nativeSrc": "2747:27:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2747:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2734:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "2734:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2563:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "2563:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2566:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "2566:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2560:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2560:2:12"
																					},
																					"nativeSrc": "2560:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2560:14:12"
																				},
																				"nativeSrc": "2552:236:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2575:28:12",
																					"nodeType": "YulBlock",
																					"src": "2575:28:12",
																					"statements": [
																						{
																							"nativeSrc": "2577:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2577:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2586:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "2586:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2589:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "2589:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2582:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2582:3:12"
																								},
																								"nativeSrc": "2582:19:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2582:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2577:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "2577:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2556:3:12",
																					"nodeType": "YulBlock",
																					"src": "2556:3:12",
																					"statements": []
																				},
																				"src": "2552:236:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "2836:166:12",
																					"nodeType": "YulBlock",
																					"src": "2836:166:12",
																					"statements": [
																						{
																							"nativeSrc": "2854:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2854:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2881:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2881:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2886:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2886:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2877:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2877:3:12"
																										},
																										"nativeSrc": "2877:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2877:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2871:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2871:5:12"
																								},
																								"nativeSrc": "2871:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2871:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2858:9:12",
																									"nodeType": "YulTypedName",
																									"src": "2858:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2921:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2921:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2933:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2933:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2960:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "2960:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2963:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "2963:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2956:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "2956:3:12"
																																		},
																																		"nativeSrc": "2956:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2956:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2972:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2972:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2952:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2952:3:12"
																																},
																																"nativeSrc": "2952:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2952:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2982:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2982:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2978:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2978:3:12"
																																},
																																"nativeSrc": "2978:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2978:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2948:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "2948:3:12"
																														},
																														"nativeSrc": "2948:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "2948:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2944:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2944:3:12"
																												},
																												"nativeSrc": "2944:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2944:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2929:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2929:3:12"
																										},
																										"nativeSrc": "2929:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2929:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2914:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2914:6:12"
																								},
																								"nativeSrc": "2914:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2914:74:12"
																							},
																							"nativeSrc": "2914:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2914:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2807:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "2807:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2816:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2816:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2804:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2804:2:12"
																					},
																					"nativeSrc": "2804:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2804:19:12"
																				},
																				"nativeSrc": "2801:201:12",
																				"nodeType": "YulIf",
																				"src": "2801:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3022:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3022:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3036:1:12",
																											"nodeType": "YulLiteral",
																											"src": "3036:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3039:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "3039:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3032:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "3032:3:12"
																									},
																									"nativeSrc": "3032:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "3032:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3048:1:12",
																									"nodeType": "YulLiteral",
																									"src": "3048:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3028:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3028:3:12"
																							},
																							"nativeSrc": "3028:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3028:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3015:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3015:6:12"
																					},
																					"nativeSrc": "3015:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3015:36:12"
																				},
																				"nativeSrc": "3015:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3015:36:12"
																			}
																		]
																	},
																	"nativeSrc": "2398:663:12",
																	"nodeType": "YulCase",
																	"src": "2398:663:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2403:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2403:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3078:234:12",
																		"nodeType": "YulBlock",
																		"src": "3078:234:12",
																		"statements": [
																			{
																				"nativeSrc": "3092:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3092:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3105:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3096:5:12",
																						"nodeType": "YulTypedName",
																						"src": "3096:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3141:67:12",
																					"nodeType": "YulBlock",
																					"src": "3141:67:12",
																					"statements": [
																						{
																							"nativeSrc": "3159:35:12",
																							"nodeType": "YulAssignment",
																							"src": "3159:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3178:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "3178:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3183:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3183:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3174:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3174:3:12"
																										},
																										"nativeSrc": "3174:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3174:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3168:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3168:5:12"
																								},
																								"nativeSrc": "3168:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3168:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3159:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3159:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3122:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3122:6:12"
																				},
																				"nativeSrc": "3119:89:12",
																				"nodeType": "YulIf",
																				"src": "3119:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3228:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3228:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3287:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3287:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3294:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3294:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3234:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "3234:52:12"
																							},
																							"nativeSrc": "3234:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3234:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3221:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3221:6:12"
																					},
																					"nativeSrc": "3221:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3221:81:12"
																				},
																				"nativeSrc": "3221:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3221:81:12"
																			}
																		]
																	},
																	"nativeSrc": "3070:242:12",
																	"nodeType": "YulCase",
																	"src": "3070:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2378:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2378:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2386:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2386:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2375:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2375:2:12"
																},
																"nativeSrc": "2375:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2375:14:12"
															},
															"nativeSrc": "2368:944:12",
															"nodeType": "YulSwitch",
															"src": "2368:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1973:1345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2054:4:12",
														"nodeType": "YulTypedName",
														"src": "2054:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2060:3:12",
														"nodeType": "YulTypedName",
														"src": "2060:3:12",
														"type": ""
													}
												],
												"src": "1973:1345:12"
											},
											{
												"body": {
													"nativeSrc": "3424:102:12",
													"nodeType": "YulBlock",
													"src": "3424:102:12",
													"statements": [
														{
															"nativeSrc": "3434:26:12",
															"nodeType": "YulAssignment",
															"src": "3434:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3446:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3446:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3457:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3457:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3442:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3442:3:12"
																},
																"nativeSrc": "3442:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3442:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3434:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3434:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3476:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3476:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3491:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3491:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3507:3:12",
																								"nodeType": "YulLiteral",
																								"src": "3507:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3512:1:12",
																								"nodeType": "YulLiteral",
																								"src": "3512:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3503:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3503:3:12"
																						},
																						"nativeSrc": "3503:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3503:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3516:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3516:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3499:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3499:3:12"
																				},
																				"nativeSrc": "3499:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3499:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:12"
																		},
																		"nativeSrc": "3487:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3487:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3469:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:12"
																},
																"nativeSrc": "3469:51:12",
																"nodeType": "YulFunctionCall",
																"src": "3469:51:12"
															},
															"nativeSrc": "3469:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "3469:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3323:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3393:9:12",
														"nodeType": "YulTypedName",
														"src": "3393:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3404:6:12",
														"nodeType": "YulTypedName",
														"src": "3404:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3415:4:12",
														"nodeType": "YulTypedName",
														"src": "3415:4:12",
														"type": ""
													}
												],
												"src": "3323:203:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_boolt_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_bool_fromMemory(add(headStart, 32))\n        value2 := abi_decode_bool_fromMemory(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516116fd3803806116fd83398101604081905261002e9161017e565b336040518060400160405280600d81526020016c1b1bdd1d195c9e551a58dad95d609a1b81525060405180604001604052806006815260200165151a58dad95d60d21b81525081600390816100839190610263565b5060046100908282610263565b50506001600555506001600160a01b0381166100c557604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100ce81610119565b5060078054911515600160a81b0260ff60a81b19931515600160a01b026001600160a81b03199093166001600160a01b03909516949094179190911791909116919091179055610322565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80518015158114610179575f80fd5b919050565b5f805f60608486031215610190575f80fd5b83516001600160a01b03811681146101a6575f80fd5b92506101b46020850161016a565b91506101c26040850161016a565b90509250925092565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806101f357607f821691505b60208210810361021157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561025e57805f5260205f20601f840160051c8101602085101561023c5750805b601f840160051c820191505b8181101561025b575f8155600101610248565b50505b505050565b81516001600160401b0381111561027c5761027c6101cb565b6102908161028a84546101df565b84610217565b602080601f8311600181146102c3575f84156102ac5750858301515b5f19600386901b1c1916600185901b17855561031a565b5f85815260208120601f198616915b828110156102f1578886015182559484019460019091019084016102d2565b508582101561030e57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6113ce8061032f5f395ff3fe608060405234801561000f575f80fd5b506004361061013d575f3560e01c8063715018a6116100b4578063b4309a9c11610079578063b4309a9c14610297578063c7ff23bb146102ab578063d896fc10146102be578063d9caed12146102d1578063dd62ed3e146102e4578063f2fde38b1461031c575f80fd5b8063715018a61461023c57806379cc6790146102445780638da5cb5b1461025757806395d89b411461027c578063a9059cbb14610284575f80fd5b806318160ddd1161010557806318160ddd146101ba57806323b872dd146101cc578063313ce567146101df57806342966c68146101ee5780636ebd327b1461020157806370a0823114610214575f80fd5b8063012c911e1461014157806306e2a29a1461015657806306fdde031461017f578063082921a514610194578063095ea7b3146101a7575b5f80fd5b61015461014f366004610e8a565b61032f565b005b60075461016a90600160a81b900460ff1681565b60405190151581526020015b60405180910390f35b6101876103c5565b6040516101769190610ebf565b6101546101a2366004610ef4565b610455565b61016a6101b5366004610ef4565b6104b4565b6002545b604051908152602001610176565b61016a6101da366004610f1e565b6104cd565b60405160128152602001610176565b6101546101fc366004610f4b565b6104f0565b61015461020f366004610f62565b6104fd565b6101be610222366004610fa7565b6001600160a01b03165f9081526020819052604090205490565b610154610597565b610154610252366004610ef4565b6105aa565b6006546001600160a01b03165b6040516001600160a01b039091168152602001610176565b6101876105c3565b61016a610292366004610ef4565b6105d2565b60075461016a90600160a01b900460ff1681565b600754610264906001600160a01b031681565b6101546102cc366004610fc9565b6105df565b6101546102df366004610f1e565b61073b565b6101be6102f2366004611054565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61015461032a366004610fa7565b6107b3565b5f61033c6012600a61117f565b610346908361118d565b9050610351816104f0565b5f61035d8585856107ed565b604080518781523360208201526001600160a01b03871681830152606081018590526080810186905282151560a082015290519192507febc14ddbdd1e1ebc5a287d8957bd1ca84faef18f192f27829b8459fd15f5195d919081900360c00190a15050505050565b6060600380546103d4906111a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610400906111a4565b801561044b5780601f106104225761010080835404028352916020019161044b565b820191905f5260205f20905b81548152906001019060200180831161042e57829003601f168201915b5050505050905090565b61045d610a8a565b6001600160a01b0382165f81815260086020908152604091829020849055815192835282018390527fd7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8910160405180910390a15050565b5f336104c1818585610ab7565b60019150505b92915050565b5f336104da858285610ac9565b6104e5858585610b3e565b506001949350505050565b6104fa3382610b9b565b50565b5f61050a6012600a61117f565b610514908361118d565b905061052084826105aa565b5f61052c8685856107ed565b604080518881526001600160a01b038881166020830152871681830152606081018590526080810186905282151560a082015290519192507febc14ddbdd1e1ebc5a287d8957bd1ca84faef18f192f27829b8459fd15f5195d919081900360c00190a1505050505050565b61059f610a8a565b6105a85f610bcf565b565b6105b5823383610ac9565b6105bf8282610b9b565b5050565b6060600480546103d4906111a4565b5f336104c1818585610b3e565b6105e7610c20565b6001600160a01b0384165f9081526008602052604081205490036106435760405162461bcd60e51b815260206004820152600e60248201526d6e6f20736574206173207461736b60901b60448201526064015b60405180910390fd5b6001600160a01b0384165f818152600860205260408082205490516370d6469360e11b81529192909163e1ac8d2690610684903390889088906004016111dc565b6020604051808303815f875af11580156106a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c4919061121b565b6106ce919061118d565b90506106da8482610c4a565b604080513381526001600160a01b0387811660208301528616818301526060810183905290517f4d914fbdb28a885441bb0f6e06bb01dfdfe8a8b6902391853b46eb747ae136ef9181900360800190a1506107356001600555565b50505050565b610743610a8a565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303815f875af115801561078f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107359190611246565b6107bb610a8a565b6001600160a01b0381166107e457604051631e4fbdf760e01b81525f600482015260240161063a565b6104fa81610bcf565b600754604051638f91cd1760e01b8152600481018590525f9160019183916001600160a01b031690638f91cd17906024016101e060405180830381865afa15801561083a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085e91906112ae565b6101808101519091506001600160a01b03166109c057600754600160a01b900460ff1615156001146108c85760405162461bcd60e51b8152602060048201526013602482015272627579207469636b6574206e6f20616c6c6f7760681b604482015260640161063a565b5f848261016001516108da919061118d565b825160075460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303815f875af115801561092d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109519190611246565b5060075460405163c5e7bb3360e01b8152600481018990526001600160a01b038881166024830152604482018890529091169063c5e7bb33906064015f604051808303815f87803b1580156109a4575f80fd5b505af11580156109b6573d5f803e3d5ffd5b5050505050610a81565b600754600160a81b900460ff161515600114610a155760405162461bcd60e51b815260206004820152601460248201527373656e64207469636b6574206e6f20616c6c6f7760601b604482015260640161063a565b600754604051635c42e0c560e01b8152600481018890526001600160a01b0387811660248301526044820187905290911690635c42e0c5906064015f604051808303815f87803b158015610a67575f80fd5b505af1158015610a79573d5f803e3d5ffd5b505050505f91505b50949350505050565b6006546001600160a01b031633146105a85760405163118cdaa760e01b815233600482015260240161063a565b610ac48383836001610c7e565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146107355781811015610b3057604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161063a565b61073584848484035f610c7e565b6001600160a01b038316610b6757604051634b637e8f60e11b81525f600482015260240161063a565b6001600160a01b038216610b905760405163ec442f0560e01b81525f600482015260240161063a565b610ac4838383610d50565b6001600160a01b038216610bc457604051634b637e8f60e11b81525f600482015260240161063a565b6105bf825f83610d50565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b600260055403610c4357604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b038216610c735760405163ec442f0560e01b81525f600482015260240161063a565b6105bf5f8383610d50565b6001600160a01b038416610ca75760405163e602df0560e01b81525f600482015260240161063a565b6001600160a01b038316610cd057604051634a1406b160e11b81525f600482015260240161063a565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561073557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d4291815260200190565b60405180910390a350505050565b6001600160a01b038316610d7a578060025f828254610d6f9190611385565b90915550610dea9050565b6001600160a01b0383165f9081526020819052604090205481811015610dcc5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161063a565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610e0657600280548290039055610e24565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e6991815260200190565b60405180910390a3505050565b6001600160a01b03811681146104fa575f80fd5b5f805f60608486031215610e9c575f80fd5b833592506020840135610eae81610e76565b929592945050506040919091013590565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8060408385031215610f05575f80fd5b8235610f1081610e76565b946020939093013593505050565b5f805f60608486031215610f30575f80fd5b8335610f3b81610e76565b92506020840135610eae81610e76565b5f60208284031215610f5b575f80fd5b5035919050565b5f805f8060808587031215610f75575f80fd5b843593506020850135610f8781610e76565b92506040850135610f9781610e76565b9396929550929360600135925050565b5f60208284031215610fb7575f80fd5b8135610fc281610e76565b9392505050565b5f805f8060608587031215610fdc575f80fd5b8435610fe781610e76565b93506020850135610ff781610e76565b9250604085013567ffffffffffffffff80821115611013575f80fd5b818701915087601f830112611026575f80fd5b813581811115611034575f80fd5b886020828501011115611045575f80fd5b95989497505060200194505050565b5f8060408385031215611065575f80fd5b823561107081610e76565b9150602083013561108081610e76565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156110d957815f19048211156110bf576110bf61108b565b808516156110cc57918102915b93841c93908002906110a4565b509250929050565b5f826110ef575060016104c7565b816110fb57505f6104c7565b8160018114611111576002811461111b57611137565b60019150506104c7565b60ff84111561112c5761112c61108b565b50506001821b6104c7565b5060208310610133831016604e8410600b841016171561115a575081810a6104c7565b611164838361109f565b805f19048211156111775761117761108b565b029392505050565b5f610fc260ff8416836110e1565b80820281158282048414176104c7576104c761108b565b600181811c908216806111b857607f821691505b6020821081036111d657634e487b7160e01b5f52602260045260245ffd5b50919050565b6001600160a01b03841681526040602082018190528101829052818360608301375f818301606090810191909152601f909201601f1916010192915050565b5f6020828403121561122b575f80fd5b5051919050565b80518015158114611241575f80fd5b919050565b5f60208284031215611256575f80fd5b610fc282611232565b6040516101e0810167ffffffffffffffff8111828210171561128f57634e487b7160e01b5f52604160045260245ffd5b60405290565b805161124181610e76565b805160048110611241575f80fd5b5f6101e082840312156112bf575f80fd5b6112c761125f565b6112d083611295565b81526112de602084016112a0565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e082015261010080840151818301525061012080840151818301525061014080840151818301525061016080840151818301525061018061135d818501611295565b908201526101a083810151908201526101c061137a818501611232565b908201529392505050565b808201808211156104c7576104c761108b56fea264697066735822122060738b03002327869dbd97fd1a4daebd42488587a3d8622b079e869bbeaeb19e64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x16FD CODESIZE SUB DUP1 PUSH2 0x16FD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x17E JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x1B1BDD1D195C9E551A58DAD95D PUSH1 0x9A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x151A58DAD95D PUSH1 0xD2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x90 DUP3 DUP3 PUSH2 0x263 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE DUP2 PUSH2 0x119 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP4 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x322 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x179 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x190 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x1B4 PUSH1 0x20 DUP6 ADD PUSH2 0x16A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2 PUSH1 0x40 DUP6 ADD PUSH2 0x16A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x211 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25E JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x23C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25B JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x248 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27C PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x290 DUP2 PUSH2 0x28A DUP5 SLOAD PUSH2 0x1DF JUMP JUMPDEST DUP5 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2AC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x31A JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2D2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x30E JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13CE DUP1 PUSH2 0x32F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xB4309A9C GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xB4309A9C EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xC7FF23BB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xD896FC10 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x105 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x6EBD327B EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12C911E EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x6E2A29A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x82921A5 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x154 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x16A SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xF62 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x16A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x264 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x154 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH0 PUSH2 0x33C PUSH1 0x12 PUSH1 0xA PUSH2 0x117F JUMP JUMPDEST PUSH2 0x346 SWAP1 DUP4 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP PUSH2 0x351 DUP2 PUSH2 0x4F0 JUMP JUMPDEST PUSH0 PUSH2 0x35D DUP6 DUP6 DUP6 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x400 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x422 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x45D PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xD7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4C1 DUP2 DUP6 DUP6 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4DA DUP6 DUP3 DUP6 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x4E5 DUP6 DUP6 DUP6 PUSH2 0xB3E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4FA CALLER DUP3 PUSH2 0xB9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x50A PUSH1 0x12 PUSH1 0xA PUSH2 0x117F JUMP JUMPDEST PUSH2 0x514 SWAP1 DUP4 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP PUSH2 0x520 DUP5 DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH0 PUSH2 0x52C DUP7 DUP6 DUP6 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0xA8A JUMP JUMPDEST PUSH2 0x5A8 PUSH0 PUSH2 0xBCF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5B5 DUP3 CALLER DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5BF DUP3 DUP3 PUSH2 0xB9B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4C1 DUP2 DUP6 DUP6 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6E6F20736574206173207461736B PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70D64693 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH4 0xE1AC8D26 SWAP1 PUSH2 0x684 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP PUSH2 0x6DA DUP5 DUP3 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x4D914FBDB28A885441BB0F6E06BB01DFDFE8A8B6902391853B46EB747AE136EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH2 0x735 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x743 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x7BB PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0x4FA DUP2 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8F91CD17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8F91CD17 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9C0 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x627579207469636B6574206E6F20616C6C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63A JUMP JUMPDEST PUSH0 DUP5 DUP3 PUSH2 0x160 ADD MLOAD PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP3 MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x951 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5E7BB33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC5E7BB33 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E64207469636B6574206E6F20616C6C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C42E0C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5C42E0C5 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA79 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0xAC4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC7E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x735 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0x735 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0xAC4 DUP4 DUP4 DUP4 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0x5BF DUP3 PUSH0 DUP4 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0x5BF PUSH0 DUP4 DUP4 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x735 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD7A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xDEA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE06 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE69 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE9C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xEAE DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF05 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF10 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF30 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF3B DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xEAE DUP2 PUSH2 0xE76 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF5B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF75 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xF87 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xF97 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC2 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xFE7 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xFF7 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1013 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1026 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1034 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1045 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1065 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1070 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1080 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x10D9 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BF PUSH2 0x108B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x10CC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x10A4 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10EF JUMPI POP PUSH1 0x1 PUSH2 0x4C7 JUMP JUMPDEST DUP2 PUSH2 0x10FB JUMPI POP PUSH0 PUSH2 0x4C7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1111 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x111B JUMPI PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x112C JUMPI PUSH2 0x112C PUSH2 0x108B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4C7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x115A JUMPI POP DUP2 DUP2 EXP PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x1164 DUP4 DUP4 PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1177 JUMPI PUSH2 0x1177 PUSH2 0x108B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFC2 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x10E1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C7 JUMPI PUSH2 0x4C7 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1241 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1256 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC2 DUP3 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x128F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1241 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x1241 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12C7 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x12D0 DUP4 PUSH2 0x1295 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x12DE PUSH1 0x20 DUP5 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x135D DUP2 DUP6 ADD PUSH2 0x1295 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0x137A DUP2 DUP6 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C7 JUMPI PUSH2 0x4C7 PUSH2 0x108B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x73 DUP12 SUB STOP 0x23 0x27 DUP7 SWAP14 0xBD SWAP8 REVERT BYTE 0x4D 0xAE 0xBD TIMESTAMP BASEFEE DUP6 DUP8 LOG3 0xD8 PUSH3 0x2B079E DUP7 SWAP12 0xBE 0xAE 0xB1 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "515:3481:8:-:0;;;867:400;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1021:10;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1713:1:7;1917:7;:21;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3469:51:12;3442:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1115:15:8::2;:34:::0;;1209;::::2;;-1:-1:-1::0;;;1209:34:8::2;-1:-1:-1::0;;;;1163:32:8;::::2;;-1:-1:-1::0;;;1163:32:8::2;-1:-1:-1::0;;;;;;1163:32:8;;;-1:-1:-1;;;;;1115:34:8;;::::2;1163:32:::0;;;;;;;::::2;1209:34:::0;;;::::2;::::0;;;::::2;::::0;;515:3481;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:164:12:-;90:13;;139;;132:21;122:32;;112:60;;168:1;165;158:12;112:60;14:164;;;:::o;183:448::-;265:6;273;281;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:16;;-1:-1:-1;;;;;421:31:12;;411:42;;401:70;;467:1;464;457:12;401:70;490:5;-1:-1:-1;514:46:12;556:2;541:18;;514:46;:::i;:::-;504:56;;579:46;621:2;610:9;606:18;579:46;:::i;:::-;569:56;;183:448;;;;;:::o;636:127::-;697:10;692:3;688:20;685:1;678:31;728:4;725:1;718:15;752:4;749:1;742:15;768:380;847:1;843:12;;;;890;;;911:61;;965:4;957:6;953:17;943:27;;911:61;1018:2;1010:6;1007:14;987:18;984:38;981:161;;1064:10;1059:3;1055:20;1052:1;1045:31;1099:4;1096:1;1089:15;1127:4;1124:1;1117:15;981:161;;768:380;;;:::o;1279:518::-;1381:2;1376:3;1373:11;1370:421;;;1417:5;1414:1;1407:16;1461:4;1458:1;1448:18;1531:2;1519:10;1515:19;1512:1;1508:27;1502:4;1498:38;1567:4;1555:10;1552:20;1549:47;;;-1:-1:-1;1590:4:12;1549:47;1645:2;1640:3;1636:12;1633:1;1629:20;1623:4;1619:31;1609:41;;1700:81;1718:2;1711:5;1708:13;1700:81;;;1777:1;1763:16;;1744:1;1733:13;1700:81;;;1704:3;;1370:421;1279:518;;;:::o;1973:1345::-;2093:10;;-1:-1:-1;;;;;2115:30:12;;2112:56;;;2148:18;;:::i;:::-;2177:97;2267:6;2227:38;2259:4;2253:11;2227:38;:::i;:::-;2221:4;2177:97;:::i;:::-;2329:4;;2386:2;2375:14;;2403:1;2398:663;;;;3105:1;3122:6;3119:89;;;-1:-1:-1;3174:19:12;;;3168:26;3119:89;-1:-1:-1;;1930:1:12;1926:11;;;1922:24;1918:29;1908:40;1954:1;1950:11;;;1905:57;3221:81;;2368:944;;2398:663;1226:1;1219:14;;;1263:4;1250:18;;-1:-1:-1;;2434:20:12;;;2552:236;2566:7;2563:1;2560:14;2552:236;;;2655:19;;;2649:26;2634:42;;2747:27;;;;2715:1;2703:14;;;;2582:19;;2552:236;;;2556:3;2816:6;2807:7;2804:19;2801:201;;;2877:19;;;2871:26;-1:-1:-1;;2960:1:12;2956:14;;;2972:3;2952:24;2948:37;2944:42;2929:58;2914:74;;2801:201;;;3048:1;3039:6;3036:1;3032:14;3028:22;3022:4;3015:36;2368:944;;;;;1973:1345;;:::o;3323:203::-;515:3481:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2743,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3198,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2971,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2698,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTicket_1282": {
									"entryPoint": 2029,
									"id": 1282,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_639": {
									"entryPoint": 3146,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1036": {
									"entryPoint": null,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1028": {
									"entryPoint": 3104,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 2761,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3023,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2878,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3408,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowBuyTicket_1071": {
									"entryPoint": null,
									"id": 1071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowSendTicket_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1204,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1450,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1264,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTicketFrom_1369": {
									"entryPoint": 1277,
									"id": 1369,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@getTicket_1326": {
									"entryPoint": 815,
									"id": 1326,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mintToken_1192": {
									"entryPoint": 1503,
									"id": 1192,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 965,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@redEnvelopeAddr_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1431,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTask_1137": {
									"entryPoint": 1109,
									"id": 1137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1475,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1229,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1971,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1490,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_1389": {
									"entryPoint": 1851,
									"id": 1389,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_enum_Status_fromMemory": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_RedEnvelope_$1429_memory_ptr_fromMemory": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_addresst_uint256": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4572,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4703,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13086:12",
										"nodeType": "YulBlock",
										"src": "0:13086:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:86:12",
													"nodeType": "YulBlock",
													"src": "59:86:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:12",
																"nodeType": "YulBlock",
																"src": "123:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:12",
																					"nodeType": "YulLiteral",
																					"src": "132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:12",
																					"nodeType": "YulLiteral",
																					"src": "135:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:12"
																			},
																			"nativeSrc": "125:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:12"
																		},
																		"nativeSrc": "125:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "108:3:12",
																										"nodeType": "YulLiteral",
																										"src": "108:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "113:1:12",
																										"nodeType": "YulLiteral",
																										"src": "113:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "104:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:12"
																								},
																								"nativeSrc": "104:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "117:1:12",
																								"nodeType": "YulLiteral",
																								"src": "117:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "100:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:12"
																						},
																						"nativeSrc": "100:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:12"
																				},
																				"nativeSrc": "89:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:12"
																		},
																		"nativeSrc": "79:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:12"
																},
																"nativeSrc": "72:50:12",
																"nodeType": "YulFunctionCall",
																"src": "72:50:12"
															},
															"nativeSrc": "69:70:12",
															"nodeType": "YulIf",
															"src": "69:70:12"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:131:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:12",
														"nodeType": "YulTypedName",
														"src": "48:5:12",
														"type": ""
													}
												],
												"src": "14:131:12"
											},
											{
												"body": {
													"nativeSrc": "254:279:12",
													"nodeType": "YulBlock",
													"src": "254:279:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "300:16:12",
																"nodeType": "YulBlock",
																"src": "300:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "309:1:12",
																					"nodeType": "YulLiteral",
																					"src": "309:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "312:1:12",
																					"nodeType": "YulLiteral",
																					"src": "312:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "302:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:12"
																			},
																			"nativeSrc": "302:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:12"
																		},
																		"nativeSrc": "302:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "275:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "275:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "284:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "284:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "271:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "271:3:12"
																		},
																		"nativeSrc": "271:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "271:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "296:2:12",
																		"nodeType": "YulLiteral",
																		"src": "296:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "267:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "267:3:12"
																},
																"nativeSrc": "267:32:12",
																"nodeType": "YulFunctionCall",
																"src": "267:32:12"
															},
															"nativeSrc": "264:52:12",
															"nodeType": "YulIf",
															"src": "264:52:12"
														},
														{
															"nativeSrc": "325:33:12",
															"nodeType": "YulAssignment",
															"src": "325:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "348:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "348:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "335:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "335:12:12"
																},
																"nativeSrc": "335:23:12",
																"nodeType": "YulFunctionCall",
																"src": "335:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "325:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:12"
																}
															]
														},
														{
															"nativeSrc": "367:45:12",
															"nodeType": "YulVariableDeclaration",
															"src": "367:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "397:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "397:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "408:2:12",
																				"nodeType": "YulLiteral",
																				"src": "408:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "393:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "393:3:12"
																		},
																		"nativeSrc": "393:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "393:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "380:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "380:12:12"
																},
																"nativeSrc": "380:32:12",
																"nodeType": "YulFunctionCall",
																"src": "380:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "371:5:12",
																	"nodeType": "YulTypedName",
																	"src": "371:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "446:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "446:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "421:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "421:24:12"
																},
																"nativeSrc": "421:31:12",
																"nodeType": "YulFunctionCall",
																"src": "421:31:12"
															},
															"nativeSrc": "421:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "421:31:12"
														},
														{
															"nativeSrc": "461:15:12",
															"nodeType": "YulAssignment",
															"src": "461:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "471:5:12",
																"nodeType": "YulIdentifier",
																"src": "471:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "461:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "461:6:12"
																}
															]
														},
														{
															"nativeSrc": "485:42:12",
															"nodeType": "YulAssignment",
															"src": "485:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "512:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "512:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "523:2:12",
																				"nodeType": "YulLiteral",
																				"src": "523:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:12"
																		},
																		"nativeSrc": "508:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "508:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "495:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "495:12:12"
																},
																"nativeSrc": "495:32:12",
																"nodeType": "YulFunctionCall",
																"src": "495:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "485:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nativeSrc": "150:383:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "204:9:12",
														"nodeType": "YulTypedName",
														"src": "204:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "215:7:12",
														"nodeType": "YulTypedName",
														"src": "215:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "227:6:12",
														"nodeType": "YulTypedName",
														"src": "227:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "235:6:12",
														"nodeType": "YulTypedName",
														"src": "235:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "243:6:12",
														"nodeType": "YulTypedName",
														"src": "243:6:12",
														"type": ""
													}
												],
												"src": "150:383:12"
											},
											{
												"body": {
													"nativeSrc": "633:92:12",
													"nodeType": "YulBlock",
													"src": "633:92:12",
													"statements": [
														{
															"nativeSrc": "643:26:12",
															"nodeType": "YulAssignment",
															"src": "643:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "655:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "655:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "666:2:12",
																		"nodeType": "YulLiteral",
																		"src": "666:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "651:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "651:3:12"
																},
																"nativeSrc": "651:18:12",
																"nodeType": "YulFunctionCall",
																"src": "651:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "643:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "643:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "685:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "710:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "710:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "703:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "703:6:12"
																				},
																				"nativeSrc": "703:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "703:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "696:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "696:6:12"
																		},
																		"nativeSrc": "696:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "696:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "678:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:12"
																},
																"nativeSrc": "678:41:12",
																"nodeType": "YulFunctionCall",
																"src": "678:41:12"
															},
															"nativeSrc": "678:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "678:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "538:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "602:9:12",
														"nodeType": "YulTypedName",
														"src": "602:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "613:6:12",
														"nodeType": "YulTypedName",
														"src": "613:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "624:4:12",
														"nodeType": "YulTypedName",
														"src": "624:4:12",
														"type": ""
													}
												],
												"src": "538:187:12"
											},
											{
												"body": {
													"nativeSrc": "851:297:12",
													"nodeType": "YulBlock",
													"src": "851:297:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "868:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "879:2:12",
																		"nodeType": "YulLiteral",
																		"src": "879:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "861:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:12"
																},
																"nativeSrc": "861:21:12",
																"nodeType": "YulFunctionCall",
																"src": "861:21:12"
															},
															"nativeSrc": "861:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "861:21:12"
														},
														{
															"nativeSrc": "891:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "891:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "911:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "911:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "905:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "905:5:12"
																},
																"nativeSrc": "905:13:12",
																"nodeType": "YulFunctionCall",
																"src": "905:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulTypedName",
																	"src": "895:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "938:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "938:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "949:2:12",
																				"nodeType": "YulLiteral",
																				"src": "949:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "934:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "934:3:12"
																		},
																		"nativeSrc": "934:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "934:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "954:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "927:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:12"
																},
																"nativeSrc": "927:34:12",
																"nodeType": "YulFunctionCall",
																"src": "927:34:12"
															},
															"nativeSrc": "927:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "927:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "980:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "980:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "991:2:12",
																				"nodeType": "YulLiteral",
																				"src": "991:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "976:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "976:3:12"
																		},
																		"nativeSrc": "976:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "976:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1000:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1000:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1008:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1008:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "996:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "996:3:12"
																		},
																		"nativeSrc": "996:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "996:15:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1013:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1013:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "970:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "970:5:12"
																},
																"nativeSrc": "970:50:12",
																"nodeType": "YulFunctionCall",
																"src": "970:50:12"
															},
															"nativeSrc": "970:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "970:50:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1044:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1044:9:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1055:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1055:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1040:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1040:3:12"
																				},
																				"nativeSrc": "1040:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1040:22:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1064:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1064:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1036:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:12"
																		},
																		"nativeSrc": "1036:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:31:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1069:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1069:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1029:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1029:6:12"
																},
																"nativeSrc": "1029:42:12",
																"nodeType": "YulFunctionCall",
																"src": "1029:42:12"
															},
															"nativeSrc": "1029:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "1029:42:12"
														},
														{
															"nativeSrc": "1080:62:12",
															"nodeType": "YulAssignment",
															"src": "1080:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1096:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1096:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1115:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "1115:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1123:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1123:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:12"
																						},
																						"nativeSrc": "1111:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1132:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1132:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1128:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1128:3:12"
																						},
																						"nativeSrc": "1128:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1128:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1107:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1107:3:12"
																				},
																				"nativeSrc": "1107:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1107:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1092:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1092:3:12"
																		},
																		"nativeSrc": "1092:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1092:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1139:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1139:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1088:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:12"
																},
																"nativeSrc": "1088:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1088:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1080:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1080:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "730:418:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "820:9:12",
														"nodeType": "YulTypedName",
														"src": "820:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "831:6:12",
														"nodeType": "YulTypedName",
														"src": "831:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "842:4:12",
														"nodeType": "YulTypedName",
														"src": "842:4:12",
														"type": ""
													}
												],
												"src": "730:418:12"
											},
											{
												"body": {
													"nativeSrc": "1240:228:12",
													"nodeType": "YulBlock",
													"src": "1240:228:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1286:16:12",
																"nodeType": "YulBlock",
																"src": "1286:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1295:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1295:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1298:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1298:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1288:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1288:6:12"
																			},
																			"nativeSrc": "1288:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1288:12:12"
																		},
																		"nativeSrc": "1288:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1288:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1261:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1261:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1270:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1270:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1257:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1257:3:12"
																		},
																		"nativeSrc": "1257:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1282:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1282:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1253:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1253:3:12"
																},
																"nativeSrc": "1253:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1253:32:12"
															},
															"nativeSrc": "1250:52:12",
															"nodeType": "YulIf",
															"src": "1250:52:12"
														},
														{
															"nativeSrc": "1311:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1311:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1337:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1337:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1324:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1324:12:12"
																},
																"nativeSrc": "1324:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1324:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1315:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1315:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1381:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1381:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1356:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "1356:24:12"
																},
																"nativeSrc": "1356:31:12",
																"nodeType": "YulFunctionCall",
																"src": "1356:31:12"
															},
															"nativeSrc": "1356:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "1356:31:12"
														},
														{
															"nativeSrc": "1396:15:12",
															"nodeType": "YulAssignment",
															"src": "1396:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1406:5:12",
																"nodeType": "YulIdentifier",
																"src": "1406:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1396:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:12"
																}
															]
														},
														{
															"nativeSrc": "1420:42:12",
															"nodeType": "YulAssignment",
															"src": "1420:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1447:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1447:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1458:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1458:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1443:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1443:3:12"
																		},
																		"nativeSrc": "1443:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1443:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1430:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1430:12:12"
																},
																"nativeSrc": "1430:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1430:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1420:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1153:315:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1198:9:12",
														"nodeType": "YulTypedName",
														"src": "1198:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1209:7:12",
														"nodeType": "YulTypedName",
														"src": "1209:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1221:6:12",
														"nodeType": "YulTypedName",
														"src": "1221:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1229:6:12",
														"nodeType": "YulTypedName",
														"src": "1229:6:12",
														"type": ""
													}
												],
												"src": "1153:315:12"
											},
											{
												"body": {
													"nativeSrc": "1574:76:12",
													"nodeType": "YulBlock",
													"src": "1574:76:12",
													"statements": [
														{
															"nativeSrc": "1584:26:12",
															"nodeType": "YulAssignment",
															"src": "1584:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1596:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1596:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1607:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1592:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:12"
																},
																"nativeSrc": "1592:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1592:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1584:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1584:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1626:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1626:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1637:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1637:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1619:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1619:6:12"
																},
																"nativeSrc": "1619:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1619:25:12"
															},
															"nativeSrc": "1619:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1619:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1473:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1543:9:12",
														"nodeType": "YulTypedName",
														"src": "1543:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1554:6:12",
														"nodeType": "YulTypedName",
														"src": "1554:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1565:4:12",
														"nodeType": "YulTypedName",
														"src": "1565:4:12",
														"type": ""
													}
												],
												"src": "1473:177:12"
											},
											{
												"body": {
													"nativeSrc": "1759:352:12",
													"nodeType": "YulBlock",
													"src": "1759:352:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1805:16:12",
																"nodeType": "YulBlock",
																"src": "1805:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1814:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1814:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1817:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1817:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1807:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1807:6:12"
																			},
																			"nativeSrc": "1807:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1807:12:12"
																		},
																		"nativeSrc": "1807:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1807:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1780:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1780:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1789:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1789:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1776:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:12"
																		},
																		"nativeSrc": "1776:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1801:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1801:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:32:12"
															},
															"nativeSrc": "1769:52:12",
															"nodeType": "YulIf",
															"src": "1769:52:12"
														},
														{
															"nativeSrc": "1830:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1830:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1856:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1856:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1843:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1843:12:12"
																},
																"nativeSrc": "1843:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1843:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1834:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1834:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1900:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1900:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1875:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "1875:24:12"
																},
																"nativeSrc": "1875:31:12",
																"nodeType": "YulFunctionCall",
																"src": "1875:31:12"
															},
															"nativeSrc": "1875:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "1875:31:12"
														},
														{
															"nativeSrc": "1915:15:12",
															"nodeType": "YulAssignment",
															"src": "1915:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1925:5:12",
																"nodeType": "YulIdentifier",
																"src": "1925:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1915:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1915:6:12"
																}
															]
														},
														{
															"nativeSrc": "1939:47:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1939:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1971:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1971:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1982:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1982:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1967:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:12"
																		},
																		"nativeSrc": "1967:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1954:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1954:12:12"
																},
																"nativeSrc": "1954:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1954:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1943:7:12",
																	"nodeType": "YulTypedName",
																	"src": "1943:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2020:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2020:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1995:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "1995:24:12"
																},
																"nativeSrc": "1995:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1995:33:12"
															},
															"nativeSrc": "1995:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1995:33:12"
														},
														{
															"nativeSrc": "2037:17:12",
															"nodeType": "YulAssignment",
															"src": "2037:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "2047:7:12",
																"nodeType": "YulIdentifier",
																"src": "2047:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2037:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2037:6:12"
																}
															]
														},
														{
															"nativeSrc": "2063:42:12",
															"nodeType": "YulAssignment",
															"src": "2063:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2090:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2090:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2101:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2101:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2086:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2086:3:12"
																		},
																		"nativeSrc": "2086:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2086:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2073:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2073:12:12"
																},
																"nativeSrc": "2073:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2073:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2063:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2063:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1655:456:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1709:9:12",
														"nodeType": "YulTypedName",
														"src": "1709:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1720:7:12",
														"nodeType": "YulTypedName",
														"src": "1720:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1732:6:12",
														"nodeType": "YulTypedName",
														"src": "1732:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1740:6:12",
														"nodeType": "YulTypedName",
														"src": "1740:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1748:6:12",
														"nodeType": "YulTypedName",
														"src": "1748:6:12",
														"type": ""
													}
												],
												"src": "1655:456:12"
											},
											{
												"body": {
													"nativeSrc": "2213:87:12",
													"nodeType": "YulBlock",
													"src": "2213:87:12",
													"statements": [
														{
															"nativeSrc": "2223:26:12",
															"nodeType": "YulAssignment",
															"src": "2223:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2235:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2235:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2246:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2231:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2231:3:12"
																},
																"nativeSrc": "2231:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2231:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2223:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2223:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2265:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2265:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2280:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2280:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2288:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2288:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2276:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:12"
																		},
																		"nativeSrc": "2276:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2258:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:12"
																},
																"nativeSrc": "2258:36:12",
																"nodeType": "YulFunctionCall",
																"src": "2258:36:12"
															},
															"nativeSrc": "2258:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "2258:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2116:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2182:9:12",
														"nodeType": "YulTypedName",
														"src": "2182:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2193:6:12",
														"nodeType": "YulTypedName",
														"src": "2193:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2204:4:12",
														"nodeType": "YulTypedName",
														"src": "2204:4:12",
														"type": ""
													}
												],
												"src": "2116:184:12"
											},
											{
												"body": {
													"nativeSrc": "2375:110:12",
													"nodeType": "YulBlock",
													"src": "2375:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2421:16:12",
																"nodeType": "YulBlock",
																"src": "2421:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2430:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2430:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2433:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2433:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2423:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2423:6:12"
																			},
																			"nativeSrc": "2423:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2423:12:12"
																		},
																		"nativeSrc": "2423:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2423:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2396:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2396:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2405:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2405:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2392:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2392:3:12"
																		},
																		"nativeSrc": "2392:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2417:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2417:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2388:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2388:3:12"
																},
																"nativeSrc": "2388:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2388:32:12"
															},
															"nativeSrc": "2385:52:12",
															"nodeType": "YulIf",
															"src": "2385:52:12"
														},
														{
															"nativeSrc": "2446:33:12",
															"nodeType": "YulAssignment",
															"src": "2446:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2469:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2469:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2456:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2456:12:12"
																},
																"nativeSrc": "2456:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2456:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2446:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2305:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2341:9:12",
														"nodeType": "YulTypedName",
														"src": "2341:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2352:7:12",
														"nodeType": "YulTypedName",
														"src": "2352:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2364:6:12",
														"nodeType": "YulTypedName",
														"src": "2364:6:12",
														"type": ""
													}
												],
												"src": "2305:180:12"
											},
											{
												"body": {
													"nativeSrc": "2611:404:12",
													"nodeType": "YulBlock",
													"src": "2611:404:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2658:16:12",
																"nodeType": "YulBlock",
																"src": "2658:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2667:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2667:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2670:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2670:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2660:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2660:6:12"
																			},
																			"nativeSrc": "2660:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2660:12:12"
																		},
																		"nativeSrc": "2660:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2660:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2632:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2632:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2641:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2641:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2628:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2628:3:12"
																		},
																		"nativeSrc": "2628:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2628:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2653:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2653:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2624:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2624:3:12"
																},
																"nativeSrc": "2624:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2624:33:12"
															},
															"nativeSrc": "2621:53:12",
															"nodeType": "YulIf",
															"src": "2621:53:12"
														},
														{
															"nativeSrc": "2683:33:12",
															"nodeType": "YulAssignment",
															"src": "2683:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2706:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2706:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2693:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2693:12:12"
																},
																"nativeSrc": "2693:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2693:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2683:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2683:6:12"
																}
															]
														},
														{
															"nativeSrc": "2725:45:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2725:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2755:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2766:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2766:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2751:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2751:3:12"
																		},
																		"nativeSrc": "2751:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2751:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2738:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2738:12:12"
																},
																"nativeSrc": "2738:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2738:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2729:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2729:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2804:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2804:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2779:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "2779:24:12"
																},
																"nativeSrc": "2779:31:12",
																"nodeType": "YulFunctionCall",
																"src": "2779:31:12"
															},
															"nativeSrc": "2779:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "2779:31:12"
														},
														{
															"nativeSrc": "2819:15:12",
															"nodeType": "YulAssignment",
															"src": "2819:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:12",
																"nodeType": "YulIdentifier",
																"src": "2829:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2819:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:12"
																}
															]
														},
														{
															"nativeSrc": "2843:47:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2843:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2875:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2875:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2886:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2886:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2871:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2871:3:12"
																		},
																		"nativeSrc": "2871:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2871:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2858:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2858:12:12"
																},
																"nativeSrc": "2858:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2858:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2847:7:12",
																	"nodeType": "YulTypedName",
																	"src": "2847:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2924:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2924:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2899:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "2899:24:12"
																},
																"nativeSrc": "2899:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2899:33:12"
															},
															"nativeSrc": "2899:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2899:33:12"
														},
														{
															"nativeSrc": "2941:17:12",
															"nodeType": "YulAssignment",
															"src": "2941:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "2951:7:12",
																"nodeType": "YulIdentifier",
																"src": "2951:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2941:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:12"
																}
															]
														},
														{
															"nativeSrc": "2967:42:12",
															"nodeType": "YulAssignment",
															"src": "2967:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3005:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:12"
																		},
																		"nativeSrc": "2990:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2977:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2977:12:12"
																},
																"nativeSrc": "2977:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2977:32:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2967:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2967:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_addresst_uint256",
												"nativeSrc": "2490:525:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2553:9:12",
														"nodeType": "YulTypedName",
														"src": "2553:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2564:7:12",
														"nodeType": "YulTypedName",
														"src": "2564:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2576:6:12",
														"nodeType": "YulTypedName",
														"src": "2576:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2584:6:12",
														"nodeType": "YulTypedName",
														"src": "2584:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2592:6:12",
														"nodeType": "YulTypedName",
														"src": "2592:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2600:6:12",
														"nodeType": "YulTypedName",
														"src": "2600:6:12",
														"type": ""
													}
												],
												"src": "2490:525:12"
											},
											{
												"body": {
													"nativeSrc": "3090:177:12",
													"nodeType": "YulBlock",
													"src": "3090:177:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3136:16:12",
																"nodeType": "YulBlock",
																"src": "3136:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3145:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3145:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3148:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3148:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3138:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3138:6:12"
																			},
																			"nativeSrc": "3138:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3138:12:12"
																		},
																		"nativeSrc": "3138:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3138:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3111:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3111:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3120:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3120:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3107:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3107:3:12"
																		},
																		"nativeSrc": "3107:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3107:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3103:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3103:3:12"
																},
																"nativeSrc": "3103:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3103:32:12"
															},
															"nativeSrc": "3100:52:12",
															"nodeType": "YulIf",
															"src": "3100:52:12"
														},
														{
															"nativeSrc": "3161:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3161:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3187:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3187:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3174:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3174:12:12"
																},
																"nativeSrc": "3174:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3174:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3165:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3165:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3231:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3231:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3206:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "3206:24:12"
																},
																"nativeSrc": "3206:31:12",
																"nodeType": "YulFunctionCall",
																"src": "3206:31:12"
															},
															"nativeSrc": "3206:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "3206:31:12"
														},
														{
															"nativeSrc": "3246:15:12",
															"nodeType": "YulAssignment",
															"src": "3246:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3256:5:12",
																"nodeType": "YulIdentifier",
																"src": "3256:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3020:247:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3056:9:12",
														"nodeType": "YulTypedName",
														"src": "3056:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3067:7:12",
														"nodeType": "YulTypedName",
														"src": "3067:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3079:6:12",
														"nodeType": "YulTypedName",
														"src": "3079:6:12",
														"type": ""
													}
												],
												"src": "3020:247:12"
											},
											{
												"body": {
													"nativeSrc": "3373:102:12",
													"nodeType": "YulBlock",
													"src": "3373:102:12",
													"statements": [
														{
															"nativeSrc": "3383:26:12",
															"nodeType": "YulAssignment",
															"src": "3383:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3395:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3395:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3406:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3406:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3391:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3391:3:12"
																},
																"nativeSrc": "3391:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3391:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3383:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3383:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3425:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3440:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3440:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3456:3:12",
																								"nodeType": "YulLiteral",
																								"src": "3456:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3461:1:12",
																								"nodeType": "YulLiteral",
																								"src": "3461:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3452:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3452:3:12"
																						},
																						"nativeSrc": "3452:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3452:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3465:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3465:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3448:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3448:3:12"
																				},
																				"nativeSrc": "3448:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3448:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3436:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:3:12"
																		},
																		"nativeSrc": "3436:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3418:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3418:6:12"
																},
																"nativeSrc": "3418:51:12",
																"nodeType": "YulFunctionCall",
																"src": "3418:51:12"
															},
															"nativeSrc": "3418:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "3418:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3272:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3342:9:12",
														"nodeType": "YulTypedName",
														"src": "3342:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3353:6:12",
														"nodeType": "YulTypedName",
														"src": "3353:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3364:4:12",
														"nodeType": "YulTypedName",
														"src": "3364:4:12",
														"type": ""
													}
												],
												"src": "3272:203:12"
											},
											{
												"body": {
													"nativeSrc": "3603:744:12",
													"nodeType": "YulBlock",
													"src": "3603:744:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3649:16:12",
																"nodeType": "YulBlock",
																"src": "3649:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3658:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3658:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3661:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3661:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3651:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3651:6:12"
																			},
																			"nativeSrc": "3651:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3651:12:12"
																		},
																		"nativeSrc": "3651:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3651:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3624:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3633:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3620:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3620:3:12"
																		},
																		"nativeSrc": "3620:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3620:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3645:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3616:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:12"
																},
																"nativeSrc": "3616:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3616:32:12"
															},
															"nativeSrc": "3613:52:12",
															"nodeType": "YulIf",
															"src": "3613:52:12"
														},
														{
															"nativeSrc": "3674:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3674:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3700:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3687:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3687:12:12"
																},
																"nativeSrc": "3687:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3687:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3678:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3678:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3744:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3744:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3719:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "3719:24:12"
																},
																"nativeSrc": "3719:31:12",
																"nodeType": "YulFunctionCall",
																"src": "3719:31:12"
															},
															"nativeSrc": "3719:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "3719:31:12"
														},
														{
															"nativeSrc": "3759:15:12",
															"nodeType": "YulAssignment",
															"src": "3759:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3769:5:12",
																"nodeType": "YulIdentifier",
																"src": "3769:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:12"
																}
															]
														},
														{
															"nativeSrc": "3783:47:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3783:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3815:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3815:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3826:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3826:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3811:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3811:3:12"
																		},
																		"nativeSrc": "3811:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3811:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3798:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3798:12:12"
																},
																"nativeSrc": "3798:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3798:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3787:7:12",
																	"nodeType": "YulTypedName",
																	"src": "3787:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3864:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3864:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3839:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "3839:24:12"
																},
																"nativeSrc": "3839:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3839:33:12"
															},
															"nativeSrc": "3839:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3839:33:12"
														},
														{
															"nativeSrc": "3881:17:12",
															"nodeType": "YulAssignment",
															"src": "3881:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "3891:7:12",
																"nodeType": "YulIdentifier",
																"src": "3891:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3881:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:12"
																}
															]
														},
														{
															"nativeSrc": "3907:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3907:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3938:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3938:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3949:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3949:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3934:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:12"
																		},
																		"nativeSrc": "3934:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3934:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3921:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3921:12:12"
																},
																"nativeSrc": "3921:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3921:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3911:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3911:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3962:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3962:28:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3972:18:12",
																"nodeType": "YulLiteral",
																"src": "3972:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3966:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3966:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4017:16:12",
																"nodeType": "YulBlock",
																"src": "4017:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4026:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4026:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4029:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4029:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4019:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4019:6:12"
																			},
																			"nativeSrc": "4019:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4019:12:12"
																		},
																		"nativeSrc": "4019:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4019:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4005:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4005:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4013:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4013:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4002:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4002:2:12"
																},
																"nativeSrc": "4002:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4002:14:12"
															},
															"nativeSrc": "3999:34:12",
															"nodeType": "YulIf",
															"src": "3999:34:12"
														},
														{
															"nativeSrc": "4042:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4042:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4056:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4056:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4067:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4067:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4052:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4052:3:12"
																},
																"nativeSrc": "4052:22:12",
																"nodeType": "YulFunctionCall",
																"src": "4052:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4046:2:12",
																	"nodeType": "YulTypedName",
																	"src": "4046:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4122:16:12",
																"nodeType": "YulBlock",
																"src": "4122:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4131:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4131:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4134:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4134:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4124:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4124:6:12"
																			},
																			"nativeSrc": "4124:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4124:12:12"
																		},
																		"nativeSrc": "4124:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4124:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4101:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4101:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4105:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4105:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4097:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4097:3:12"
																				},
																				"nativeSrc": "4097:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4097:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4112:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4112:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4093:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4093:3:12"
																		},
																		"nativeSrc": "4093:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:12"
																},
																"nativeSrc": "4086:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4086:35:12"
															},
															"nativeSrc": "4083:55:12",
															"nodeType": "YulIf",
															"src": "4083:55:12"
														},
														{
															"nativeSrc": "4147:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4147:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4174:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4174:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4161:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4161:12:12"
																},
																"nativeSrc": "4161:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4161:16:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4151:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4151:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4204:16:12",
																"nodeType": "YulBlock",
																"src": "4204:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4213:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4213:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4216:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4216:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4206:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4206:6:12"
																			},
																			"nativeSrc": "4206:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4206:12:12"
																		},
																		"nativeSrc": "4206:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4206:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4192:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4192:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4200:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4200:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4189:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4189:2:12"
																},
																"nativeSrc": "4189:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4189:14:12"
															},
															"nativeSrc": "4186:34:12",
															"nodeType": "YulIf",
															"src": "4186:34:12"
														},
														{
															"body": {
																"nativeSrc": "4270:16:12",
																"nodeType": "YulBlock",
																"src": "4270:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4279:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4279:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4282:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4282:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4272:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4272:6:12"
																			},
																			"nativeSrc": "4272:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4272:12:12"
																		},
																		"nativeSrc": "4272:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4272:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4243:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4243:2:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4247:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4247:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4239:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4239:3:12"
																				},
																				"nativeSrc": "4239:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4239:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4256:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4256:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4235:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4235:3:12"
																		},
																		"nativeSrc": "4235:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4235:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4261:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4261:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4232:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4232:2:12"
																},
																"nativeSrc": "4232:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4232:37:12"
															},
															"nativeSrc": "4229:57:12",
															"nodeType": "YulIf",
															"src": "4229:57:12"
														},
														{
															"nativeSrc": "4295:21:12",
															"nodeType": "YulAssignment",
															"src": "4295:21:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4309:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4309:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4313:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4313:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4305:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4305:3:12"
																},
																"nativeSrc": "4305:11:12",
																"nodeType": "YulFunctionCall",
																"src": "4305:11:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:12"
																}
															]
														},
														{
															"nativeSrc": "4325:16:12",
															"nodeType": "YulAssignment",
															"src": "4325:16:12",
															"value": {
																"name": "length",
																"nativeSrc": "4335:6:12",
																"nodeType": "YulIdentifier",
																"src": "4335:6:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4325:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr",
												"nativeSrc": "3480:867:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3545:9:12",
														"nodeType": "YulTypedName",
														"src": "3545:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3556:7:12",
														"nodeType": "YulTypedName",
														"src": "3556:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3568:6:12",
														"nodeType": "YulTypedName",
														"src": "3568:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3576:6:12",
														"nodeType": "YulTypedName",
														"src": "3576:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3584:6:12",
														"nodeType": "YulTypedName",
														"src": "3584:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3592:6:12",
														"nodeType": "YulTypedName",
														"src": "3592:6:12",
														"type": ""
													}
												],
												"src": "3480:867:12"
											},
											{
												"body": {
													"nativeSrc": "4439:301:12",
													"nodeType": "YulBlock",
													"src": "4439:301:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4485:16:12",
																"nodeType": "YulBlock",
																"src": "4485:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4494:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4494:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4497:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4497:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4487:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4487:6:12"
																			},
																			"nativeSrc": "4487:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4487:12:12"
																		},
																		"nativeSrc": "4487:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4487:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4460:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4460:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4469:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4469:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4456:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4456:3:12"
																		},
																		"nativeSrc": "4456:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4456:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4481:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4481:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4452:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4452:3:12"
																},
																"nativeSrc": "4452:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4452:32:12"
															},
															"nativeSrc": "4449:52:12",
															"nodeType": "YulIf",
															"src": "4449:52:12"
														},
														{
															"nativeSrc": "4510:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4510:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4523:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4523:12:12"
																},
																"nativeSrc": "4523:23:12",
																"nodeType": "YulFunctionCall",
																"src": "4523:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4514:5:12",
																	"nodeType": "YulTypedName",
																	"src": "4514:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4580:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4580:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4555:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "4555:24:12"
																},
																"nativeSrc": "4555:31:12",
																"nodeType": "YulFunctionCall",
																"src": "4555:31:12"
															},
															"nativeSrc": "4555:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "4555:31:12"
														},
														{
															"nativeSrc": "4595:15:12",
															"nodeType": "YulAssignment",
															"src": "4595:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "4605:5:12",
																"nodeType": "YulIdentifier",
																"src": "4605:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4595:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:12"
																}
															]
														},
														{
															"nativeSrc": "4619:47:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4619:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4651:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4651:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4662:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4662:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4647:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4647:3:12"
																		},
																		"nativeSrc": "4647:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4647:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4634:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4634:12:12"
																},
																"nativeSrc": "4634:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4634:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4623:7:12",
																	"nodeType": "YulTypedName",
																	"src": "4623:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4700:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4700:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4675:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "4675:24:12"
																},
																"nativeSrc": "4675:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4675:33:12"
															},
															"nativeSrc": "4675:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4675:33:12"
														},
														{
															"nativeSrc": "4717:17:12",
															"nodeType": "YulAssignment",
															"src": "4717:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "4727:7:12",
																"nodeType": "YulIdentifier",
																"src": "4727:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4717:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4352:388:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:12",
														"nodeType": "YulTypedName",
														"src": "4397:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4408:7:12",
														"nodeType": "YulTypedName",
														"src": "4408:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4420:6:12",
														"nodeType": "YulTypedName",
														"src": "4420:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4428:6:12",
														"nodeType": "YulTypedName",
														"src": "4428:6:12",
														"type": ""
													}
												],
												"src": "4352:388:12"
											},
											{
												"body": {
													"nativeSrc": "4777:95:12",
													"nodeType": "YulBlock",
													"src": "4777:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4794:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4794:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4801:3:12",
																				"nodeType": "YulLiteral",
																				"src": "4801:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4806:10:12",
																				"nodeType": "YulLiteral",
																				"src": "4806:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4797:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4797:3:12"
																		},
																		"nativeSrc": "4797:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4797:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4787:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:12"
																},
																"nativeSrc": "4787:31:12",
																"nodeType": "YulFunctionCall",
																"src": "4787:31:12"
															},
															"nativeSrc": "4787:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "4787:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4834:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4834:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4837:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4837:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4827:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:12"
																},
																"nativeSrc": "4827:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4827:15:12"
															},
															"nativeSrc": "4827:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4827:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4858:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4858:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4861:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4861:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4851:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:12"
																},
																"nativeSrc": "4851:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4851:15:12"
															},
															"nativeSrc": "4851:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4851:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4745:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4745:127:12"
											},
											{
												"body": {
													"nativeSrc": "4941:352:12",
													"nodeType": "YulBlock",
													"src": "4941:352:12",
													"statements": [
														{
															"nativeSrc": "4951:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4951:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4966:1:12",
																"nodeType": "YulLiteral",
																"src": "4966:1:12",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4955:7:12",
																	"nodeType": "YulTypedName",
																	"src": "4955:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4976:10:12",
															"nodeType": "YulAssignment",
															"src": "4976:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4985:1:12",
																"nodeType": "YulLiteral",
																"src": "4985:1:12",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4976:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4976:5:12"
																}
															]
														},
														{
															"nativeSrc": "4995:13:12",
															"nodeType": "YulAssignment",
															"src": "4995:13:12",
															"value": {
																"name": "_base",
																"nativeSrc": "5003:5:12",
																"nodeType": "YulIdentifier",
																"src": "5003:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4995:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4995:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5059:228:12",
																"nodeType": "YulBlock",
																"src": "5059:228:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5104:22:12",
																			"nodeType": "YulBlock",
																			"src": "5104:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5106:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "5106:16:12"
																						},
																						"nativeSrc": "5106:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5106:18:12"
																					},
																					"nativeSrc": "5106:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "5106:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5079:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "5079:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5093:1:12",
																									"nodeType": "YulLiteral",
																									"src": "5093:1:12",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5089:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "5089:3:12"
																							},
																							"nativeSrc": "5089:6:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5089:6:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5097:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5097:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5085:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5085:3:12"
																					},
																					"nativeSrc": "5085:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5085:17:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5076:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "5076:2:12"
																			},
																			"nativeSrc": "5076:27:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5076:27:12"
																		},
																		"nativeSrc": "5073:53:12",
																		"nodeType": "YulIf",
																		"src": "5073:53:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "5165:29:12",
																			"nodeType": "YulBlock",
																			"src": "5165:29:12",
																			"statements": [
																				{
																					"nativeSrc": "5167:25:12",
																					"nodeType": "YulAssignment",
																					"src": "5167:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "5180:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "5180:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "5187:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "5187:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "5176:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5176:3:12"
																						},
																						"nativeSrc": "5176:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5176:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "5167:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "5167:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5146:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "5146:8:12"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "5156:7:12",
																					"nodeType": "YulIdentifier",
																					"src": "5156:7:12"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5142:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5142:3:12"
																			},
																			"nativeSrc": "5142:22:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5142:22:12"
																		},
																		"nativeSrc": "5139:55:12",
																		"nodeType": "YulIf",
																		"src": "5139:55:12"
																	},
																	{
																		"nativeSrc": "5207:23:12",
																		"nodeType": "YulAssignment",
																		"src": "5207:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5219:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "5219:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "5225:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "5225:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "5215:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5215:3:12"
																			},
																			"nativeSrc": "5215:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5215:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "5207:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5207:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5243:34:12",
																		"nodeType": "YulAssignment",
																		"src": "5243:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "5259:7:12",
																					"nodeType": "YulIdentifier",
																					"src": "5259:7:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5268:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "5268:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "5255:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5255:3:12"
																			},
																			"nativeSrc": "5255:22:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5255:22:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5243:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "5243:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5028:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5028:8:12"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "5038:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "5038:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5025:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5025:2:12"
																},
																"nativeSrc": "5025:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5025:21:12"
															},
															"nativeSrc": "5017:270:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5047:3:12",
																"nodeType": "YulBlock",
																"src": "5047:3:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5021:3:12",
																"nodeType": "YulBlock",
																"src": "5021:3:12",
																"statements": []
															},
															"src": "5017:270:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4877:416:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "4905:5:12",
														"nodeType": "YulTypedName",
														"src": "4905:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4912:8:12",
														"nodeType": "YulTypedName",
														"src": "4912:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4925:5:12",
														"nodeType": "YulTypedName",
														"src": "4925:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4932:4:12",
														"nodeType": "YulTypedName",
														"src": "4932:4:12",
														"type": ""
													}
												],
												"src": "4877:416:12"
											},
											{
												"body": {
													"nativeSrc": "5357:747:12",
													"nodeType": "YulBlock",
													"src": "5357:747:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5395:52:12",
																"nodeType": "YulBlock",
																"src": "5395:52:12",
																"statements": [
																	{
																		"nativeSrc": "5409:10:12",
																		"nodeType": "YulAssignment",
																		"src": "5409:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5418:1:12",
																			"nodeType": "YulLiteral",
																			"src": "5418:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5409:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5409:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5432:5:12",
																		"nodeType": "YulLeave",
																		"src": "5432:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5377:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5377:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5370:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:12"
																},
																"nativeSrc": "5370:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5370:16:12"
															},
															"nativeSrc": "5367:80:12",
															"nodeType": "YulIf",
															"src": "5367:80:12"
														},
														{
															"body": {
																"nativeSrc": "5480:52:12",
																"nodeType": "YulBlock",
																"src": "5480:52:12",
																"statements": [
																	{
																		"nativeSrc": "5494:10:12",
																		"nodeType": "YulAssignment",
																		"src": "5494:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5503:1:12",
																			"nodeType": "YulLiteral",
																			"src": "5503:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5494:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5494:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5517:5:12",
																		"nodeType": "YulLeave",
																		"src": "5517:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5466:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5466:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5459:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:12"
																},
																"nativeSrc": "5459:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5459:12:12"
															},
															"nativeSrc": "5456:76:12",
															"nodeType": "YulIf",
															"src": "5456:76:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5568:52:12",
																		"nodeType": "YulBlock",
																		"src": "5568:52:12",
																		"statements": [
																			{
																				"nativeSrc": "5582:10:12",
																				"nodeType": "YulAssignment",
																				"src": "5582:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5591:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5591:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5582:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5605:5:12",
																				"nodeType": "YulLeave",
																				"src": "5605:5:12"
																			}
																		]
																	},
																	"nativeSrc": "5561:59:12",
																	"nodeType": "YulCase",
																	"src": "5561:59:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5566:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5566:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5636:123:12",
																		"nodeType": "YulBlock",
																		"src": "5636:123:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "5671:22:12",
																					"nodeType": "YulBlock",
																					"src": "5671:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "5673:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "5673:16:12"
																								},
																								"nativeSrc": "5673:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5673:18:12"
																							},
																							"nativeSrc": "5673:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "5673:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "5656:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "5656:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5666:3:12",
																							"nodeType": "YulLiteral",
																							"src": "5666:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "5653:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5653:2:12"
																					},
																					"nativeSrc": "5653:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5653:17:12"
																				},
																				"nativeSrc": "5650:43:12",
																				"nodeType": "YulIf",
																				"src": "5650:43:12"
																			},
																			{
																				"nativeSrc": "5706:25:12",
																				"nodeType": "YulAssignment",
																				"src": "5706:25:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "5719:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "5719:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5729:1:12",
																							"nodeType": "YulLiteral",
																							"src": "5729:1:12",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5715:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5715:3:12"
																					},
																					"nativeSrc": "5715:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5715:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5706:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5706:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5744:5:12",
																				"nodeType": "YulLeave",
																				"src": "5744:5:12"
																			}
																		]
																	},
																	"nativeSrc": "5629:130:12",
																	"nodeType": "YulCase",
																	"src": "5629:130:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5634:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5634:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "5548:4:12",
																"nodeType": "YulIdentifier",
																"src": "5548:4:12"
															},
															"nativeSrc": "5541:218:12",
															"nodeType": "YulSwitch",
															"src": "5541:218:12"
														},
														{
															"body": {
																"nativeSrc": "5857:70:12",
																"nodeType": "YulBlock",
																"src": "5857:70:12",
																"statements": [
																	{
																		"nativeSrc": "5871:28:12",
																		"nodeType": "YulAssignment",
																		"src": "5871:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5884:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "5884:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5890:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "5890:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "5880:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:12"
																			},
																			"nativeSrc": "5880:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5880:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5871:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5871:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5912:5:12",
																		"nodeType": "YulLeave",
																		"src": "5912:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5781:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "5781:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5787:2:12",
																						"nodeType": "YulLiteral",
																						"src": "5787:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5778:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5778:2:12"
																				},
																				"nativeSrc": "5778:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5778:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5795:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "5795:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5805:2:12",
																						"nodeType": "YulLiteral",
																						"src": "5805:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5792:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5792:2:12"
																				},
																				"nativeSrc": "5792:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5792:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5774:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5774:3:12"
																		},
																		"nativeSrc": "5774:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5818:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "5818:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5824:3:12",
																						"nodeType": "YulLiteral",
																						"src": "5824:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5815:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5815:2:12"
																				},
																				"nativeSrc": "5815:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5815:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5833:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "5833:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5843:2:12",
																						"nodeType": "YulLiteral",
																						"src": "5843:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5830:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5830:2:12"
																				},
																				"nativeSrc": "5830:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5830:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5811:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5811:3:12"
																		},
																		"nativeSrc": "5811:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5811:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5771:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5771:2:12"
																},
																"nativeSrc": "5771:77:12",
																"nodeType": "YulFunctionCall",
																"src": "5771:77:12"
															},
															"nativeSrc": "5768:159:12",
															"nodeType": "YulIf",
															"src": "5768:159:12"
														},
														{
															"nativeSrc": "5936:57:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5936:57:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5978:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5978:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5984:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5984:8:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "5959:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5959:18:12"
																},
																"nativeSrc": "5959:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5959:34:12"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "5940:7:12",
																	"nodeType": "YulTypedName",
																	"src": "5940:7:12",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "5949:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5949:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6038:22:12",
																"nodeType": "YulBlock",
																"src": "6038:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6040:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6040:16:12"
																			},
																			"nativeSrc": "6040:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6040:18:12"
																		},
																		"nativeSrc": "6040:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6040:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6008:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "6008:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6025:1:12",
																						"nodeType": "YulLiteral",
																						"src": "6025:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6021:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6021:3:12"
																				},
																				"nativeSrc": "6021:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6021:6:12"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "6029:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6029:6:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6017:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6017:3:12"
																		},
																		"nativeSrc": "6017:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6017:19:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6005:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6005:2:12"
																},
																"nativeSrc": "6005:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6005:32:12"
															},
															"nativeSrc": "6002:58:12",
															"nodeType": "YulIf",
															"src": "6002:58:12"
														},
														{
															"nativeSrc": "6069:29:12",
															"nodeType": "YulAssignment",
															"src": "6069:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6082:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "6082:7:12"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "6091:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6091:6:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6078:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:12"
																},
																"nativeSrc": "6078:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6078:20:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6069:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6069:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "5298:806:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5328:4:12",
														"nodeType": "YulTypedName",
														"src": "5328:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5334:8:12",
														"nodeType": "YulTypedName",
														"src": "5334:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5347:5:12",
														"nodeType": "YulTypedName",
														"src": "5347:5:12",
														"type": ""
													}
												],
												"src": "5298:806:12"
											},
											{
												"body": {
													"nativeSrc": "6177:72:12",
													"nodeType": "YulBlock",
													"src": "6177:72:12",
													"statements": [
														{
															"nativeSrc": "6187:56:12",
															"nodeType": "YulAssignment",
															"src": "6187:56:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6217:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6217:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6227:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "6227:8:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6237:4:12",
																				"nodeType": "YulLiteral",
																				"src": "6237:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6223:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6223:3:12"
																		},
																		"nativeSrc": "6223:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6223:19:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "6196:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "6196:20:12"
																},
																"nativeSrc": "6196:47:12",
																"nodeType": "YulFunctionCall",
																"src": "6196:47:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6187:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6187:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "6109:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6148:4:12",
														"nodeType": "YulTypedName",
														"src": "6148:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6154:8:12",
														"nodeType": "YulTypedName",
														"src": "6154:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6167:5:12",
														"nodeType": "YulTypedName",
														"src": "6167:5:12",
														"type": ""
													}
												],
												"src": "6109:140:12"
											},
											{
												"body": {
													"nativeSrc": "6306:116:12",
													"nodeType": "YulBlock",
													"src": "6306:116:12",
													"statements": [
														{
															"nativeSrc": "6316:20:12",
															"nodeType": "YulAssignment",
															"src": "6316:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6331:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6331:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6334:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6334:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6327:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6327:3:12"
																},
																"nativeSrc": "6327:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6327:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6316:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6316:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6394:22:12",
																"nodeType": "YulBlock",
																"src": "6394:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6396:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6396:16:12"
																			},
																			"nativeSrc": "6396:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6396:18:12"
																		},
																		"nativeSrc": "6396:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6396:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6365:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "6365:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6358:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "6358:6:12"
																				},
																				"nativeSrc": "6358:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6358:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6372:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "6372:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6379:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "6379:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6388:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "6388:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6375:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6375:3:12"
																						},
																						"nativeSrc": "6375:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6375:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6369:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "6369:2:12"
																				},
																				"nativeSrc": "6369:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6369:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6355:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:12"
																		},
																		"nativeSrc": "6355:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6348:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:12"
																},
																"nativeSrc": "6348:45:12",
																"nodeType": "YulFunctionCall",
																"src": "6348:45:12"
															},
															"nativeSrc": "6345:71:12",
															"nodeType": "YulIf",
															"src": "6345:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6254:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6285:1:12",
														"nodeType": "YulTypedName",
														"src": "6285:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6288:1:12",
														"nodeType": "YulTypedName",
														"src": "6288:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6294:7:12",
														"nodeType": "YulTypedName",
														"src": "6294:7:12",
														"type": ""
													}
												],
												"src": "6254:168:12"
											},
											{
												"body": {
													"nativeSrc": "6662:366:12",
													"nodeType": "YulBlock",
													"src": "6662:366:12",
													"statements": [
														{
															"nativeSrc": "6672:27:12",
															"nodeType": "YulAssignment",
															"src": "6672:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6684:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6684:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6695:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6695:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6680:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6680:3:12"
																},
																"nativeSrc": "6680:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6680:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6672:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6672:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6715:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6715:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6726:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6726:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6708:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:12"
																},
																"nativeSrc": "6708:25:12",
																"nodeType": "YulFunctionCall",
																"src": "6708:25:12"
															},
															"nativeSrc": "6708:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "6708:25:12"
														},
														{
															"nativeSrc": "6742:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6742:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6760:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6760:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6756:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6756:3:12"
																		},
																		"nativeSrc": "6756:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6756:11:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6769:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6769:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6752:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6752:3:12"
																},
																"nativeSrc": "6752:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6752:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6746:2:12",
																	"nodeType": "YulTypedName",
																	"src": "6746:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6791:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6802:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6802:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6787:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:12"
																		},
																		"nativeSrc": "6787:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6787:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6811:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6811:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6819:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6819:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6807:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6807:3:12"
																		},
																		"nativeSrc": "6807:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6807:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6780:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6780:6:12"
																},
																"nativeSrc": "6780:43:12",
																"nodeType": "YulFunctionCall",
																"src": "6780:43:12"
															},
															"nativeSrc": "6780:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "6780:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6843:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6843:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6854:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6854:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6839:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6839:3:12"
																		},
																		"nativeSrc": "6839:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6839:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6863:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6863:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6871:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "6871:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6859:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6859:3:12"
																		},
																		"nativeSrc": "6859:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6859:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6832:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6832:6:12"
																},
																"nativeSrc": "6832:43:12",
																"nodeType": "YulFunctionCall",
																"src": "6832:43:12"
															},
															"nativeSrc": "6832:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "6832:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6895:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6895:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6906:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6906:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6891:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6891:3:12"
																		},
																		"nativeSrc": "6891:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6891:18:12"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6911:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6911:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6884:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6884:6:12"
																},
																"nativeSrc": "6884:34:12",
																"nodeType": "YulFunctionCall",
																"src": "6884:34:12"
															},
															"nativeSrc": "6884:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "6884:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6938:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6938:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6949:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6949:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6934:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6934:3:12"
																		},
																		"nativeSrc": "6934:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6934:19:12"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "6955:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6955:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6927:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6927:6:12"
																},
																"nativeSrc": "6927:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6927:35:12"
															},
															"nativeSrc": "6927:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6927:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6982:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6982:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6993:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6993:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6978:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6978:3:12"
																		},
																		"nativeSrc": "6978:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6978:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "7013:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7013:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7006:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "7006:6:12"
																				},
																				"nativeSrc": "7006:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7006:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6999:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6999:6:12"
																		},
																		"nativeSrc": "6999:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6999:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6971:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6971:6:12"
																},
																"nativeSrc": "6971:51:12",
																"nodeType": "YulFunctionCall",
																"src": "6971:51:12"
															},
															"nativeSrc": "6971:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "6971:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "6427:601:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6591:9:12",
														"nodeType": "YulTypedName",
														"src": "6591:9:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6602:6:12",
														"nodeType": "YulTypedName",
														"src": "6602:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6610:6:12",
														"nodeType": "YulTypedName",
														"src": "6610:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6618:6:12",
														"nodeType": "YulTypedName",
														"src": "6618:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6626:6:12",
														"nodeType": "YulTypedName",
														"src": "6626:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6634:6:12",
														"nodeType": "YulTypedName",
														"src": "6634:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6642:6:12",
														"nodeType": "YulTypedName",
														"src": "6642:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6653:4:12",
														"nodeType": "YulTypedName",
														"src": "6653:4:12",
														"type": ""
													}
												],
												"src": "6427:601:12"
											},
											{
												"body": {
													"nativeSrc": "7088:325:12",
													"nodeType": "YulBlock",
													"src": "7088:325:12",
													"statements": [
														{
															"nativeSrc": "7098:22:12",
															"nodeType": "YulAssignment",
															"src": "7098:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7112:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7112:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "7115:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7115:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7108:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7108:3:12"
																},
																"nativeSrc": "7108:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7108:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7098:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7098:6:12"
																}
															]
														},
														{
															"nativeSrc": "7129:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7129:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7159:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7159:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7165:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7165:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7155:3:12"
																},
																"nativeSrc": "7155:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7155:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7133:18:12",
																	"nodeType": "YulTypedName",
																	"src": "7133:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7206:31:12",
																"nodeType": "YulBlock",
																"src": "7206:31:12",
																"statements": [
																	{
																		"nativeSrc": "7208:27:12",
																		"nodeType": "YulAssignment",
																		"src": "7208:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7222:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "7222:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7230:4:12",
																					"nodeType": "YulLiteral",
																					"src": "7230:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7218:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7218:3:12"
																			},
																			"nativeSrc": "7218:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7218:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7208:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7208:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7186:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "7186:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7179:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:12"
																},
																"nativeSrc": "7179:26:12",
																"nodeType": "YulFunctionCall",
																"src": "7179:26:12"
															},
															"nativeSrc": "7176:61:12",
															"nodeType": "YulIf",
															"src": "7176:61:12"
														},
														{
															"body": {
																"nativeSrc": "7296:111:12",
																"nodeType": "YulBlock",
																"src": "7296:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7317:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7317:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7324:3:12",
																							"nodeType": "YulLiteral",
																							"src": "7324:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7329:10:12",
																							"nodeType": "YulLiteral",
																							"src": "7329:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7320:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7320:3:12"
																					},
																					"nativeSrc": "7320:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7320:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7310:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7310:6:12"
																			},
																			"nativeSrc": "7310:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:31:12"
																		},
																		"nativeSrc": "7310:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7361:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7361:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7364:4:12",
																					"nodeType": "YulLiteral",
																					"src": "7364:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7354:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7354:6:12"
																			},
																			"nativeSrc": "7354:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7354:15:12"
																		},
																		"nativeSrc": "7354:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7354:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7389:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7392:4:12",
																					"nodeType": "YulLiteral",
																					"src": "7392:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7382:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7382:6:12"
																			},
																			"nativeSrc": "7382:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7382:15:12"
																		},
																		"nativeSrc": "7382:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7382:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7252:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "7252:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7275:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7275:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7283:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7283:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7272:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7272:2:12"
																		},
																		"nativeSrc": "7272:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7272:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7249:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7249:2:12"
																},
																"nativeSrc": "7249:38:12",
																"nodeType": "YulFunctionCall",
																"src": "7249:38:12"
															},
															"nativeSrc": "7246:161:12",
															"nodeType": "YulIf",
															"src": "7246:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7033:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7068:4:12",
														"nodeType": "YulTypedName",
														"src": "7068:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7077:6:12",
														"nodeType": "YulTypedName",
														"src": "7077:6:12",
														"type": ""
													}
												],
												"src": "7033:380:12"
											},
											{
												"body": {
													"nativeSrc": "7547:145:12",
													"nodeType": "YulBlock",
													"src": "7547:145:12",
													"statements": [
														{
															"nativeSrc": "7557:26:12",
															"nodeType": "YulAssignment",
															"src": "7557:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7569:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7569:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7580:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7580:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7565:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7565:3:12"
																},
																"nativeSrc": "7565:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7565:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7557:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7557:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7599:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7599:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7614:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7614:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7630:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7630:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7635:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7635:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7626:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7626:3:12"
																						},
																						"nativeSrc": "7626:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7626:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7639:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7639:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7622:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7622:3:12"
																				},
																				"nativeSrc": "7622:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7622:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7610:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7610:3:12"
																		},
																		"nativeSrc": "7610:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7610:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7592:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7592:6:12"
																},
																"nativeSrc": "7592:51:12",
																"nodeType": "YulFunctionCall",
																"src": "7592:51:12"
															},
															"nativeSrc": "7592:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "7592:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7663:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7663:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7674:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7674:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7659:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7659:3:12"
																		},
																		"nativeSrc": "7659:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7659:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7679:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7679:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7652:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7652:6:12"
																},
																"nativeSrc": "7652:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7652:34:12"
															},
															"nativeSrc": "7652:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7652:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7418:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7508:9:12",
														"nodeType": "YulTypedName",
														"src": "7508:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7519:6:12",
														"nodeType": "YulTypedName",
														"src": "7519:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7527:6:12",
														"nodeType": "YulTypedName",
														"src": "7527:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7538:4:12",
														"nodeType": "YulTypedName",
														"src": "7538:4:12",
														"type": ""
													}
												],
												"src": "7418:274:12"
											},
											{
												"body": {
													"nativeSrc": "7871:164:12",
													"nodeType": "YulBlock",
													"src": "7871:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7888:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7888:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7899:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7899:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7881:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7881:6:12"
																},
																"nativeSrc": "7881:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7881:21:12"
															},
															"nativeSrc": "7881:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7881:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7922:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7922:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7933:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7933:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7918:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7918:3:12"
																		},
																		"nativeSrc": "7918:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7918:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7938:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7938:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7911:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:12"
																},
																"nativeSrc": "7911:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7911:30:12"
															},
															"nativeSrc": "7911:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7911:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7961:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7961:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7972:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7972:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7957:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7957:3:12"
																		},
																		"nativeSrc": "7957:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7957:18:12"
																	},
																	{
																		"hexValue": "6e6f20736574206173207461736b",
																		"kind": "string",
																		"nativeSrc": "7977:16:12",
																		"nodeType": "YulLiteral",
																		"src": "7977:16:12",
																		"type": "",
																		"value": "no set as task"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7950:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7950:6:12"
																},
																"nativeSrc": "7950:44:12",
																"nodeType": "YulFunctionCall",
																"src": "7950:44:12"
															},
															"nativeSrc": "7950:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "7950:44:12"
														},
														{
															"nativeSrc": "8003:26:12",
															"nodeType": "YulAssignment",
															"src": "8003:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8015:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8015:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8026:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8026:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8011:3:12"
																},
																"nativeSrc": "8011:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8011:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8003:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8003:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7697:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7848:9:12",
														"nodeType": "YulTypedName",
														"src": "7848:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7862:4:12",
														"nodeType": "YulTypedName",
														"src": "7862:4:12",
														"type": ""
													}
												],
												"src": "7697:338:12"
											},
											{
												"body": {
													"nativeSrc": "8197:328:12",
													"nodeType": "YulBlock",
													"src": "8197:328:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8214:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8214:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8229:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8229:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8245:3:12",
																								"nodeType": "YulLiteral",
																								"src": "8245:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8250:1:12",
																								"nodeType": "YulLiteral",
																								"src": "8250:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8241:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8241:3:12"
																						},
																						"nativeSrc": "8241:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8241:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8254:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8254:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8237:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8237:3:12"
																				},
																				"nativeSrc": "8237:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8237:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8225:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8225:3:12"
																		},
																		"nativeSrc": "8225:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8225:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8207:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8207:6:12"
																},
																"nativeSrc": "8207:51:12",
																"nodeType": "YulFunctionCall",
																"src": "8207:51:12"
															},
															"nativeSrc": "8207:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "8207:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8278:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8278:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8289:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8289:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8274:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:12"
																		},
																		"nativeSrc": "8274:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8274:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8294:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8294:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8267:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:12"
																},
																"nativeSrc": "8267:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8267:30:12"
															},
															"nativeSrc": "8267:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8267:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8317:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8317:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8328:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8328:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8313:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8313:3:12"
																		},
																		"nativeSrc": "8313:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8313:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8333:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8333:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8306:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8306:6:12"
																},
																"nativeSrc": "8306:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8306:34:12"
															},
															"nativeSrc": "8306:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8306:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8366:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8366:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8377:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8377:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8362:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8362:3:12"
																		},
																		"nativeSrc": "8362:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8362:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8382:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8382:6:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8390:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8390:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8349:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8349:12:12"
																},
																"nativeSrc": "8349:48:12",
																"nodeType": "YulFunctionCall",
																"src": "8349:48:12"
															},
															"nativeSrc": "8349:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "8349:48:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8421:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8421:9:12"
																					},
																					{
																						"name": "value2",
																						"nativeSrc": "8432:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8432:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8417:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8417:3:12"
																				},
																				"nativeSrc": "8417:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8417:22:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8441:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8441:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:12"
																		},
																		"nativeSrc": "8413:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:31:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8446:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8446:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8406:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:12"
																},
																"nativeSrc": "8406:42:12",
																"nodeType": "YulFunctionCall",
																"src": "8406:42:12"
															},
															"nativeSrc": "8406:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "8406:42:12"
														},
														{
															"nativeSrc": "8457:62:12",
															"nodeType": "YulAssignment",
															"src": "8457:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8473:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8473:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value2",
																								"nativeSrc": "8492:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "8492:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8500:2:12",
																								"nodeType": "YulLiteral",
																								"src": "8500:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8488:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8488:3:12"
																						},
																						"nativeSrc": "8488:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8488:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8509:2:12",
																								"nodeType": "YulLiteral",
																								"src": "8509:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "8505:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8505:3:12"
																						},
																						"nativeSrc": "8505:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8505:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8484:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8484:3:12"
																				},
																				"nativeSrc": "8484:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8484:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8469:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8469:3:12"
																		},
																		"nativeSrc": "8469:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8469:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8516:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8516:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8465:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8465:3:12"
																},
																"nativeSrc": "8465:54:12",
																"nodeType": "YulFunctionCall",
																"src": "8465:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8457:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8457:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "8040:485:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8150:9:12",
														"nodeType": "YulTypedName",
														"src": "8150:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8161:6:12",
														"nodeType": "YulTypedName",
														"src": "8161:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8169:6:12",
														"nodeType": "YulTypedName",
														"src": "8169:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8177:6:12",
														"nodeType": "YulTypedName",
														"src": "8177:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8188:4:12",
														"nodeType": "YulTypedName",
														"src": "8188:4:12",
														"type": ""
													}
												],
												"src": "8040:485:12"
											},
											{
												"body": {
													"nativeSrc": "8611:103:12",
													"nodeType": "YulBlock",
													"src": "8611:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8657:16:12",
																"nodeType": "YulBlock",
																"src": "8657:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8666:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8666:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8669:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8669:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8659:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8659:6:12"
																			},
																			"nativeSrc": "8659:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8659:12:12"
																		},
																		"nativeSrc": "8659:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8659:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8632:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8632:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8641:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8641:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8628:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8628:3:12"
																		},
																		"nativeSrc": "8628:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8628:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8653:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8653:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8624:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:12"
																},
																"nativeSrc": "8624:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8624:32:12"
															},
															"nativeSrc": "8621:52:12",
															"nodeType": "YulIf",
															"src": "8621:52:12"
														},
														{
															"nativeSrc": "8682:26:12",
															"nodeType": "YulAssignment",
															"src": "8682:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8698:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8698:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8692:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8692:5:12"
																},
																"nativeSrc": "8692:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8692:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8682:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8530:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8577:9:12",
														"nodeType": "YulTypedName",
														"src": "8577:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8588:7:12",
														"nodeType": "YulTypedName",
														"src": "8588:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8600:6:12",
														"nodeType": "YulTypedName",
														"src": "8600:6:12",
														"type": ""
													}
												],
												"src": "8530:184:12"
											},
											{
												"body": {
													"nativeSrc": "8904:271:12",
													"nodeType": "YulBlock",
													"src": "8904:271:12",
													"statements": [
														{
															"nativeSrc": "8914:27:12",
															"nodeType": "YulAssignment",
															"src": "8914:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8926:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8926:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8937:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8937:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:12"
																},
																"nativeSrc": "8922:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8922:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8914:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8914:4:12"
																}
															]
														},
														{
															"nativeSrc": "8950:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8950:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8968:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8968:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8973:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8973:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8964:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8964:3:12"
																		},
																		"nativeSrc": "8964:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8964:11:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8977:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8977:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8960:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8960:3:12"
																},
																"nativeSrc": "8960:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8960:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8954:2:12",
																	"nodeType": "YulTypedName",
																	"src": "8954:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8995:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8995:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9010:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9010:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9018:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "9018:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9006:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9006:3:12"
																		},
																		"nativeSrc": "9006:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9006:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8988:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8988:6:12"
																},
																"nativeSrc": "8988:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8988:34:12"
															},
															"nativeSrc": "8988:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8988:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9042:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9042:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9053:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9053:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9038:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9038:3:12"
																		},
																		"nativeSrc": "9038:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9038:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9062:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9062:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9070:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "9070:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9058:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9058:3:12"
																		},
																		"nativeSrc": "9058:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9058:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9031:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:12"
																},
																"nativeSrc": "9031:43:12",
																"nodeType": "YulFunctionCall",
																"src": "9031:43:12"
															},
															"nativeSrc": "9031:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "9031:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9094:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9094:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9105:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9105:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9090:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9090:3:12"
																		},
																		"nativeSrc": "9090:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9090:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "9114:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9114:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9122:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "9122:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9110:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9110:3:12"
																		},
																		"nativeSrc": "9110:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9110:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9083:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9083:6:12"
																},
																"nativeSrc": "9083:43:12",
																"nodeType": "YulFunctionCall",
																"src": "9083:43:12"
															},
															"nativeSrc": "9083:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "9083:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9146:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9146:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9157:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9157:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9142:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9142:3:12"
																		},
																		"nativeSrc": "9142:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9142:18:12"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9162:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9162:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9135:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9135:6:12"
																},
																"nativeSrc": "9135:34:12",
																"nodeType": "YulFunctionCall",
																"src": "9135:34:12"
															},
															"nativeSrc": "9135:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "9135:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8719:456:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8849:9:12",
														"nodeType": "YulTypedName",
														"src": "8849:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8860:6:12",
														"nodeType": "YulTypedName",
														"src": "8860:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8868:6:12",
														"nodeType": "YulTypedName",
														"src": "8868:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8876:6:12",
														"nodeType": "YulTypedName",
														"src": "8876:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8884:6:12",
														"nodeType": "YulTypedName",
														"src": "8884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8895:4:12",
														"nodeType": "YulTypedName",
														"src": "8895:4:12",
														"type": ""
													}
												],
												"src": "8719:456:12"
											},
											{
												"body": {
													"nativeSrc": "9237:107:12",
													"nodeType": "YulBlock",
													"src": "9237:107:12",
													"statements": [
														{
															"nativeSrc": "9247:22:12",
															"nodeType": "YulAssignment",
															"src": "9247:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9262:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9262:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9256:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9256:5:12"
																},
																"nativeSrc": "9256:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9256:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9247:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9247:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9322:16:12",
																"nodeType": "YulBlock",
																"src": "9322:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9331:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9331:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9334:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9334:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9324:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9324:6:12"
																			},
																			"nativeSrc": "9324:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9324:12:12"
																		},
																		"nativeSrc": "9324:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9324:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9291:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9291:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "9312:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "9312:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "9305:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "9305:6:12"
																						},
																						"nativeSrc": "9305:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "9305:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9298:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9298:6:12"
																				},
																				"nativeSrc": "9298:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9298:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9288:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9288:2:12"
																		},
																		"nativeSrc": "9288:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9288:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9281:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9281:6:12"
																},
																"nativeSrc": "9281:40:12",
																"nodeType": "YulFunctionCall",
																"src": "9281:40:12"
															},
															"nativeSrc": "9278:60:12",
															"nodeType": "YulIf",
															"src": "9278:60:12"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nativeSrc": "9180:164:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9216:6:12",
														"nodeType": "YulTypedName",
														"src": "9216:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9227:5:12",
														"nodeType": "YulTypedName",
														"src": "9227:5:12",
														"type": ""
													}
												],
												"src": "9180:164:12"
											},
											{
												"body": {
													"nativeSrc": "9427:124:12",
													"nodeType": "YulBlock",
													"src": "9427:124:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9473:16:12",
																"nodeType": "YulBlock",
																"src": "9473:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9482:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9482:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9485:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9485:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9475:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9475:6:12"
																			},
																			"nativeSrc": "9475:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9475:12:12"
																		},
																		"nativeSrc": "9475:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9475:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9448:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9448:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9457:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9457:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9444:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:12"
																		},
																		"nativeSrc": "9444:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9444:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9469:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9469:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9440:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9440:3:12"
																},
																"nativeSrc": "9440:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9440:32:12"
															},
															"nativeSrc": "9437:52:12",
															"nodeType": "YulIf",
															"src": "9437:52:12"
														},
														{
															"nativeSrc": "9498:47:12",
															"nodeType": "YulAssignment",
															"src": "9498:47:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9535:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9535:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "9508:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "9508:26:12"
																},
																"nativeSrc": "9508:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9508:37:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9498:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9498:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9349:202:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9393:9:12",
														"nodeType": "YulTypedName",
														"src": "9393:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9404:7:12",
														"nodeType": "YulTypedName",
														"src": "9404:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9416:6:12",
														"nodeType": "YulTypedName",
														"src": "9416:6:12",
														"type": ""
													}
												],
												"src": "9349:202:12"
											},
											{
												"body": {
													"nativeSrc": "9597:303:12",
													"nodeType": "YulBlock",
													"src": "9597:303:12",
													"statements": [
														{
															"nativeSrc": "9607:19:12",
															"nodeType": "YulAssignment",
															"src": "9607:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9623:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9623:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9617:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9617:5:12"
																},
																"nativeSrc": "9617:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9617:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "9607:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9607:6:12"
																}
															]
														},
														{
															"nativeSrc": "9635:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9635:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9657:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9657:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9665:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9665:3:12",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9653:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9653:3:12"
																},
																"nativeSrc": "9653:16:12",
																"nodeType": "YulFunctionCall",
																"src": "9653:16:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "9639:10:12",
																	"nodeType": "YulTypedName",
																	"src": "9639:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9752:111:12",
																"nodeType": "YulBlock",
																"src": "9752:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9773:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9773:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9780:3:12",
																							"nodeType": "YulLiteral",
																							"src": "9780:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9785:10:12",
																							"nodeType": "YulLiteral",
																							"src": "9785:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9776:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "9776:3:12"
																					},
																					"nativeSrc": "9776:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9776:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9766:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9766:6:12"
																			},
																			"nativeSrc": "9766:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9766:31:12"
																		},
																		"nativeSrc": "9766:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9766:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9817:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9817:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9820:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9820:4:12",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9810:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9810:6:12"
																			},
																			"nativeSrc": "9810:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9810:15:12"
																		},
																		"nativeSrc": "9810:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9810:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9845:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9845:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9848:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9848:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9838:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9838:6:12"
																			},
																			"nativeSrc": "9838:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9838:15:12"
																		},
																		"nativeSrc": "9838:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9838:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9687:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "9687:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9699:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9699:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9684:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9684:2:12"
																		},
																		"nativeSrc": "9684:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9684:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9723:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "9723:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "9735:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9735:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9720:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9720:2:12"
																		},
																		"nativeSrc": "9720:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9681:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9681:2:12"
																},
																"nativeSrc": "9681:62:12",
																"nodeType": "YulFunctionCall",
																"src": "9681:62:12"
															},
															"nativeSrc": "9678:185:12",
															"nodeType": "YulIf",
															"src": "9678:185:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9879:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9879:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "9883:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "9883:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9872:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9872:6:12"
																},
																"nativeSrc": "9872:22:12",
																"nodeType": "YulFunctionCall",
																"src": "9872:22:12"
															},
															"nativeSrc": "9872:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "9872:22:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "9556:344:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "9586:6:12",
														"nodeType": "YulTypedName",
														"src": "9586:6:12",
														"type": ""
													}
												],
												"src": "9556:344:12"
											},
											{
												"body": {
													"nativeSrc": "9965:78:12",
													"nodeType": "YulBlock",
													"src": "9965:78:12",
													"statements": [
														{
															"nativeSrc": "9975:22:12",
															"nodeType": "YulAssignment",
															"src": "9975:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9990:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9990:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9984:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9984:5:12"
																},
																"nativeSrc": "9984:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9984:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9975:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9975:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10031:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10031:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "10006:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "10006:24:12"
																},
																"nativeSrc": "10006:31:12",
																"nodeType": "YulFunctionCall",
																"src": "10006:31:12"
															},
															"nativeSrc": "10006:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "10006:31:12"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "9905:138:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9944:6:12",
														"nodeType": "YulTypedName",
														"src": "9944:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9955:5:12",
														"nodeType": "YulTypedName",
														"src": "9955:5:12",
														"type": ""
													}
												],
												"src": "9905:138:12"
											},
											{
												"body": {
													"nativeSrc": "10112:87:12",
													"nodeType": "YulBlock",
													"src": "10112:87:12",
													"statements": [
														{
															"nativeSrc": "10122:22:12",
															"nodeType": "YulAssignment",
															"src": "10122:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10137:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10137:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10131:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10131:5:12"
																},
																"nativeSrc": "10131:13:12",
																"nodeType": "YulFunctionCall",
																"src": "10131:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10122:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10122:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10177:16:12",
																"nodeType": "YulBlock",
																"src": "10177:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10186:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10186:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10189:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10189:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10179:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10179:6:12"
																			},
																			"nativeSrc": "10179:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10179:12:12"
																		},
																		"nativeSrc": "10179:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10179:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10166:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10166:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10173:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10173:1:12",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10163:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10163:2:12"
																		},
																		"nativeSrc": "10163:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10163:12:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10156:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:12"
																},
																"nativeSrc": "10156:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10156:20:12"
															},
															"nativeSrc": "10153:40:12",
															"nodeType": "YulIf",
															"src": "10153:40:12"
														}
													]
												},
												"name": "abi_decode_enum_Status_fromMemory",
												"nativeSrc": "10048:151:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10091:6:12",
														"nodeType": "YulTypedName",
														"src": "10091:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10102:5:12",
														"nodeType": "YulTypedName",
														"src": "10102:5:12",
														"type": ""
													}
												],
												"src": "10048:151:12"
											},
											{
												"body": {
													"nativeSrc": "10314:1243:12",
													"nodeType": "YulBlock",
													"src": "10314:1243:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10361:16:12",
																"nodeType": "YulBlock",
																"src": "10361:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10370:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10370:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10373:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10373:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10363:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10363:6:12"
																			},
																			"nativeSrc": "10363:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10363:12:12"
																		},
																		"nativeSrc": "10363:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10363:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10344:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10344:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10331:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10331:3:12"
																		},
																		"nativeSrc": "10331:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10331:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10356:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10356:3:12",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10327:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10327:3:12"
																},
																"nativeSrc": "10327:33:12",
																"nodeType": "YulFunctionCall",
																"src": "10327:33:12"
															},
															"nativeSrc": "10324:53:12",
															"nodeType": "YulIf",
															"src": "10324:53:12"
														},
														{
															"nativeSrc": "10386:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10386:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10399:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "10399:15:12"
																},
																"nativeSrc": "10399:17:12",
																"nodeType": "YulFunctionCall",
																"src": "10399:17:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10390:5:12",
																	"nodeType": "YulTypedName",
																	"src": "10390:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10432:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10432:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10469:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10469:9:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nativeSrc": "10439:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "10439:29:12"
																		},
																		"nativeSrc": "10439:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10439:40:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10425:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10425:6:12"
																},
																"nativeSrc": "10425:55:12",
																"nodeType": "YulFunctionCall",
																"src": "10425:55:12"
															},
															"nativeSrc": "10425:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "10425:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10500:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10500:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10507:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10507:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10496:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10496:3:12"
																		},
																		"nativeSrc": "10496:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10496:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10550:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10550:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10561:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10561:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10546:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10546:3:12"
																				},
																				"nativeSrc": "10546:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10546:18:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_enum_Status_fromMemory",
																			"nativeSrc": "10512:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "10512:33:12"
																		},
																		"nativeSrc": "10512:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10512:53:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10489:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10489:6:12"
																},
																"nativeSrc": "10489:77:12",
																"nodeType": "YulFunctionCall",
																"src": "10489:77:12"
															},
															"nativeSrc": "10489:77:12",
															"nodeType": "YulExpressionStatement",
															"src": "10489:77:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10586:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10586:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10593:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10593:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10582:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10582:3:12"
																		},
																		"nativeSrc": "10582:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10582:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10608:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10608:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10619:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10619:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10604:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10604:3:12"
																				},
																				"nativeSrc": "10604:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10604:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10598:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10598:5:12"
																		},
																		"nativeSrc": "10598:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10598:25:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10575:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10575:6:12"
																},
																"nativeSrc": "10575:49:12",
																"nodeType": "YulFunctionCall",
																"src": "10575:49:12"
															},
															"nativeSrc": "10575:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "10575:49:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10644:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10644:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10651:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10651:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10640:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10640:3:12"
																		},
																		"nativeSrc": "10640:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10640:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10666:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10666:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10677:2:12",
																						"nodeType": "YulLiteral",
																						"src": "10677:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10662:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10662:3:12"
																				},
																				"nativeSrc": "10662:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10662:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10656:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10656:5:12"
																		},
																		"nativeSrc": "10656:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10656:25:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10633:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10633:6:12"
																},
																"nativeSrc": "10633:49:12",
																"nodeType": "YulFunctionCall",
																"src": "10633:49:12"
															},
															"nativeSrc": "10633:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "10633:49:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10702:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10702:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10709:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10709:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10698:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10698:3:12"
																		},
																		"nativeSrc": "10698:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10698:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10725:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10725:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10736:3:12",
																						"nodeType": "YulLiteral",
																						"src": "10736:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10721:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10721:3:12"
																				},
																				"nativeSrc": "10721:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10721:19:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10715:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10715:5:12"
																		},
																		"nativeSrc": "10715:26:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10715:26:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10691:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10691:6:12"
																},
																"nativeSrc": "10691:51:12",
																"nodeType": "YulFunctionCall",
																"src": "10691:51:12"
															},
															"nativeSrc": "10691:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "10691:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10762:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10762:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10769:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10769:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10758:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:12"
																		},
																		"nativeSrc": "10758:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10758:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10785:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10785:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10796:3:12",
																						"nodeType": "YulLiteral",
																						"src": "10796:3:12",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10781:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10781:3:12"
																				},
																				"nativeSrc": "10781:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10781:19:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10775:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10775:5:12"
																		},
																		"nativeSrc": "10775:26:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10775:26:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10751:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:12"
																},
																"nativeSrc": "10751:51:12",
																"nodeType": "YulFunctionCall",
																"src": "10751:51:12"
															},
															"nativeSrc": "10751:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "10751:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10822:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10822:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10829:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10829:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10818:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10818:3:12"
																		},
																		"nativeSrc": "10818:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10818:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10845:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10845:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10856:3:12",
																						"nodeType": "YulLiteral",
																						"src": "10856:3:12",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10841:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10841:3:12"
																				},
																				"nativeSrc": "10841:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10841:19:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10835:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10835:5:12"
																		},
																		"nativeSrc": "10835:26:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10835:26:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10811:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10811:6:12"
																},
																"nativeSrc": "10811:51:12",
																"nodeType": "YulFunctionCall",
																"src": "10811:51:12"
															},
															"nativeSrc": "10811:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "10811:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10882:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10882:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10889:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10889:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10878:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10878:3:12"
																		},
																		"nativeSrc": "10878:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10878:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10905:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10905:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10916:3:12",
																						"nodeType": "YulLiteral",
																						"src": "10916:3:12",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10901:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10901:3:12"
																				},
																				"nativeSrc": "10901:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10901:19:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10895:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10895:5:12"
																		},
																		"nativeSrc": "10895:26:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10895:26:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10871:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10871:6:12"
																},
																"nativeSrc": "10871:51:12",
																"nodeType": "YulFunctionCall",
																"src": "10871:51:12"
															},
															"nativeSrc": "10871:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "10871:51:12"
														},
														{
															"nativeSrc": "10931:13:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10931:13:12",
															"value": {
																"kind": "number",
																"nativeSrc": "10941:3:12",
																"nodeType": "YulLiteral",
																"src": "10941:3:12",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10935:2:12",
																	"nodeType": "YulTypedName",
																	"src": "10935:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10964:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10964:5:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10971:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "10971:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10960:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10960:3:12"
																		},
																		"nativeSrc": "10960:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10960:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10986:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10986:9:12"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "10997:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "10997:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10982:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10982:3:12"
																				},
																				"nativeSrc": "10982:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10982:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10976:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10976:5:12"
																		},
																		"nativeSrc": "10976:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10976:25:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10953:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:12"
																},
																"nativeSrc": "10953:49:12",
																"nodeType": "YulFunctionCall",
																"src": "10953:49:12"
															},
															"nativeSrc": "10953:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "10953:49:12"
														},
														{
															"nativeSrc": "11011:13:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11011:13:12",
															"value": {
																"kind": "number",
																"nativeSrc": "11021:3:12",
																"nodeType": "YulLiteral",
																"src": "11021:3:12",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "11015:2:12",
																	"nodeType": "YulTypedName",
																	"src": "11015:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11044:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11044:5:12"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "11051:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11051:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11040:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11040:3:12"
																		},
																		"nativeSrc": "11040:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11040:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11066:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11066:9:12"
																					},
																					{
																						"name": "_2",
																						"nativeSrc": "11077:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "11077:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11062:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11062:3:12"
																				},
																				"nativeSrc": "11062:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11062:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11056:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "11056:5:12"
																		},
																		"nativeSrc": "11056:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11056:25:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11033:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11033:6:12"
																},
																"nativeSrc": "11033:49:12",
																"nodeType": "YulFunctionCall",
																"src": "11033:49:12"
															},
															"nativeSrc": "11033:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "11033:49:12"
														},
														{
															"nativeSrc": "11091:13:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11091:13:12",
															"value": {
																"kind": "number",
																"nativeSrc": "11101:3:12",
																"nodeType": "YulLiteral",
																"src": "11101:3:12",
																"type": "",
																"value": "320"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "11095:2:12",
																	"nodeType": "YulTypedName",
																	"src": "11095:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11124:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11124:5:12"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "11131:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11131:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11120:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11120:3:12"
																		},
																		"nativeSrc": "11120:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11120:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11146:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11146:9:12"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "11157:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "11157:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11142:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11142:3:12"
																				},
																				"nativeSrc": "11142:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11142:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11136:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "11136:5:12"
																		},
																		"nativeSrc": "11136:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11136:25:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11113:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11113:6:12"
																},
																"nativeSrc": "11113:49:12",
																"nodeType": "YulFunctionCall",
																"src": "11113:49:12"
															},
															"nativeSrc": "11113:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "11113:49:12"
														},
														{
															"nativeSrc": "11171:13:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11171:13:12",
															"value": {
																"kind": "number",
																"nativeSrc": "11181:3:12",
																"nodeType": "YulLiteral",
																"src": "11181:3:12",
																"type": "",
																"value": "352"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "11175:2:12",
																	"nodeType": "YulTypedName",
																	"src": "11175:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11204:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11204:5:12"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "11211:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11211:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11200:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11200:3:12"
																		},
																		"nativeSrc": "11200:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11200:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11226:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11226:9:12"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "11237:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "11237:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11222:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11222:3:12"
																				},
																				"nativeSrc": "11222:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11222:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11216:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "11216:5:12"
																		},
																		"nativeSrc": "11216:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11216:25:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11193:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11193:6:12"
																},
																"nativeSrc": "11193:49:12",
																"nodeType": "YulFunctionCall",
																"src": "11193:49:12"
															},
															"nativeSrc": "11193:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "11193:49:12"
														},
														{
															"nativeSrc": "11251:13:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11251:13:12",
															"value": {
																"kind": "number",
																"nativeSrc": "11261:3:12",
																"nodeType": "YulLiteral",
																"src": "11261:3:12",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "11255:2:12",
																	"nodeType": "YulTypedName",
																	"src": "11255:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11284:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11284:5:12"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "11291:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11291:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11280:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11280:3:12"
																		},
																		"nativeSrc": "11280:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11280:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11330:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11330:9:12"
																					},
																					{
																						"name": "_5",
																						"nativeSrc": "11341:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "11341:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11326:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11326:3:12"
																				},
																				"nativeSrc": "11326:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11326:18:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nativeSrc": "11296:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "11296:29:12"
																		},
																		"nativeSrc": "11296:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11296:49:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11273:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11273:6:12"
																},
																"nativeSrc": "11273:73:12",
																"nodeType": "YulFunctionCall",
																"src": "11273:73:12"
															},
															"nativeSrc": "11273:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "11273:73:12"
														},
														{
															"nativeSrc": "11355:13:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11355:13:12",
															"value": {
																"kind": "number",
																"nativeSrc": "11365:3:12",
																"nodeType": "YulLiteral",
																"src": "11365:3:12",
																"type": "",
																"value": "416"
															},
															"variables": [
																{
																	"name": "_6",
																	"nativeSrc": "11359:2:12",
																	"nodeType": "YulTypedName",
																	"src": "11359:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11388:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11388:5:12"
																			},
																			{
																				"name": "_6",
																				"nativeSrc": "11395:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11395:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11384:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11384:3:12"
																		},
																		"nativeSrc": "11384:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11384:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11410:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11410:9:12"
																					},
																					{
																						"name": "_6",
																						"nativeSrc": "11421:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "11421:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11406:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11406:3:12"
																				},
																				"nativeSrc": "11406:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11406:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11400:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "11400:5:12"
																		},
																		"nativeSrc": "11400:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11400:25:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11377:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11377:6:12"
																},
																"nativeSrc": "11377:49:12",
																"nodeType": "YulFunctionCall",
																"src": "11377:49:12"
															},
															"nativeSrc": "11377:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "11377:49:12"
														},
														{
															"nativeSrc": "11435:13:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11435:13:12",
															"value": {
																"kind": "number",
																"nativeSrc": "11445:3:12",
																"nodeType": "YulLiteral",
																"src": "11445:3:12",
																"type": "",
																"value": "448"
															},
															"variables": [
																{
																	"name": "_7",
																	"nativeSrc": "11439:2:12",
																	"nodeType": "YulTypedName",
																	"src": "11439:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11468:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11468:5:12"
																			},
																			{
																				"name": "_7",
																				"nativeSrc": "11475:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11475:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11464:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11464:3:12"
																		},
																		"nativeSrc": "11464:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11464:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11511:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11511:9:12"
																					},
																					{
																						"name": "_7",
																						"nativeSrc": "11522:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "11522:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11507:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11507:3:12"
																				},
																				"nativeSrc": "11507:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11507:18:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool_fromMemory",
																			"nativeSrc": "11480:26:12",
																			"nodeType": "YulIdentifier",
																			"src": "11480:26:12"
																		},
																		"nativeSrc": "11480:46:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11480:46:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11457:6:12"
																},
																"nativeSrc": "11457:70:12",
																"nodeType": "YulFunctionCall",
																"src": "11457:70:12"
															},
															"nativeSrc": "11457:70:12",
															"nodeType": "YulExpressionStatement",
															"src": "11457:70:12"
														},
														{
															"nativeSrc": "11536:15:12",
															"nodeType": "YulAssignment",
															"src": "11536:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "11546:5:12",
																"nodeType": "YulIdentifier",
																"src": "11546:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11536:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11536:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_RedEnvelope_$1429_memory_ptr_fromMemory",
												"nativeSrc": "10204:1353:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10280:9:12",
														"nodeType": "YulTypedName",
														"src": "10280:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10291:7:12",
														"nodeType": "YulTypedName",
														"src": "10291:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10303:6:12",
														"nodeType": "YulTypedName",
														"src": "10303:6:12",
														"type": ""
													}
												],
												"src": "10204:1353:12"
											},
											{
												"body": {
													"nativeSrc": "11736:169:12",
													"nodeType": "YulBlock",
													"src": "11736:169:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11753:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11753:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11764:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11764:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11746:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11746:6:12"
																},
																"nativeSrc": "11746:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11746:21:12"
															},
															"nativeSrc": "11746:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11746:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11787:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11798:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11798:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11783:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:12"
																		},
																		"nativeSrc": "11783:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11783:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11803:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11803:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11776:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:12"
																},
																"nativeSrc": "11776:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11776:30:12"
															},
															"nativeSrc": "11776:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11776:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11826:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11826:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11837:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11837:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11822:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11822:3:12"
																		},
																		"nativeSrc": "11822:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11822:18:12"
																	},
																	{
																		"hexValue": "627579207469636b6574206e6f20616c6c6f77",
																		"kind": "string",
																		"nativeSrc": "11842:21:12",
																		"nodeType": "YulLiteral",
																		"src": "11842:21:12",
																		"type": "",
																		"value": "buy ticket no allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11815:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11815:6:12"
																},
																"nativeSrc": "11815:49:12",
																"nodeType": "YulFunctionCall",
																"src": "11815:49:12"
															},
															"nativeSrc": "11815:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "11815:49:12"
														},
														{
															"nativeSrc": "11873:26:12",
															"nodeType": "YulAssignment",
															"src": "11873:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11885:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11885:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11896:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11896:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11881:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11881:3:12"
																},
																"nativeSrc": "11881:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11881:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11873:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11873:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11562:343:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11713:9:12",
														"nodeType": "YulTypedName",
														"src": "11713:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11727:4:12",
														"nodeType": "YulTypedName",
														"src": "11727:4:12",
														"type": ""
													}
												],
												"src": "11562:343:12"
											},
											{
												"body": {
													"nativeSrc": "12067:188:12",
													"nodeType": "YulBlock",
													"src": "12067:188:12",
													"statements": [
														{
															"nativeSrc": "12077:26:12",
															"nodeType": "YulAssignment",
															"src": "12077:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12089:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12089:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12100:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12100:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12085:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12085:3:12"
																},
																"nativeSrc": "12085:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12085:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12077:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12077:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12119:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12119:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12130:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12130:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12112:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12112:6:12"
																},
																"nativeSrc": "12112:25:12",
																"nodeType": "YulFunctionCall",
																"src": "12112:25:12"
															},
															"nativeSrc": "12112:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "12112:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12157:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12157:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12168:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12168:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12153:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12153:3:12"
																		},
																		"nativeSrc": "12153:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12153:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12177:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12177:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12193:3:12",
																								"nodeType": "YulLiteral",
																								"src": "12193:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12198:1:12",
																								"nodeType": "YulLiteral",
																								"src": "12198:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12189:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "12189:3:12"
																						},
																						"nativeSrc": "12189:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "12189:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12202:1:12",
																						"nodeType": "YulLiteral",
																						"src": "12202:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12185:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12185:3:12"
																				},
																				"nativeSrc": "12185:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12185:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12173:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12173:3:12"
																		},
																		"nativeSrc": "12173:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12173:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12146:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12146:6:12"
																},
																"nativeSrc": "12146:60:12",
																"nodeType": "YulFunctionCall",
																"src": "12146:60:12"
															},
															"nativeSrc": "12146:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "12146:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12226:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12226:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12237:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12237:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12222:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12222:3:12"
																		},
																		"nativeSrc": "12222:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12222:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12242:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12242:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12215:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12215:6:12"
																},
																"nativeSrc": "12215:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12215:34:12"
															},
															"nativeSrc": "12215:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12215:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11910:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12020:9:12",
														"nodeType": "YulTypedName",
														"src": "12020:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12031:6:12",
														"nodeType": "YulTypedName",
														"src": "12031:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12039:6:12",
														"nodeType": "YulTypedName",
														"src": "12039:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12047:6:12",
														"nodeType": "YulTypedName",
														"src": "12047:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12058:4:12",
														"nodeType": "YulTypedName",
														"src": "12058:4:12",
														"type": ""
													}
												],
												"src": "11910:345:12"
											},
											{
												"body": {
													"nativeSrc": "12434:170:12",
													"nodeType": "YulBlock",
													"src": "12434:170:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12451:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12451:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12462:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12462:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12444:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12444:6:12"
																},
																"nativeSrc": "12444:21:12",
																"nodeType": "YulFunctionCall",
																"src": "12444:21:12"
															},
															"nativeSrc": "12444:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "12444:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12485:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12485:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12496:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12496:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12481:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12481:3:12"
																		},
																		"nativeSrc": "12481:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12481:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12501:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12501:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12474:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:12"
																},
																"nativeSrc": "12474:30:12",
																"nodeType": "YulFunctionCall",
																"src": "12474:30:12"
															},
															"nativeSrc": "12474:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "12474:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12524:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12524:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12535:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12535:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12520:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12520:3:12"
																		},
																		"nativeSrc": "12520:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12520:18:12"
																	},
																	{
																		"hexValue": "73656e64207469636b6574206e6f20616c6c6f77",
																		"kind": "string",
																		"nativeSrc": "12540:22:12",
																		"nodeType": "YulLiteral",
																		"src": "12540:22:12",
																		"type": "",
																		"value": "send ticket no allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12513:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12513:6:12"
																},
																"nativeSrc": "12513:50:12",
																"nodeType": "YulFunctionCall",
																"src": "12513:50:12"
															},
															"nativeSrc": "12513:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "12513:50:12"
														},
														{
															"nativeSrc": "12572:26:12",
															"nodeType": "YulAssignment",
															"src": "12572:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12584:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12584:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12595:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12595:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12580:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:12"
																},
																"nativeSrc": "12580:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12580:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12572:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12572:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12260:344:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12411:9:12",
														"nodeType": "YulTypedName",
														"src": "12411:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12425:4:12",
														"nodeType": "YulTypedName",
														"src": "12425:4:12",
														"type": ""
													}
												],
												"src": "12260:344:12"
											},
											{
												"body": {
													"nativeSrc": "12766:188:12",
													"nodeType": "YulBlock",
													"src": "12766:188:12",
													"statements": [
														{
															"nativeSrc": "12776:26:12",
															"nodeType": "YulAssignment",
															"src": "12776:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12788:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12788:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12799:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12799:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12784:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12784:3:12"
																},
																"nativeSrc": "12784:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12784:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12776:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12776:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12818:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12818:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12833:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12833:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12849:3:12",
																								"nodeType": "YulLiteral",
																								"src": "12849:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12854:1:12",
																								"nodeType": "YulLiteral",
																								"src": "12854:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12845:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "12845:3:12"
																						},
																						"nativeSrc": "12845:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "12845:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12858:1:12",
																						"nodeType": "YulLiteral",
																						"src": "12858:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12841:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12841:3:12"
																				},
																				"nativeSrc": "12841:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12841:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12829:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12829:3:12"
																		},
																		"nativeSrc": "12829:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12829:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12811:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12811:6:12"
																},
																"nativeSrc": "12811:51:12",
																"nodeType": "YulFunctionCall",
																"src": "12811:51:12"
															},
															"nativeSrc": "12811:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "12811:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12882:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12882:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12893:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12893:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12878:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12878:3:12"
																		},
																		"nativeSrc": "12878:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12878:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12898:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12898:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12871:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12871:6:12"
																},
																"nativeSrc": "12871:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12871:34:12"
															},
															"nativeSrc": "12871:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12871:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12925:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12925:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12936:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12936:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12921:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12921:3:12"
																		},
																		"nativeSrc": "12921:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12921:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12941:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12941:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12914:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12914:6:12"
																},
																"nativeSrc": "12914:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12914:34:12"
															},
															"nativeSrc": "12914:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12914:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12609:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12719:9:12",
														"nodeType": "YulTypedName",
														"src": "12719:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12730:6:12",
														"nodeType": "YulTypedName",
														"src": "12730:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12738:6:12",
														"nodeType": "YulTypedName",
														"src": "12738:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12746:6:12",
														"nodeType": "YulTypedName",
														"src": "12746:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12757:4:12",
														"nodeType": "YulTypedName",
														"src": "12757:4:12",
														"type": ""
													}
												],
												"src": "12609:345:12"
											},
											{
												"body": {
													"nativeSrc": "13007:77:12",
													"nodeType": "YulBlock",
													"src": "13007:77:12",
													"statements": [
														{
															"nativeSrc": "13017:16:12",
															"nodeType": "YulAssignment",
															"src": "13017:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13028:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13028:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13031:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13031:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13024:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13024:3:12"
																},
																"nativeSrc": "13024:9:12",
																"nodeType": "YulFunctionCall",
																"src": "13024:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13017:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13017:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13056:22:12",
																"nodeType": "YulBlock",
																"src": "13056:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13058:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13058:16:12"
																			},
																			"nativeSrc": "13058:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13058:18:12"
																		},
																		"nativeSrc": "13058:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13058:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13048:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13048:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13051:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13051:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13045:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13045:2:12"
																},
																"nativeSrc": "13045:10:12",
																"nodeType": "YulFunctionCall",
																"src": "13045:10:12"
															},
															"nativeSrc": "13042:36:12",
															"nodeType": "YulIf",
															"src": "13042:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12959:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12990:1:12",
														"nodeType": "YulTypedName",
														"src": "12990:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12993:1:12",
														"nodeType": "YulTypedName",
														"src": "12993:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12999:3:12",
														"nodeType": "YulTypedName",
														"src": "12999:3:12",
														"type": ""
													}
												],
												"src": "12959:125:12"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"no set as task\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), value2)\n        calldatacopy(add(headStart, 96), value1, value2)\n        mstore(add(add(headStart, value2), 96), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 480)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_enum_Status_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_RedEnvelope_$1429_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 480) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_address_fromMemory(headStart))\n        mstore(add(value, 32), abi_decode_enum_Status_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), mload(add(headStart, 64)))\n        mstore(add(value, 96), mload(add(headStart, 96)))\n        mstore(add(value, 128), mload(add(headStart, 128)))\n        mstore(add(value, 160), mload(add(headStart, 160)))\n        mstore(add(value, 192), mload(add(headStart, 192)))\n        mstore(add(value, 224), mload(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), mload(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), mload(add(headStart, _2)))\n        let _3 := 320\n        mstore(add(value, _3), mload(add(headStart, _3)))\n        let _4 := 352\n        mstore(add(value, _4), mload(add(headStart, _4)))\n        let _5 := 384\n        mstore(add(value, _5), abi_decode_address_fromMemory(add(headStart, _5)))\n        let _6 := 416\n        mstore(add(value, _6), mload(add(headStart, _6)))\n        let _7 := 448\n        mstore(add(value, _7), abi_decode_bool_fromMemory(add(headStart, _7)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"buy ticket no allow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"send ticket no allow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xB4309A9C GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xB4309A9C EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xC7FF23BB EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xD896FC10 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x105 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x6EBD327B EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12C911E EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x6E2A29A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x82921A5 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x154 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x16A SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xF4B JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xF62 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x16A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x264 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x154 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH0 PUSH2 0x33C PUSH1 0x12 PUSH1 0xA PUSH2 0x117F JUMP JUMPDEST PUSH2 0x346 SWAP1 DUP4 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP PUSH2 0x351 DUP2 PUSH2 0x4F0 JUMP JUMPDEST PUSH0 PUSH2 0x35D DUP6 DUP6 DUP6 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x400 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x422 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x45D PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xD7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4C1 DUP2 DUP6 DUP6 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4DA DUP6 DUP3 DUP6 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x4E5 DUP6 DUP6 DUP6 PUSH2 0xB3E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4FA CALLER DUP3 PUSH2 0xB9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x50A PUSH1 0x12 PUSH1 0xA PUSH2 0x117F JUMP JUMPDEST PUSH2 0x514 SWAP1 DUP4 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP PUSH2 0x520 DUP5 DUP3 PUSH2 0x5AA JUMP JUMPDEST PUSH0 PUSH2 0x52C DUP7 DUP6 DUP6 PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0xA8A JUMP JUMPDEST PUSH2 0x5A8 PUSH0 PUSH2 0xBCF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5B5 DUP3 CALLER DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5BF DUP3 DUP3 PUSH2 0xB9B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4C1 DUP2 DUP6 DUP6 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6E6F20736574206173207461736B PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70D64693 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH4 0xE1AC8D26 SWAP1 PUSH2 0x684 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP PUSH2 0x6DA DUP5 DUP3 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x4D914FBDB28A885441BB0F6E06BB01DFDFE8A8B6902391853B46EB747AE136EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH2 0x735 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x743 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x7BB PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0x4FA DUP2 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8F91CD17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8F91CD17 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9C0 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x627579207469636B6574206E6F20616C6C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63A JUMP JUMPDEST PUSH0 DUP5 DUP3 PUSH2 0x160 ADD MLOAD PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST DUP3 MLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x951 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5E7BB33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC5E7BB33 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E64207469636B6574206E6F20616C6C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C42E0C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5C42E0C5 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA79 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0xAC4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC7E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x735 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0x735 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0xAC4 DUP4 DUP4 DUP4 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0x5BF DUP3 PUSH0 DUP4 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH2 0x5BF PUSH0 DUP4 DUP4 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x735 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD7A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xDEA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE06 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE69 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE9C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xEAE DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF05 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF10 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF30 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xF3B DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xEAE DUP2 PUSH2 0xE76 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF5B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF75 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xF87 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xF97 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC2 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xFE7 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xFF7 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1013 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1026 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1034 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1045 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1065 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1070 DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1080 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x10D9 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BF PUSH2 0x108B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x10CC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x10A4 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10EF JUMPI POP PUSH1 0x1 PUSH2 0x4C7 JUMP JUMPDEST DUP2 PUSH2 0x10FB JUMPI POP PUSH0 PUSH2 0x4C7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1111 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x111B JUMPI PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x112C JUMPI PUSH2 0x112C PUSH2 0x108B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4C7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x115A JUMPI POP DUP2 DUP2 EXP PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x1164 DUP4 DUP4 PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1177 JUMPI PUSH2 0x1177 PUSH2 0x108B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFC2 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x10E1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C7 JUMPI PUSH2 0x4C7 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1241 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1256 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC2 DUP3 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x128F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1241 DUP2 PUSH2 0xE76 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x1241 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12C7 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x12D0 DUP4 PUSH2 0x1295 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x12DE PUSH1 0x20 DUP5 ADD PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x135D DUP2 DUP6 ADD PUSH2 0x1295 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0x137A DUP2 DUP6 ADD PUSH2 0x1232 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C7 JUMPI PUSH2 0x4C7 PUSH2 0x108B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x73 DUP12 SUB STOP 0x23 0x27 DUP7 SWAP14 0xBD SWAP8 REVERT BYTE 0x4D 0xAE 0xBD TIMESTAMP BASEFEE DUP6 DUP8 LOG3 0xD8 PUSH3 0x2B079E DUP7 SWAP12 0xBE 0xAE 0xB1 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "515:3481:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3058:354;;;;;;:::i;:::-;;:::i;:::-;;691:27;;;;;-1:-1:-1;;;691:27:8;;;;;;;;;703:14:12;;696:22;678:41;;666:2;651:18;691:27:8;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;1470:167:8:-;;;;;;:::i;:::-;;:::i;4293:186:2:-;;;;;;:::i;:::-;;:::i;3144:97::-;3222:12;;3144:97;;;1619:25:12;;;1607:2;1592:18;3144:97:2;1473:177:12;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2258:36:12;;2246:2;2231:18;3002:82:2;2116:184:12;618:87:4;;;;;;:::i;:::-;;:::i;3421:389:8:-;;;;;;:::i;:::-;;:::i;3299:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1021:158:4:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;3436:32:12;;;3418:51;;3406:2;3391:18;1638:85:0;3272:203:12;2276:93:2;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;655:26:8:-;;;;;-1:-1:-1;;;655:26:8;;;;;;615:30;;;;;-1:-1:-1;;;;;615:30:8;;;1648:474;;;;;;:::i;:::-;;:::i;3852:138::-;;;;;;:::i;:::-;;:::i;3846:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;:::i;:::-;;:::i;3058:354:8:-;3158:14;3192:16;3075:2:2;3192::8;:16;:::i;:::-;3175:33;;:14;:33;:::i;:::-;3158:50;;3222:12;3227:6;3222:4;:12::i;:::-;3248:8;3259:46;3270:3;3274:15;3290:14;3259:10;:46::i;:::-;3325:76;;;6708:25:12;;;3347:10:8;6802:2:12;6787:18;;6780:43;-1:-1:-1;;;;;6859:15:12;;6839:18;;;6832:43;6906:2;6891:18;;6884:34;;;6949:3;6934:19;;6927:35;;;7006:14;;6999:22;6760:3;6978:19;;6971:51;3325:76:8;;7006:14:12;;-1:-1:-1;3325:76:8;;;;;;6695:3:12;3325:76:8;;;3144:268;;3058:354;;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;1470:167:8:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1553:17:8;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;;;:27;;;1599;;7592:51:12;;;7659:18;;7652:34;;;1599:27:8::1;::::0;7565:18:12;1599:27:8::1;;;;;;;1470:167:::0;;:::o;4293:186:2:-;4366:4;735:10:6;4420:31:2;735:10:6;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:6;5182:37:2;5198:4;735:10:6;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;618:87:4:-;672:26;735:10:6;692:5:4;672;:26::i;:::-;618:87;:::o;3421:389:8:-;3546:14;3580:16;3075:2:2;3580::8;:16;:::i;:::-;3563:33;;:14;:33;:::i;:::-;3546:50;;3610:29;3619:12;3632:6;3610:8;:29::i;:::-;3653:8;3664:46;3675:3;3679:15;3695:14;3664:10;:46::i;:::-;3730:69;;;6708:25:12;;;-1:-1:-1;;;;;6807:15:12;;;6802:2;6787:18;;6780:43;6859:15;;6839:18;;;6832:43;6906:2;6891:18;;6884:34;;;6949:3;6934:19;;6927:35;;;7006:14;;6999:22;6760:3;6978:19;;6971:51;3730:69:8;;7006:14:12;;-1:-1:-1;3730:69:8;;;;;;6695:3:12;3730:69:8;;;3532:278;;3421:389;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;735:10:6;1135:5:4;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:6;3733:27:2;735:10:6;3750:2:2;3754:5;3733:9;:27::i;1648:474:8:-;2356:21:7;:19;:21::i;:::-;-1:-1:-1;;;;;1774:17:8;::::1;;::::0;;;:6:::1;:17;::::0;;;;;:22;;1766:48:::1;;;::::0;-1:-1:-1;;;1766:48:8;;7899:2:12;1766:48:8::1;::::0;::::1;7881:21:12::0;7938:2;7918:18;;;7911:30;-1:-1:-1;;;7957:18:12;;;7950:44;8011:18;;1766:48:8::1;;;;;;;;;-1:-1:-1::0;;;;;1968:17:8;::::1;1890:14;1968:17:::0;;;:6:::1;:17;::::0;;;;;;1907:58;;-1:-1:-1;;;1907:58:8;;1890:14;;1968:17;;1907:31:::1;::::0;:58:::1;::::0;1947:10:::1;::::0;1959:5;;;;1907:58:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;;;:::i;:::-;1890:95;;1999:30;2005:15;2022:6;1999:5;:30::i;:::-;2048:63;::::0;;2066:10:::1;8988:34:12::0;;-1:-1:-1;;;;;9058:15:12;;;9053:2;9038:18;;9031:43;9110:15;;9090:18;;;9083:43;9157:2;9142:18;;9135:34;;;2048:63:8;;::::1;::::0;;;;8937:3:12;2048:63:8;;::::1;1752:370;2398:20:7::0;1713:1;2924:7;:21;2744:208;2398:20;1648:474:8;;;;:::o;3852:138::-;1531:13:0;:11;:13::i;:::-;3944:35:8::1;::::0;-1:-1:-1;;;3944:35:8;;-1:-1:-1;;;;;7610:32:12;;;3944:35:8::1;::::0;::::1;7592:51:12::0;7659:18;;;7652:34;;;3944:23:8;::::1;::::0;::::1;::::0;7565:18:12;;3944:35:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2543:215:0:-:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3418:51:12::0;3391:18;;2672:31:0::1;3272:203:12::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2132:916:8:-:0;2322:15;;2309:50;;-1:-1:-1;;;2309:50:8;;;;;1619:25:12;;;2228:4:8;;2258;;2228;;-1:-1:-1;;;;;2322:15:8;;2309:45;;1592:18:12;;2309:50:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2377:25;;;;2276:83;;-1:-1:-1;;;;;;2377:39:8;2373:641;;2449:14;;-1:-1:-1;;;2449:14:8;;;;:22;;2467:4;2449:22;2441:54;;;;-1:-1:-1;;;2441:54:8;;11764:2:12;2441:54:8;;;11746:21:12;11803:2;11783:18;;;11776:30;-1:-1:-1;;;11822:18:12;;;11815:49;11881:18;;2441:54:8;11562:343:12;2441:54:8;2513:21;2563:14;2537:11;:23;;;:40;;;;:::i;:::-;2602:23;;2635:15;;2595:70;;-1:-1:-1;;;2595:70:8;;-1:-1:-1;;;;;2635:15:8;;;2595:70;;;7592:51:12;7659:18;;;7652:34;;;2513:64:8;;-1:-1:-1;2595:39:8;;;;7565:18:12;;2595:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2703:15:8;;2690:76;;-1:-1:-1;;;2690:76:8;;;;;12112:25:12;;;-1:-1:-1;;;;;12173:32:12;;;12153:18;;;12146:60;12222:18;;;12215:34;;;2703:15:8;;;;2690:40;;12085:18:12;;2690:76:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:364;2373:641;;;2811:15;;-1:-1:-1;;;2811:15:8;;;;:23;;2830:4;2811:23;2803:56;;;;-1:-1:-1;;;2803:56:8;;12462:2:12;2803:56:8;;;12444:21:12;12501:2;12481:18;;;12474:30;-1:-1:-1;;;12520:18:12;;;12513:50;12580:18;;2803:56:8;12260:344:12;2803:56:8;2906:15;;2893:77;;-1:-1:-1;;;2893:77:8;;;;;12112:25:12;;;-1:-1:-1;;;;;12173:32:12;;;12153:18;;;12146:60;12222:18;;;12215:34;;;2906:15:8;;;;2893:41;;12085:18:12;;2893:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2994:5;2988:11;;2373:641;-1:-1:-1;3034:3:8;2132:916;-1:-1:-1;;;;2132:916:8:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;3418:51:12;3391:18;;1901:40:0;3272:203:12;8989:128:2;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;12829:32:12;;10936:60:2;;;12811:51:12;12878:18;;;12871:34;;;12921:18;;;12914:34;;;12784:18;;10936:60:2;12609:345:12;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;3418:51:12;3391:18;;5780:30:2;3272:203:12;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;3418:51:12;3391:18;;5873:32:2;3272:203:12;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;8247:206::-;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;3418:51:12;3391:18;;8361:30:2;3272:203:12;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2431:307:7:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:7;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;3418:51:12;3391:18;;7835:32:2;3272:203:12;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;3418:51:12;3391:18;;10103:32:2;3272:203:12;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;3418:51:12;3391:18;;10203:31:2;3272:203:12;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1619:25:12;;1607:2;1592:18;;1473:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;12829:32:12;;6649:50:2;;;12811:51:12;12878:18;;;12871:34;;;12921:18;;;12914:34;;;12784:18;;6649:50:2;12609:345:12;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1619::12;;1607:2;1592:18;;1473:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:131:12:-;-1:-1:-1;;;;;89:31:12;;79:42;;69:70;;135:1;132;125:12;150:383;227:6;235;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;348:9;335:23;325:33;;408:2;397:9;393:18;380:32;421:31;446:5;421:31;:::i;:::-;150:383;;471:5;;-1:-1:-1;;;523:2:12;508:18;;;;495:32;;150:383::o;730:418::-;879:2;868:9;861:21;842:4;911:6;905:13;954:6;949:2;938:9;934:18;927:34;1013:6;1008:2;1000:6;996:15;991:2;980:9;976:18;970:50;1069:1;1064:2;1055:6;1044:9;1040:22;1036:31;1029:42;1139:2;1132;1128:7;1123:2;1115:6;1111:15;1107:29;1096:9;1092:45;1088:54;1080:62;;;730:418;;;;:::o;1153:315::-;1221:6;1229;1282:2;1270:9;1261:7;1257:23;1253:32;1250:52;;;1298:1;1295;1288:12;1250:52;1337:9;1324:23;1356:31;1381:5;1356:31;:::i;:::-;1406:5;1458:2;1443:18;;;;1430:32;;-1:-1:-1;;;1153:315:12:o;1655:456::-;1732:6;1740;1748;1801:2;1789:9;1780:7;1776:23;1772:32;1769:52;;;1817:1;1814;1807:12;1769:52;1856:9;1843:23;1875:31;1900:5;1875:31;:::i;:::-;1925:5;-1:-1:-1;1982:2:12;1967:18;;1954:32;1995:33;1954:32;1995:33;:::i;2305:180::-;2364:6;2417:2;2405:9;2396:7;2392:23;2388:32;2385:52;;;2433:1;2430;2423:12;2385:52;-1:-1:-1;2456:23:12;;2305:180;-1:-1:-1;2305:180:12:o;2490:525::-;2576:6;2584;2592;2600;2653:3;2641:9;2632:7;2628:23;2624:33;2621:53;;;2670:1;2667;2660:12;2621:53;2706:9;2693:23;2683:33;;2766:2;2755:9;2751:18;2738:32;2779:31;2804:5;2779:31;:::i;:::-;2829:5;-1:-1:-1;2886:2:12;2871:18;;2858:32;2899:33;2858:32;2899:33;:::i;:::-;2490:525;;;;-1:-1:-1;2951:7:12;;3005:2;2990:18;2977:32;;-1:-1:-1;;2490:525:12:o;3020:247::-;3079:6;3132:2;3120:9;3111:7;3107:23;3103:32;3100:52;;;3148:1;3145;3138:12;3100:52;3187:9;3174:23;3206:31;3231:5;3206:31;:::i;:::-;3256:5;3020:247;-1:-1:-1;;;3020:247:12:o;3480:867::-;3568:6;3576;3584;3592;3645:2;3633:9;3624:7;3620:23;3616:32;3613:52;;;3661:1;3658;3651:12;3613:52;3700:9;3687:23;3719:31;3744:5;3719:31;:::i;:::-;3769:5;-1:-1:-1;3826:2:12;3811:18;;3798:32;3839:33;3798:32;3839:33;:::i;:::-;3891:7;-1:-1:-1;3949:2:12;3934:18;;3921:32;3972:18;4002:14;;;3999:34;;;4029:1;4026;4019:12;3999:34;4067:6;4056:9;4052:22;4042:32;;4112:7;4105:4;4101:2;4097:13;4093:27;4083:55;;4134:1;4131;4124:12;4083:55;4174:2;4161:16;4200:2;4192:6;4189:14;4186:34;;;4216:1;4213;4206:12;4186:34;4261:7;4256:2;4247:6;4243:2;4239:15;4235:24;4232:37;4229:57;;;4282:1;4279;4272:12;4229:57;3480:867;;;;-1:-1:-1;;4313:2:12;4305:11;;-1:-1:-1;;;3480:867:12:o;4352:388::-;4420:6;4428;4481:2;4469:9;4460:7;4456:23;4452:32;4449:52;;;4497:1;4494;4487:12;4449:52;4536:9;4523:23;4555:31;4580:5;4555:31;:::i;:::-;4605:5;-1:-1:-1;4662:2:12;4647:18;;4634:32;4675:33;4634:32;4675:33;:::i;:::-;4727:7;4717:17;;;4352:388;;;;;:::o;4745:127::-;4806:10;4801:3;4797:20;4794:1;4787:31;4837:4;4834:1;4827:15;4861:4;4858:1;4851:15;4877:416;4966:1;5003:5;4966:1;5017:270;5038:7;5028:8;5025:21;5017:270;;;5097:4;5093:1;5089:6;5085:17;5079:4;5076:27;5073:53;;;5106:18;;:::i;:::-;5156:7;5146:8;5142:22;5139:55;;;5176:16;;;;5139:55;5255:22;;;;5215:15;;;;5017:270;;;5021:3;4877:416;;;;;:::o;5298:806::-;5347:5;5377:8;5367:80;;-1:-1:-1;5418:1:12;5432:5;;5367:80;5466:4;5456:76;;-1:-1:-1;5503:1:12;5517:5;;5456:76;5548:4;5566:1;5561:59;;;;5634:1;5629:130;;;;5541:218;;5561:59;5591:1;5582:10;;5605:5;;;5629:130;5666:3;5656:8;5653:17;5650:43;;;5673:18;;:::i;:::-;-1:-1:-1;;5729:1:12;5715:16;;5744:5;;5541:218;;5843:2;5833:8;5830:16;5824:3;5818:4;5815:13;5811:36;5805:2;5795:8;5792:16;5787:2;5781:4;5778:12;5774:35;5771:77;5768:159;;;-1:-1:-1;5880:19:12;;;5912:5;;5768:159;5959:34;5984:8;5978:4;5959:34;:::i;:::-;6029:6;6025:1;6021:6;6017:19;6008:7;6005:32;6002:58;;;6040:18;;:::i;:::-;6078:20;;5298:806;-1:-1:-1;;;5298:806:12:o;6109:140::-;6167:5;6196:47;6237:4;6227:8;6223:19;6217:4;6196:47;:::i;6254:168::-;6327:9;;;6358;;6375:15;;;6369:22;;6355:37;6345:71;;6396:18;;:::i;7033:380::-;7112:1;7108:12;;;;7155;;;7176:61;;7230:4;7222:6;7218:17;7208:27;;7176:61;7283:2;7275:6;7272:14;7252:18;7249:38;7246:161;;7329:10;7324:3;7320:20;7317:1;7310:31;7364:4;7361:1;7354:15;7392:4;7389:1;7382:15;7246:161;;7033:380;;;:::o;8040:485::-;-1:-1:-1;;;;;8225:32:12;;8207:51;;8294:2;8289;8274:18;;8267:30;;;8313:18;;8306:34;;;8333:6;8382;8377:2;8362:18;;8349:48;8446:1;8417:22;;;8441:2;8413:31;;;8406:42;;;;8509:2;8488:15;;;-1:-1:-1;;8484:29:12;8469:45;8465:54;;8040:485;-1:-1:-1;;8040:485:12:o;8530:184::-;8600:6;8653:2;8641:9;8632:7;8628:23;8624:32;8621:52;;;8669:1;8666;8659:12;8621:52;-1:-1:-1;8692:16:12;;8530:184;-1:-1:-1;8530:184:12:o;9180:164::-;9256:13;;9305;;9298:21;9288:32;;9278:60;;9334:1;9331;9324:12;9278:60;9180:164;;;:::o;9349:202::-;9416:6;9469:2;9457:9;9448:7;9444:23;9440:32;9437:52;;;9485:1;9482;9475:12;9437:52;9508:37;9535:9;9508:37;:::i;9556:344::-;9623:2;9617:9;9665:3;9653:16;;9699:18;9684:34;;9720:22;;;9681:62;9678:185;;;9785:10;9780:3;9776:20;9773:1;9766:31;9820:4;9817:1;9810:15;9848:4;9845:1;9838:15;9678:185;9879:2;9872:22;9556:344;:::o;9905:138::-;9984:13;;10006:31;9984:13;10006:31;:::i;10048:151::-;10131:13;;10173:1;10163:12;;10153:40;;10189:1;10186;10179:12;10204:1353;10303:6;10356:3;10344:9;10335:7;10331:23;10327:33;10324:53;;;10373:1;10370;10363:12;10324:53;10399:17;;:::i;:::-;10439:40;10469:9;10439:40;:::i;:::-;10432:5;10425:55;10512:53;10561:2;10550:9;10546:18;10512:53;:::i;:::-;10507:2;10500:5;10496:14;10489:77;10619:2;10608:9;10604:18;10598:25;10593:2;10586:5;10582:14;10575:49;10677:2;10666:9;10662:18;10656:25;10651:2;10644:5;10640:14;10633:49;10736:3;10725:9;10721:19;10715:26;10709:3;10702:5;10698:15;10691:51;10796:3;10785:9;10781:19;10775:26;10769:3;10762:5;10758:15;10751:51;10856:3;10845:9;10841:19;10835:26;10829:3;10822:5;10818:15;10811:51;10916:3;10905:9;10901:19;10895:26;10889:3;10882:5;10878:15;10871:51;10941:3;10997:2;10986:9;10982:18;10976:25;10971:2;10964:5;10960:14;10953:49;;11021:3;11077:2;11066:9;11062:18;11056:25;11051:2;11044:5;11040:14;11033:49;;11101:3;11157:2;11146:9;11142:18;11136:25;11131:2;11124:5;11120:14;11113:49;;11181:3;11237:2;11226:9;11222:18;11216:25;11211:2;11204:5;11200:14;11193:49;;11261:3;11296:49;11341:2;11330:9;11326:18;11296:49;:::i;:::-;11280:14;;;11273:73;11365:3;11406:18;;;11400:25;11384:14;;;11377:49;11445:3;11480:46;11507:18;;;11480:46;:::i;:::-;11464:14;;;11457:70;11468:5;10204:1353;-1:-1:-1;;;10204:1353:12:o;12959:125::-;13024:9;;;13045:10;;;13042:36;;;13058:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1014000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowBuyTicket()": "2337",
								"allowSendTicket()": "2361",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24807",
								"balanceOf(address)": "2664",
								"burn(uint256)": "51005",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "243",
								"getTicket(uint256,address,uint256)": "infinite",
								"getTicketFrom(uint256,address,address,uint256)": "infinite",
								"mintToken(address,address,bytes)": "infinite",
								"name()": "infinite",
								"owner()": "2386",
								"redEnvelopeAddr()": "2380",
								"renounceOwnership()": "infinite",
								"setTask(address,uint256)": "26108",
								"symbol()": "infinite",
								"totalSupply()": "2303",
								"transfer(address,uint256)": "51310",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(address,address,uint256)": "infinite"
							},
							"internal": {
								"_getTicket(uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 515,
									"end": 3996,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 867,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1031,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1B1BDD1D195C9E551A58DAD95D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "151A58DAD95D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3469,
									"end": 3520,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3442,
									"end": 3460,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3442,
									"end": 3460,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1115,
									"end": 1130,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1209,
									"end": 1243,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1163,
									"end": 1195,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1149,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1195,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1243,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 178,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 178,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 90,
									"end": 103,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 90,
									"end": 103,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 139,
									"end": 152,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 139,
									"end": 152,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 132,
									"end": 153,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 122,
									"end": 154,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 122,
									"end": 154,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 112,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 112,
									"end": 172,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 168,
									"end": 169,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 166,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 158,
									"end": 170,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 112,
									"end": 172,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 112,
									"end": 172,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14,
									"end": 178,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14,
									"end": 178,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14,
									"end": 178,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 183,
									"end": 631,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 183,
									"end": 631,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 265,
									"end": 271,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 279,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 281,
									"end": 287,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 336,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 322,
									"end": 331,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 313,
									"end": 320,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 309,
									"end": 332,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 305,
									"end": 337,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 302,
									"end": 354,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 302,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 302,
									"end": 354,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 350,
									"end": 351,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 348,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 340,
									"end": 352,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 302,
									"end": 354,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 302,
									"end": 354,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 376,
									"end": 392,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 376,
									"end": 392,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 421,
									"end": 452,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 421,
									"end": 452,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 411,
									"end": 453,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 411,
									"end": 453,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 401,
									"end": 471,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 401,
									"end": 471,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 467,
									"end": 468,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 457,
									"end": 469,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 401,
									"end": 471,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 401,
									"end": 471,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 490,
									"end": 495,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 514,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 541,
									"end": 559,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 541,
									"end": 559,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 514,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 514,
									"end": 560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 514,
									"end": 560,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 514,
									"end": 560,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 504,
									"end": 560,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 504,
									"end": 560,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 579,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 623,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 610,
									"end": 619,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 606,
									"end": 624,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 579,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 579,
									"end": 625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 579,
									"end": 625,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 579,
									"end": 625,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 569,
									"end": 625,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 569,
									"end": 625,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 183,
									"end": 631,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 183,
									"end": 631,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 183,
									"end": 631,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 183,
									"end": 631,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 183,
									"end": 631,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 183,
									"end": 631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 636,
									"end": 763,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 636,
									"end": 763,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 697,
									"end": 707,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 692,
									"end": 695,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 688,
									"end": 708,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 685,
									"end": 686,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 678,
									"end": 709,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 728,
									"end": 732,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 718,
									"end": 733,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 752,
									"end": 756,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 742,
									"end": 757,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 847,
									"end": 848,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 855,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 843,
									"end": 855,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 843,
									"end": 855,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 843,
									"end": 855,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 890,
									"end": 902,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 890,
									"end": 902,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 890,
									"end": 902,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 911,
									"end": 972,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 911,
									"end": 972,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 965,
									"end": 969,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 957,
									"end": 963,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 953,
									"end": 970,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 943,
									"end": 970,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 943,
									"end": 970,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 911,
									"end": 972,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 911,
									"end": 972,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1018,
									"end": 1020,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1010,
									"end": 1016,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1007,
									"end": 1021,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1005,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1022,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1064,
									"end": 1074,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1059,
									"end": 1062,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1055,
									"end": 1075,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1052,
									"end": 1053,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1076,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1099,
									"end": 1103,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1096,
									"end": 1097,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1089,
									"end": 1104,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1131,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1117,
									"end": 1132,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1142,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 768,
									"end": 1148,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 768,
									"end": 1148,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1383,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1376,
									"end": 1379,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1373,
									"end": 1384,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1422,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1414,
									"end": 1415,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 1423,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1465,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1531,
									"end": 1533,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1519,
									"end": 1529,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1515,
									"end": 1534,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1508,
									"end": 1535,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1502,
									"end": 1506,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1498,
									"end": 1536,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1567,
									"end": 1571,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1555,
									"end": 1565,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1552,
									"end": 1572,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1590,
									"end": 1594,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1549,
									"end": 1596,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1640,
									"end": 1643,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1636,
									"end": 1648,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1633,
									"end": 1634,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1629,
									"end": 1649,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1627,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1619,
									"end": 1650,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1609,
									"end": 1650,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1609,
									"end": 1650,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1718,
									"end": 1720,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1711,
									"end": 1716,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1708,
									"end": 1721,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1777,
									"end": 1778,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1763,
									"end": 1779,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1763,
									"end": 1779,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1744,
									"end": 1745,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1733,
									"end": 1746,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1700,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1704,
									"end": 1707,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1704,
									"end": 1707,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1370,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 1797,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 1797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1973,
									"end": 3318,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 1973,
									"end": 3318,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2093,
									"end": 2103,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2093,
									"end": 2103,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2115,
									"end": 2145,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2115,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2148,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2177,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2267,
									"end": 2273,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2259,
									"end": 2263,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2253,
									"end": 2264,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2227,
									"end": 2265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2225,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2177,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2177,
									"end": 2274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2177,
									"end": 2274,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2177,
									"end": 2274,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2329,
									"end": 2333,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2329,
									"end": 2333,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2386,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2375,
									"end": 2389,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2375,
									"end": 2389,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2403,
									"end": 2404,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3105,
									"end": 3106,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3122,
									"end": 3128,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3174,
									"end": 3193,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3174,
									"end": 3193,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3174,
									"end": 3193,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3168,
									"end": 3194,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3119,
									"end": 3208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1930,
									"end": 1931,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1946,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1918,
									"end": 1947,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1948,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1954,
									"end": 1955,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1905,
									"end": 1962,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3221,
									"end": 3302,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3221,
									"end": 3302,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2398,
									"end": 3061,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1226,
									"end": 1227,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1219,
									"end": 1233,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1219,
									"end": 1233,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1219,
									"end": 1233,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1250,
									"end": 1268,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1250,
									"end": 1268,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2434,
									"end": 2454,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2434,
									"end": 2454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2434,
									"end": 2454,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2573,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2563,
									"end": 2564,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2574,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2655,
									"end": 2674,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2655,
									"end": 2674,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2655,
									"end": 2674,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2649,
									"end": 2675,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2676,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2676,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2747,
									"end": 2774,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2747,
									"end": 2774,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2747,
									"end": 2774,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2747,
									"end": 2774,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2715,
									"end": 2716,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2703,
									"end": 2717,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2703,
									"end": 2717,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2703,
									"end": 2717,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2703,
									"end": 2717,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2582,
									"end": 2601,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2582,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2552,
									"end": 2788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2556,
									"end": 2559,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2816,
									"end": 2822,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2807,
									"end": 2814,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2823,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2896,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2896,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2896,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2871,
									"end": 2897,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2960,
									"end": 2961,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2956,
									"end": 2970,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2956,
									"end": 2970,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2956,
									"end": 2970,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2972,
									"end": 2975,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 2952,
									"end": 2976,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2948,
									"end": 2985,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2944,
									"end": 2986,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 2988,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 2988,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 3002,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3048,
									"end": 3049,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3039,
									"end": 3045,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3037,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3032,
									"end": 3046,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3028,
									"end": 3050,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3022,
									"end": 3026,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3015,
									"end": 3051,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 3312,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1973,
									"end": 3318,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1973,
									"end": 3318,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1973,
									"end": 3318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3323,
									"end": 3526,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3323,
									"end": 3526,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 3996,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060738b03002327869dbd97fd1a4daebd42488587a3d8622b079e869bbeaeb19e64736f6c63430008190033",
									".code": [
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "B4309A9C"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "B4309A9C"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "C7FF23BB"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "D896FC10"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "D9CAED12"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "6EBD327B"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "12C911E"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "6E2A29A"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "82921A5"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 515,
											"end": 3996,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3058,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3058,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 691,
											"end": 718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 703,
											"end": 717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 703,
											"end": 717,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 696,
											"end": 718,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 678,
											"end": 719,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 678,
											"end": 719,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 666,
											"end": 668,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 691,
											"end": 718,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 718,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 691,
											"end": 718,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1470,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1470,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1473,
											"end": 1650,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2258,
											"end": 2294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2231,
											"end": 2249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2116,
											"end": 2300,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3421,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3421,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3468,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3436,
											"end": 3468,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3436,
											"end": 3468,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3408,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 645,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 615,
											"end": 645,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 615,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 615,
											"end": 645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 615,
											"end": 645,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 615,
											"end": 645,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 645,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1648,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1648,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3852,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3852,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3192,
											"end": 3194,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3192,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3192,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3208,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3192,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3175,
											"end": 3208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3189,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3175,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3208,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3175,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 3227,
											"end": 3233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3222,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3248,
											"end": 3256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3289,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 3259,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3305,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3259,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6823,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6875,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6999,
											"end": 7021,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6978,
											"end": 6997,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 6997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6971,
											"end": 7022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "PUSH",
											"source": 8,
											"value": "EBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D"
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3325,
											"end": 3401,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1553,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1626,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1599,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8"
										},
										{
											"begin": 1599,
											"end": 1626,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1599,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1626,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1626,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3580,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3563,
											"end": 3577,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3563,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3639,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 3610,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3675,
											"end": 3678,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3694,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3709,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 3664,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 3710,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3664,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6807,
											"end": 6822,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6802,
											"end": 6804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6823,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6875,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6884,
											"end": 6918,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6999,
											"end": 7021,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6978,
											"end": 6997,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 6997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6971,
											"end": 7022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "EBC14DDBDD1E1EBC5A287D8957BD1CA84FAEF18F192F27829B8459FD15F5195D"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1791,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1774,
											"end": 1791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1791,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1796,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1814,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 1814,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7899,
											"end": 7901,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1766,
											"end": 1814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7881,
											"end": 7902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7938,
											"end": 7940,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F20736574206173207461736B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7950,
											"end": 7994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1766,
											"end": 1814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1968,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70D64693"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1904,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E1AC8D26"
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 1907,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1957,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1907,
											"end": 1965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1907,
											"end": 1965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1907,
											"end": 1965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1907,
											"end": 1985,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1907,
											"end": 1985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1907,
											"end": 1985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1999,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2005,
											"end": 2020,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2028,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1999,
											"end": 2004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 1999,
											"end": 2029,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1999,
											"end": 2029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1999,
											"end": 2029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2076,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8988,
											"end": 9022,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8988,
											"end": 9022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9053,
											"end": 9055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9031,
											"end": 9074,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9110,
											"end": 9125,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9083,
											"end": 9126,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9157,
											"end": 9159,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9169,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9135,
											"end": 9169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4D914FBDB28A885441BB0F6E06BB01DFDFE8A8B6902391853B46EB747AE136EF"
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 8940,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2111,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 2122,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 2122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3852,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7642,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7642,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7642,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3967,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3944,
											"end": 3979,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 3048,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2132,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8F91CD17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2262,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2258,
											"end": 2262,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2354,
											"name": "PUSH",
											"source": 8,
											"value": "8F91CD17"
										},
										{
											"begin": 2309,
											"end": 2354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "1E0"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2309,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2309,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "PUSH",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2359,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2377,
											"end": 2416,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2373,
											"end": 3014,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2463,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2449,
											"end": 2463,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2463,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2463,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2463,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2449,
											"end": 2463,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2471,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2471,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2449,
											"end": 2471,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11764,
											"end": 11766,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11746,
											"end": 11767,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11803,
											"end": 11805,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11776,
											"end": 11806,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "627579207469636B6574206E6F20616C6C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11815,
											"end": 11864,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 11562,
											"end": 11905,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2441,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2560,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2537,
											"end": 2560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2560,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2537,
											"end": 2577,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2577,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2537,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2577,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2537,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2625,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2650,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7592,
											"end": 7643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7686,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2513,
											"end": 2577,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2577,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2634,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2634,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2595,
											"end": 2634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2595,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2595,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C5E7BB33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12206,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2730,
											"name": "PUSH",
											"source": 8,
											"value": "C5E7BB33"
										},
										{
											"begin": 2690,
											"end": 2730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2373,
											"end": 3014,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 3014,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2373,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2834,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2834,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2834,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2811,
											"end": 2834,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12462,
											"end": 12464,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12444,
											"end": 12465,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12501,
											"end": 12503,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12474,
											"end": 12504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73656E64207469636B6574206E6F20616C6C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12520,
											"end": 12538,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12520,
											"end": 12538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12520,
											"end": 12538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12513,
											"end": 12563,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 12260,
											"end": 12604,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2803,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C42E0C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12137,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12205,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12206,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12222,
											"end": 12240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12249,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2934,
											"name": "PUSH",
											"source": 8,
											"value": "5C42E0C5"
										},
										{
											"begin": 2893,
											"end": 2934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12085,
											"end": 12103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2994,
											"end": 2999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2373,
											"end": 3014,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2373,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3037,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 3048,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2132,
											"end": 3048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12829,
											"end": 12861,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12829,
											"end": 12861,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12811,
											"end": 12862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3469,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3272,
											"end": 3475,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1650,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12829,
											"end": 12861,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12829,
											"end": 12861,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12811,
											"end": 12862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12878,
											"end": 12896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12871,
											"end": 12905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12921,
											"end": 12939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12948,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12784,
											"end": 12802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1650,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 150,
											"end": 533,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 150,
											"end": 533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 241,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 243,
											"end": 249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 298,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 284,
											"end": 293,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 275,
											"end": 282,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 271,
											"end": 294,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 267,
											"end": 299,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 264,
											"end": 316,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 264,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 264,
											"end": 316,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 312,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 302,
											"end": 314,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 264,
											"end": 316,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 264,
											"end": 316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 357,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 335,
											"end": 358,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 325,
											"end": 358,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 325,
											"end": 358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 408,
											"end": 410,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 393,
											"end": 411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 380,
											"end": 412,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 421,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 446,
											"end": 451,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 421,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 421,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 421,
											"end": 452,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 421,
											"end": 452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 150,
											"end": 533,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 150,
											"end": 533,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 471,
											"end": 476,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 471,
											"end": 476,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 523,
											"end": 525,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 508,
											"end": 526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 508,
											"end": 526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 508,
											"end": 526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 495,
											"end": 527,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 495,
											"end": 527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 150,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 1148,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 730,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 879,
											"end": 881,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 861,
											"end": 882,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 842,
											"end": 846,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 905,
											"end": 918,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 947,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 934,
											"end": 952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 927,
											"end": 961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1013,
											"end": 1019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 996,
											"end": 1011,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 991,
											"end": 993,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 976,
											"end": 994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1020,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1069,
											"end": 1070,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1071,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1141,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1128,
											"end": 1135,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1125,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1115,
											"end": 1121,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1111,
											"end": 1126,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1136,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1096,
											"end": 1105,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1092,
											"end": 1137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1080,
											"end": 1142,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1080,
											"end": 1142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1080,
											"end": 1142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 1148,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 730,
											"end": 1148,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 730,
											"end": 1148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 1148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1468,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1153,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1221,
											"end": 1227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1268,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1280,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1253,
											"end": 1285,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1300,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1250,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1337,
											"end": 1346,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 1381,
											"end": 1386,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 1356,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1387,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 1356,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1406,
											"end": 1411,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1460,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1153,
											"end": 1468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1655,
											"end": 2111,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1655,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1804,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1815,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1807,
											"end": 1819,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1866,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1900,
											"end": 1905,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 1875,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1906,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1875,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1967,
											"end": 1985,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 1985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 1986,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1995,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 1954,
											"end": 1986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1995,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 1995,
											"end": 2028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2485,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2305,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2419,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2415,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2420,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2385,
											"end": 2437,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2431,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2435,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2385,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2456,
											"end": 2479,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2456,
											"end": 2479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2485,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2305,
											"end": 2485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 3015,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 2490,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2592,
											"end": 2598,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2606,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2653,
											"end": 2656,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2641,
											"end": 2650,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2639,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2657,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2674,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2621,
											"end": 2674,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2660,
											"end": 2672,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2674,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2621,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2706,
											"end": 2715,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2693,
											"end": 2716,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2716,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2770,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2779,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2779,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2779,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2779,
											"end": 2810,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 2779,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2829,
											"end": 2834,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2886,
											"end": 2888,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2890,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 2858,
											"end": 2890,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2899,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2932,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 2899,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 3015,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 3015,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 3015,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 3015,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3009,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3009,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2490,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3020,
											"end": 3267,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 3020,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3120,
											"end": 3129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3111,
											"end": 3118,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3152,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 3100,
											"end": 3152,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3149,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3152,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 3100,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3174,
											"end": 3197,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3206,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3206,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3206,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3206,
											"end": 3237,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 3206,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3020,
											"end": 3267,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3568,
											"end": 3574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3584,
											"end": 3590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3633,
											"end": 3642,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3631,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3648,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3663,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3613,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3687,
											"end": 3710,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3719,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3774,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3826,
											"end": 3828,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 3830,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3798,
											"end": 3830,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3839,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3872,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3839,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3898,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3953,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4002,
											"end": 4016,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4016,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4065,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4052,
											"end": 4074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4074,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4105,
											"end": 4109,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4120,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4083,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4174,
											"end": 4176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4161,
											"end": 4177,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4202,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4203,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4206,
											"end": 4218,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 4186,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4256,
											"end": 4258,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4253,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4243,
											"end": 4245,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4254,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4235,
											"end": 4259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4280,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4272,
											"end": 4284,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4229,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3480,
											"end": 4347,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4313,
											"end": 4315,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4305,
											"end": 4316,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4316,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3480,
											"end": 4347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4420,
											"end": 4426,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4483,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 4478,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4479,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4452,
											"end": 4484,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4497,
											"end": 4498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4495,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 4449,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4523,
											"end": 4546,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4580,
											"end": 4585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 4555,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4586,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4555,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4662,
											"end": 4664,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4634,
											"end": 4666,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 4634,
											"end": 4666,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 4675,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4352,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4872,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 4745,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4806,
											"end": 4816,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 4801,
											"end": 4804,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4797,
											"end": 4817,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4818,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4841,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 4834,
											"end": 4835,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4827,
											"end": 4842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4861,
											"end": 4865,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4866,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5003,
											"end": 5008,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5028,
											"end": 5036,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5025,
											"end": 5046,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5097,
											"end": 5101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5095,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5083,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5103,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5073,
											"end": 5126,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 5106,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 5106,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5163,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5146,
											"end": 5154,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 5192,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 5192,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 5192,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5176,
											"end": 5192,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 5139,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 5255,
											"end": 5277,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5230,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5230,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5017,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5021,
											"end": 5024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 5293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 5293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5298,
											"end": 6104,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 5298,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5347,
											"end": 5352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5385,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5367,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5367,
											"end": 5447,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5418,
											"end": 5419,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5432,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5432,
											"end": 5437,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5367,
											"end": 5447,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5367,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5466,
											"end": 5470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5456,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 5456,
											"end": 5532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5517,
											"end": 5522,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5456,
											"end": 5532,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 5456,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5548,
											"end": 5552,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5635,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5592,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5582,
											"end": 5592,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5605,
											"end": 5610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5605,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5605,
											"end": 5610,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5629,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5656,
											"end": 5664,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 5670,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5693,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5650,
											"end": 5693,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 5673,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5715,
											"end": 5731,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5715,
											"end": 5731,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5744,
											"end": 5749,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5541,
											"end": 5759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5845,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5833,
											"end": 5841,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5846,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5824,
											"end": 5827,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5818,
											"end": 5822,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5815,
											"end": 5828,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5805,
											"end": 5807,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 5795,
											"end": 5803,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5792,
											"end": 5808,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 5781,
											"end": 5785,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5778,
											"end": 5790,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5809,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5848,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5912,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5912,
											"end": 5917,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 5768,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5959,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 5982,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5959,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 5959,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5959,
											"end": 5993,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5959,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6035,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6017,
											"end": 6036,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6005,
											"end": 6037,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6002,
											"end": 6060,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6002,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6002,
											"end": 6060,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 6040,
											"end": 6058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5298,
											"end": 6104,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5298,
											"end": 6104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6249,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 6109,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6167,
											"end": 6172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 6237,
											"end": 6241,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6227,
											"end": 6235,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6242,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6196,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 6196,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6422,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 6254,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6358,
											"end": 6367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6358,
											"end": 6367,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6390,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6391,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6391,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6355,
											"end": 6392,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 6345,
											"end": 6416,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 6396,
											"end": 6414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 7108,
											"end": 7120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7155,
											"end": 7167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7155,
											"end": 7167,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7155,
											"end": 7167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7176,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 7176,
											"end": 7237,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 7222,
											"end": 7228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7218,
											"end": 7235,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7208,
											"end": 7235,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7208,
											"end": 7235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7176,
											"end": 7237,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 7176,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7283,
											"end": 7285,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7272,
											"end": 7286,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7252,
											"end": 7270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7249,
											"end": 7287,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7329,
											"end": 7339,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 7320,
											"end": 7340,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 7317,
											"end": 7318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7341,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7364,
											"end": 7368,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7354,
											"end": 7369,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7396,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7382,
											"end": 7397,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7246,
											"end": 7407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8040,
											"end": 8525,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 8040,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8225,
											"end": 8257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8257,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8207,
											"end": 8258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8207,
											"end": 8258,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8297,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8297,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8340,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8340,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8333,
											"end": 8339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8377,
											"end": 8379,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8362,
											"end": 8380,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8362,
											"end": 8380,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8397,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8447,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8417,
											"end": 8439,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8417,
											"end": 8439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8441,
											"end": 8443,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8413,
											"end": 8444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8444,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8406,
											"end": 8448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8406,
											"end": 8448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8406,
											"end": 8448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8406,
											"end": 8448,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8484,
											"end": 8513,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8469,
											"end": 8514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8519,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8040,
											"end": 8525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8040,
											"end": 8525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8714,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 8530,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8600,
											"end": 8606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8653,
											"end": 8655,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8639,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8628,
											"end": 8651,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8624,
											"end": 8656,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8669,
											"end": 8670,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8667,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8659,
											"end": 8671,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 8621,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8692,
											"end": 8708,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8692,
											"end": 8708,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8714,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8530,
											"end": 8714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9256,
											"end": 9269,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9256,
											"end": 9269,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9305,
											"end": 9318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9305,
											"end": 9318,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9298,
											"end": 9319,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9288,
											"end": 9320,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9288,
											"end": 9320,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9278,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 9278,
											"end": 9338,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9334,
											"end": 9335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9331,
											"end": 9332,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9324,
											"end": 9336,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9278,
											"end": 9338,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 9278,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9349,
											"end": 9551,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 9349,
											"end": 9551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9416,
											"end": 9422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9471,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9448,
											"end": 9455,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9444,
											"end": 9467,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9472,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9485,
											"end": 9486,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9475,
											"end": 9487,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 9437,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9508,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 9535,
											"end": 9544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9508,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 9508,
											"end": 9545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9556,
											"end": 9900,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 9556,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9623,
											"end": 9625,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9617,
											"end": 9626,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9668,
											"name": "PUSH",
											"source": 12,
											"value": "1E0"
										},
										{
											"begin": 9653,
											"end": 9669,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9653,
											"end": 9669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9699,
											"end": 9717,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9684,
											"end": 9718,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9718,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9742,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9681,
											"end": 9743,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9785,
											"end": 9795,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9780,
											"end": 9783,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9773,
											"end": 9774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9766,
											"end": 9797,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9820,
											"end": 9824,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 9817,
											"end": 9818,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9810,
											"end": 9825,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9848,
											"end": 9852,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9853,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9678,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9879,
											"end": 9881,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9872,
											"end": 9894,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9556,
											"end": 9900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9556,
											"end": 9900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9905,
											"end": 10043,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 9905,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9984,
											"end": 9997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9984,
											"end": 9997,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10006,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 9984,
											"end": 9997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10006,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 10006,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10048,
											"end": 10199,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 10048,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10131,
											"end": 10144,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10131,
											"end": 10144,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10174,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10163,
											"end": 10175,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10163,
											"end": 10175,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 10153,
											"end": 10193,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10189,
											"end": 10190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10179,
											"end": 10191,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 11557,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 10204,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10359,
											"name": "PUSH",
											"source": 12,
											"value": "1E0"
										},
										{
											"begin": 10344,
											"end": 10353,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10331,
											"end": 10354,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10327,
											"end": 10360,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10373,
											"end": 10374,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10370,
											"end": 10371,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10363,
											"end": 10375,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10324,
											"end": 10377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10399,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 10399,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 10399,
											"end": 10416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10399,
											"end": 10416,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 10399,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 10439,
											"end": 10479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10479,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 10439,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10432,
											"end": 10437,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10425,
											"end": 10480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10512,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 10561,
											"end": 10563,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10559,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10546,
											"end": 10564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10512,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 10512,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10512,
											"end": 10565,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 10512,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10509,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10500,
											"end": 10505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10489,
											"end": 10566,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10619,
											"end": 10621,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10608,
											"end": 10617,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10598,
											"end": 10623,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10593,
											"end": 10595,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10586,
											"end": 10591,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10582,
											"end": 10596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10575,
											"end": 10624,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10666,
											"end": 10675,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10656,
											"end": 10681,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10651,
											"end": 10653,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10644,
											"end": 10649,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10633,
											"end": 10682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 10739,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10740,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 10741,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10709,
											"end": 10712,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10702,
											"end": 10707,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10698,
											"end": 10713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10742,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10799,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10785,
											"end": 10794,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10781,
											"end": 10800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10801,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10769,
											"end": 10772,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 10762,
											"end": 10767,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10758,
											"end": 10773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10802,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10856,
											"end": 10859,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 10845,
											"end": 10854,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10841,
											"end": 10860,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10835,
											"end": 10861,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10829,
											"end": 10832,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 10822,
											"end": 10827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10818,
											"end": 10833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10811,
											"end": 10862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10916,
											"end": 10919,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10905,
											"end": 10914,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10901,
											"end": 10920,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10895,
											"end": 10921,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10889,
											"end": 10892,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10882,
											"end": 10887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10878,
											"end": 10893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10871,
											"end": 10922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10941,
											"end": 10944,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10997,
											"end": 10999,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10986,
											"end": 10995,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10982,
											"end": 11000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10976,
											"end": 11001,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10971,
											"end": 10973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10964,
											"end": 10969,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10953,
											"end": 11002,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10953,
											"end": 11002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11021,
											"end": 11024,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 11077,
											"end": 11079,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11066,
											"end": 11075,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11056,
											"end": 11081,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11051,
											"end": 11053,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11044,
											"end": 11049,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11040,
											"end": 11054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11033,
											"end": 11082,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11033,
											"end": 11082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11101,
											"end": 11104,
											"name": "PUSH",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 11157,
											"end": 11159,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11146,
											"end": 11155,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11142,
											"end": 11160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11136,
											"end": 11161,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11133,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11129,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11120,
											"end": 11134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11113,
											"end": 11162,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11113,
											"end": 11162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11184,
											"name": "PUSH",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 11237,
											"end": 11239,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11226,
											"end": 11235,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11222,
											"end": 11240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11216,
											"end": 11241,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11211,
											"end": 11213,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11204,
											"end": 11209,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11200,
											"end": 11214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11193,
											"end": 11242,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11193,
											"end": 11242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11261,
											"end": 11264,
											"name": "PUSH",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 11296,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 11341,
											"end": 11343,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11296,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 11296,
											"end": 11345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11296,
											"end": 11345,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 11296,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11273,
											"end": 11346,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11365,
											"end": 11368,
											"name": "PUSH",
											"source": 12,
											"value": "1A0"
										},
										{
											"begin": 11406,
											"end": 11424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11406,
											"end": 11424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11400,
											"end": 11425,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11384,
											"end": 11398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11384,
											"end": 11398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11384,
											"end": 11398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11377,
											"end": 11426,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 11448,
											"name": "PUSH",
											"source": 12,
											"value": "1C0"
										},
										{
											"begin": 11480,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11480,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 11480,
											"end": 11526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11480,
											"end": 11526,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 11480,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11464,
											"end": 11478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11464,
											"end": 11478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11464,
											"end": 11478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11457,
											"end": 11527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11468,
											"end": 11473,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 11557,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10204,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12959,
											"end": 13084,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 12959,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13024,
											"end": 13033,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13024,
											"end": 13033,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13024,
											"end": 13033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13045,
											"end": 13055,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13045,
											"end": 13055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13045,
											"end": 13055,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13078,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 13042,
											"end": 13078,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13058,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 13058,
											"end": 13076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 13058,
											"end": 13076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/DefaultTaskControl.sol",
								"contracts/interfaces/IRedEnvelope.sol",
								"contracts/interfaces/ITaskControl.sol",
								"contracts/interfaces/ItaskCallee.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowBuyTicket()": "b4309a9c",
							"allowSendTicket()": "06e2a29a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"getTicket(uint256,address,uint256)": "012c911e",
							"getTicketFrom(uint256,address,address,uint256)": "6ebd327b",
							"mintToken(address,address,bytes)": "d896fc10",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"redEnvelopeAddr()": "c7ff23bb",
							"renounceOwnership()": "715018a6",
							"setTask(address,uint256)": "082921a5",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,address,uint256)": "d9caed12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_redEnvelopeAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowBuyTicket\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowSendTicket\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"TaskAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"}],\"name\":\"TicketGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowBuyTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowSendTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"getTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"getTicketFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redEnvelopeAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"setTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DefaultTaskControl.sol\":\"DefaultTaskControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/DefaultTaskControl.sol\":{\"keccak256\":\"0x1fc2bc84beea3322309770fd62f120047e748000bfc6a9ee6ff7ed513a05f32d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e84c4ede55e0caae4347d0f35a28f5dd81ee5a86d421e0b771ad6d2b27ea\",\"dweb:/ipfs/QmWDqQwjDGsmXn71VADVgQJ5e2xu1hpjKFygzo2PNxAUWm\"]},\"contracts/interfaces/IRedEnvelope.sol\":{\"keccak256\":\"0x59aba94fd75d769066dc8dc6db6f2511d424656acca2f8c7f60c66cff2dc1f7e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba2e181d89ef297a064a31f72797ca71e53368e8cda85c59bc834e581daa91d6\",\"dweb:/ipfs/QmXvVjSi3xpbSyEnjtRf69AAReEnzQQh6RzikYJajqK5R2\"]},\"contracts/interfaces/ITaskControl.sol\":{\"keccak256\":\"0x40a9dbae8aab5662adeab31ade903a371ff03e962a204c9fd8023142e19c10ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://783f83d8541381df39275c6310cfd9c70ad6b738f97f373cba4ee43a20f3f0fb\",\"dweb:/ipfs/QmViJY9NgjGDtPyR9TgBBrZhydidrLM6mJyQQpdS6TeaZR\"]},\"contracts/interfaces/ItaskCallee.sol\":{\"keccak256\":\"0x96f9931598e1fad8b2f9c5a1f560835657f1e1be9481ea2fb8f6d1f1f6dd5596\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://26f94f8a89fbe5944c9061d2e7c6e55b0e08c707b2eaffdc0d32573edee53a8b\",\"dweb:/ipfs/QmXFMoPoHe5H42gHtZLDXLPDZQF2wuF9mBhupXURgzPRAs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 990,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "_status",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1069,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "redEnvelopeAddr",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1071,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "allowBuyTicket",
								"offset": 20,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1073,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "allowSendTicket",
								"offset": 21,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1077,
								"contract": "contracts/DefaultTaskControl.sol:DefaultTaskControl",
								"label": "_tasks",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"IRedEnvelope": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "ClaimPrize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "PrizeDrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "RedEnvelopeClaimable",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "buyTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sendTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "injectTickets",
									"type": "uint256"
								}
							],
							"name": "RedEnvelopeClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxPrizeNum",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketPirce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "ticketToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sendAllowAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "RedEnvelopeCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsGet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsInject",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsPurchase",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "buyTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "claimPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTickets",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPrizeNum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_secret",
									"type": "uint256"
								}
							],
							"name": "createRedEnvelope",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketPirce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTickets",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPrizeNum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_injectAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_injectTicketNum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sendAllowAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_secret",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_autoClaim",
									"type": "bool"
								}
							],
							"name": "createRedEnvelopeDetail",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								}
							],
							"name": "drawPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "endRedEnvelope",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "injectTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "sendTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCurrentRedEnvelopeId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "viewRedEnvelope",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "ticketToken",
											"type": "address"
										},
										{
											"internalType": "enum Status",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPrizeNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "buyTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "sendTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "injectTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "userAddrNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "userTxNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "injectAddrNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "ticketPirce",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "sendAllowAddr",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "secret",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "autoClaim",
											"type": "bool"
										}
									],
									"internalType": "struct RedEnvelope",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "viewRedEnvelopeClaimPrize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "viewRedEnvelopeStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createRedEnvelope(uint256,uint256,uint256,uint256)": {
								"details": "Callable by operator",
								"params": {
									"_endTime": ": endTime of the RedEnvelope，0 = no limit",
									"_maxPrizeNum": ": prize num of the RedEnvelope，0为100%中奖",
									"_maxTickets": ": max ticket of the RedEnvelope，0 = no limit",
									"_secret": ": "
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTickets(uint256,address,uint256)": "c5e7bb33",
							"claimPrize(uint256)": "d7098154",
							"createRedEnvelope(uint256,uint256,uint256,uint256)": "0e9e1262",
							"createRedEnvelopeDetail(address,uint256,uint256,uint256,uint256,address,uint256,address,uint256,bool)": "4a42c8f6",
							"drawPrize(uint256,uint256)": "bce3468d",
							"endRedEnvelope(uint256)": "3834efe1",
							"injectTickets(uint256,uint256)": "559f24bc",
							"sendTickets(uint256,address,uint256)": "5c42e0c5",
							"viewCurrentRedEnvelopeId()": "94456fa4",
							"viewRedEnvelope(uint256)": "8f91cd17",
							"viewRedEnvelopeClaimPrize(uint256,address)": "dc912a81",
							"viewRedEnvelopeStatus(uint256)": "fe5c5976"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"ClaimPrize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"PrizeDrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"RedEnvelopeClaimable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sendTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"injectTickets\",\"type\":\"uint256\"}],\"name\":\"RedEnvelopeClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPrizeNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketPirce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ticketToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendAllowAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"RedEnvelopeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsInject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsPurchase\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"buyTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_secret\",\"type\":\"uint256\"}],\"name\":\"createRedEnvelope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPirce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_injectAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_injectTicketNum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sendAllowAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_secret\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_autoClaim\",\"type\":\"bool\"}],\"name\":\"createRedEnvelopeDetail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"drawPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"endRedEnvelope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"injectTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"sendTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCurrentRedEnvelopeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"viewRedEnvelope\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ticketToken\",\"type\":\"address\"},{\"internalType\":\"enum Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sendTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"injectTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAddrNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userTxNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"injectAddrNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPirce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sendAllowAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"secret\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"internalType\":\"struct RedEnvelope\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"viewRedEnvelopeClaimPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"viewRedEnvelopeStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createRedEnvelope(uint256,uint256,uint256,uint256)\":{\"details\":\"Callable by operator\",\"params\":{\"_endTime\":\": endTime of the RedEnvelope\\uff0c0 = no limit\",\"_maxPrizeNum\":\": prize num of the RedEnvelope\\uff0c0\\u4e3a100%\\u4e2d\\u5956\",\"_maxTickets\":\": max ticket of the RedEnvelope\\uff0c0 = no limit\",\"_secret\":\": \"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createRedEnvelope(uint256,uint256,uint256,uint256)\":{\"notice\":\"create the RedEnvelope\\uff0c\\u91c7\\u7528\\u9ed8\\u8ba4\\u4ee3\\u5e01\\u5730\\u5740\\u53ca\\u914d\\u7f6e\\uff0c\\u9ed8\\u8ba4\\u4e3a\\u4ec5\\u652f\\u6301buyTickets\\u6a21\\u5f0f\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRedEnvelope.sol\":\"IRedEnvelope\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRedEnvelope.sol\":{\"keccak256\":\"0x59aba94fd75d769066dc8dc6db6f2511d424656acca2f8c7f60c66cff2dc1f7e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba2e181d89ef297a064a31f72797ca71e53368e8cda85c59bc834e581daa91d6\",\"dweb:/ipfs/QmXvVjSi3xpbSyEnjtRf69AAReEnzQQh6RzikYJajqK5R2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createRedEnvelope(uint256,uint256,uint256,uint256)": {
								"notice": "create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ITaskControl.sol": {
				"ITaskControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fromAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "buy",
									"type": "bool"
								}
							],
							"name": "TicketGet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenMint",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "getTicket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_fromAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "getTicketFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTicket(uint256,address,uint256)": "012c911e",
							"getTicketFrom(uint256,address,address,uint256)": "6ebd327b",
							"mintToken(address,address,bytes)": "d896fc10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"}],\"name\":\"TicketGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenMint\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"getTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"getTicketFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ITaskControl.sol\":\"ITaskControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ITaskControl.sol\":{\"keccak256\":\"0x40a9dbae8aab5662adeab31ade903a371ff03e962a204c9fd8023142e19c10ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://783f83d8541381df39275c6310cfd9c70ad6b738f97f373cba4ee43a20f3f0fb\",\"dweb:/ipfs/QmViJY9NgjGDtPyR9TgBBrZhydidrLM6mJyQQpdS6TeaZR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"ItaskCallee": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "taskCall",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"taskCall(address,bytes)": "e1ac8d26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"taskCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ItaskCallee.sol\":\"ItaskCallee\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ItaskCallee.sol\":{\"keccak256\":\"0x96f9931598e1fad8b2f9c5a1f560835657f1e1be9481ea2fb8f6d1f1f6dd5596\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://26f94f8a89fbe5944c9061d2e7c6e55b0e08c707b2eaffdc0d32573edee53a8b\",\"dweb:/ipfs/QmXFMoPoHe5H42gHtZLDXLPDZQF2wuF9mBhupXURgzPRAs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 982,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1048,
							"linearizedBaseContracts": [
								1048
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 985,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1674:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 983,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 984,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 988,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1720:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 986,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 987,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 990,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1763:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 989,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:7",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 993,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:7"
									},
									"src": "1850:37:7"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "1907:38:7",
										"statements": [
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 996,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "1917:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 997,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "1927:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:7"
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:7"
									},
									"scope": 1048,
									"src": "1893:52:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "2346:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1004,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2356:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:7"
											},
											{
												"id": 1007,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1008,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2398:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:7"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1012,
									"name": "nonReentrant",
									"nameLocation": "2331:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:7"
									},
									"src": "2322:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2470:268:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1015,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2558:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1016,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2569:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "2554:86:7",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "2578:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1018,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "2599:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1020,
															"nodeType": "RevertStatement",
															"src": "2592:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2714:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1024,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2724:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:7"
											}
										]
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:7"
									},
									"scope": 1048,
									"src": "2431:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "2782:170:7",
										"statements": [
											{
												"expression": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1031,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2924:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1032,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "2934:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:7"
											}
										]
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:7"
									},
									"scope": 1048,
									"src": "2744:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "3195:42:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3212:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1043,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3223:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1045,
												"nodeType": "Return",
												"src": "3205:25:7"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:7",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3189:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:7"
									},
									"scope": 1048,
									"src": "3131:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1049,
							"src": "886:2353:7",
							"usedErrors": [
								993
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:7"
				},
				"id": 7
			},
			"contracts/DefaultTaskControl.sol": {
				"ast": {
					"absolutePath": "contracts/DefaultTaskControl.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"DefaultTaskControl": [
							1390
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"IRedEnvelope": [
							1633
						],
						"ITaskControl": [
							1689
						],
						"ItaskCallee": [
							1701
						],
						"Ownable": [
							147
						],
						"RedEnvelope": [
							1429
						],
						"ReentrancyGuard": [
							1048
						],
						"Status": [
							1397
						],
						"Ticket": [
							1436
						]
					},
					"id": 1391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "93:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 800,
							"src": "123:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 924,
							"src": "183:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 148,
							"src": "262:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 1049,
							"src": "319:59:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IRedEnvelope.sol",
							"file": "./interfaces/IRedEnvelope.sol",
							"id": 1055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 1634,
							"src": "383:39:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ITaskControl.sol",
							"file": "./interfaces/ITaskControl.sol",
							"id": 1056,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 1690,
							"src": "427:39:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ItaskCallee.sol",
							"file": "./interfaces/ItaskCallee.sol",
							"id": 1057,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 1702,
							"src": "471:38:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1058,
										"name": "ITaskControl",
										"nameLocations": [
											"546:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1689,
										"src": "546:12:8"
									},
									"id": 1059,
									"nodeType": "InheritanceSpecifier",
									"src": "546:12:8"
								},
								{
									"baseName": {
										"id": 1060,
										"name": "ERC20",
										"nameLocations": [
											"559:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "559:5:8"
									},
									"id": 1061,
									"nodeType": "InheritanceSpecifier",
									"src": "559:5:8"
								},
								{
									"baseName": {
										"id": 1062,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"565:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "565:15:8"
									},
									"id": 1063,
									"nodeType": "InheritanceSpecifier",
									"src": "565:15:8"
								},
								{
									"baseName": {
										"id": 1064,
										"name": "ERC20Burnable",
										"nameLocations": [
											"582:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "582:13:8"
									},
									"id": 1065,
									"nodeType": "InheritanceSpecifier",
									"src": "582:13:8"
								},
								{
									"baseName": {
										"id": 1066,
										"name": "Ownable",
										"nameLocations": [
											"597:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "597:7:8"
									},
									"id": 1067,
									"nodeType": "InheritanceSpecifier",
									"src": "597:7:8"
								}
							],
							"canonicalName": "DefaultTaskControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1390,
							"linearizedBaseContracts": [
								1390,
								147,
								923,
								1048,
								799,
								189,
								949,
								877,
								979,
								1689
							],
							"name": "DefaultTaskControl",
							"nameLocation": "524:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c7ff23bb",
									"id": 1069,
									"mutability": "mutable",
									"name": "redEnvelopeAddr",
									"nameLocation": "630:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "615:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1068,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "615:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4309a9c",
									"id": 1071,
									"mutability": "mutable",
									"name": "allowBuyTicket",
									"nameLocation": "667:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "655:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1070,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "655:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06e2a29a",
									"id": 1073,
									"mutability": "mutable",
									"name": "allowSendTicket",
									"nameLocation": "703:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "691:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1072,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "691:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1077,
									"mutability": "mutable",
									"name": "_tasks",
									"nameLocation": "765:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "729:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1076,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1074,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "737:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "729:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1075,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "748:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "d7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8",
									"id": 1083,
									"name": "TaskAdd",
									"nameLocation": "816:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"indexed": false,
												"mutability": "mutable",
												"name": "taskAddr",
												"nameLocation": "832:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "824:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "849:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "841:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:33:8"
									},
									"src": "810:47:8"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "1042:225:8",
										"statements": [
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1103,
														"name": "redEnvelopeAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "1115:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1104,
														"name": "_redEnvelopeAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "1133:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1115:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "1115:34:8"
											},
											{
												"expression": {
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1107,
														"name": "allowBuyTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "1163:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1108,
														"name": "_allowBuyTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "1180:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1163:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "1163:32:8"
											},
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1111,
														"name": "allowSendTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "1209:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1112,
														"name": "_allowSendTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "1227:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1209:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "1209:34:8"
											}
										]
									},
									"id": 1116,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "6c6f74746572795469636b6574",
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "966:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cc28e07ade3da62a701fc6b6c5fb7e2d52f2f8a262d24a0a00aa62c89688d76d",
														"typeString": "literal_string \"lotteryTicket\""
													},
													"value": "lotteryTicket"
												},
												{
													"hexValue": "5469636b6574",
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "983:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_adc9ea83d7d69e1f89766083ed31732a556805d45b99c35409751054a912085a",
														"typeString": "literal_string \"Ticket\""
													},
													"value": "Ticket"
												}
											],
											"id": 1094,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1091,
												"name": "ERC20",
												"nameLocations": [
													"960:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "960:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "960:32:8"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"expression": {
																"id": 1098,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1021:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1025:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1021:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1013:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1096,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1013:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1101,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1095,
												"name": "Ownable",
												"nameLocations": [
													"1005:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1005:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1005:28:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "_redEnvelopeAddr",
												"nameLocation": "887:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "879:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_allowBuyTicket",
												"nameLocation": "909:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "904:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "904:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "_allowSendTicket",
												"nameLocation": "930:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "925:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "925:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:69:8"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:0:8"
									},
									"scope": 1390,
									"src": "867:400:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "1539:98:8",
										"statements": [
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1125,
															"name": "_tasks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "1553:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1127,
														"indexExpression": {
															"id": 1126,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "1560:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1553:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1128,
														"name": "_weight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "1573:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1553:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "1553:27:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1132,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "1607:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "_weight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "1618:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1131,
														"name": "TaskAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "1599:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1599:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "EmitStatement",
												"src": "1594:32:8"
											}
										]
									},
									"functionSelector": "082921a5",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1123,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1122,
												"name": "onlyOwner",
												"nameLocations": [
													"1530:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1530:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1530:9:8"
										}
									],
									"name": "setTask",
									"nameLocation": "1479:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "1495:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1487:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "_weight",
												"nameLocation": "1513:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1505:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:35:8"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:0:8"
									},
									"scope": 1390,
									"src": "1470:167:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1668
									],
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "1752:370:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1149,
																	"name": "_tasks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "1774:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1151,
																"indexExpression": {
																	"id": 1150,
																	"name": "_taskAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "1781:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1774:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1795:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1774:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f20736574206173207461736b",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1797:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673",
																"typeString": "literal_string \"no set as task\""
															},
															"value": "no set as task"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673",
																"typeString": "literal_string \"no set as task\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1766:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "1766:48:8"
											},
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1898:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "1890:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1890:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1165,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1947:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1951:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1947:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1939:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1939:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1939:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1168,
																"name": "_data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "1959:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1160,
																		"name": "_taskAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "1919:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1159,
																	"name": "ItaskCallee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "1907:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ItaskCallee_$1701_$",
																		"typeString": "type(contract ItaskCallee)"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1907:22:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ItaskCallee_$1701",
																	"typeString": "contract ItaskCallee"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1930:8:8",
															"memberName": "taskCall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1700,
															"src": "1907:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (address,bytes memory) external returns (uint256)"
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1907:58:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"baseExpression": {
															"id": 1170,
															"name": "_tasks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "1968:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1172,
														"indexExpression": {
															"id": 1171,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "1975:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1968:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1907:78:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1890:95:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1176,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2005:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "2022:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1175,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1999:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "1999:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1183,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2066:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2070:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2066:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2058:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2058:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2058:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "2078:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2088:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "2104:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1180,
														"name": "TokenMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "2048:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2048:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "EmitStatement",
												"src": "2043:68:8"
											}
										]
									},
									"functionSelector": "d896fc10",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1145,
												"name": "nonReentrant",
												"nameLocations": [
													"1740:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "1740:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1740:12:8"
										}
									],
									"name": "mintToken",
									"nameLocation": "1657:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "1675:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1667:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "1693:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1685:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1724:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1709:20:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1709:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1666:64:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1752:0:8"
									},
									"scope": 1390,
									"src": "1648:474:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "2233:815:8",
										"statements": [
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "buy",
														"nameLocation": "2252:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "2247:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1203,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2247:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2258:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2247:15:8"
											},
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "redEnvelope",
														"nameLocation": "2295:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "2276:30:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RedEnvelope_$1429_memory_ptr",
															"typeString": "struct RedEnvelope"
														},
														"typeName": {
															"id": 1208,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1207,
																"name": "RedEnvelope",
																"nameLocations": [
																	"2276:11:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1429,
																"src": "2276:11:8"
															},
															"referencedDeclaration": 1429,
															"src": "2276:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RedEnvelope_$1429_storage_ptr",
																"typeString": "struct RedEnvelope"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"arguments": [
														{
															"id": 1214,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "2355:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1211,
																	"name": "redEnvelopeAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "2322:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1210,
																"name": "IRedEnvelope",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "2309:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1633_$",
																	"typeString": "type(contract IRedEnvelope)"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2309:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRedEnvelope_$1633",
																"typeString": "contract IRedEnvelope"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2339:15:8",
														"memberName": "viewRedEnvelope",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1623,
														"src": "2309:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_RedEnvelope_$1429_memory_ptr_$",
															"typeString": "function (uint256) view external returns (struct RedEnvelope memory)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RedEnvelope_$1429_memory_ptr",
														"typeString": "struct RedEnvelope memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2276:83:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1217,
															"name": "redEnvelope",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "2377:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RedEnvelope_$1429_memory_ptr",
																"typeString": "struct RedEnvelope memory"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2389:13:8",
														"memberName": "sendAllowAddr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "2377:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2414:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2406:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1219,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2406:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2406:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2377:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1277,
													"nodeType": "Block",
													"src": "2785:229:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1258,
																			"name": "allowSendTicket",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "2811:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2830:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "2811:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "73656e64207469636b6574206e6f20616c6c6f77",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2836:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0",
																			"typeString": "literal_string \"send ticket no allow\""
																		},
																		"value": "send ticket no allow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0",
																			"typeString": "literal_string \"send ticket no allow\""
																		}
																	],
																	"id": 1257,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2803:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2803:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "2803:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1268,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "2935:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1269,
																		"name": "_receiveAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "2939:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1270,
																		"name": "_ticketNumbers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "2955:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1265,
																				"name": "redEnvelopeAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1069,
																				"src": "2906:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1264,
																			"name": "IRedEnvelope",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "2893:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1633_$",
																				"typeString": "type(contract IRedEnvelope)"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2893:29:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IRedEnvelope_$1633",
																			"typeString": "contract IRedEnvelope"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2923:11:8",
																	"memberName": "sendTickets",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1577,
																	"src": "2893:41:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256) external"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2893:77:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1272,
															"nodeType": "ExpressionStatement",
															"src": "2893:77:8"
														},
														{
															"expression": {
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1273,
																	"name": "buy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "2988:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2994:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2988:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1276,
															"nodeType": "ExpressionStatement",
															"src": "2988:11:8"
														}
													]
												},
												"id": 1278,
												"nodeType": "IfStatement",
												"src": "2373:641:8",
												"trueBody": {
													"id": 1256,
													"nodeType": "Block",
													"src": "2417:364:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1225,
																			"name": "allowBuyTicket",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1071,
																			"src": "2449:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2467:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "2449:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "627579207469636b6574206e6f20616c6c6f77",
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2473:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78",
																			"typeString": "literal_string \"buy ticket no allow\""
																		},
																		"value": "buy ticket no allow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78",
																			"typeString": "literal_string \"buy ticket no allow\""
																		}
																	],
																	"id": 1224,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2441:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2441:54:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "2441:54:8"
														},
														{
															"assignments": [
																1232
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1232,
																	"mutability": "mutable",
																	"name": "approveAmount",
																	"nameLocation": "2521:13:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1256,
																	"src": "2513:21:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1231,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2513:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1237,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1233,
																		"name": "redEnvelope",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "2537:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RedEnvelope_$1429_memory_ptr",
																			"typeString": "struct RedEnvelope memory"
																		}
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2549:11:8",
																	"memberName": "ticketPirce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1422,
																	"src": "2537:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1235,
																	"name": "_ticketNumbers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "2563:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2537:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2513:64:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1243,
																		"name": "redEnvelopeAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "2635:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1244,
																		"name": "approveAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "2651:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1239,
																					"name": "redEnvelope",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "2602:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RedEnvelope_$1429_memory_ptr",
																						"typeString": "struct RedEnvelope memory"
																					}
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2614:11:8",
																				"memberName": "ticketToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1399,
																				"src": "2602:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1238,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "2595:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2595:31:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2627:7:8",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "2595:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2595:70:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1246,
															"nodeType": "ExpressionStatement",
															"src": "2595:70:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1251,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "2731:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "_receiveAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "2735:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "_ticketNumbers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "2751:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1248,
																				"name": "redEnvelopeAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1069,
																				"src": "2703:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1247,
																			"name": "IRedEnvelope",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "2690:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1633_$",
																				"typeString": "type(contract IRedEnvelope)"
																			}
																		},
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2690:29:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IRedEnvelope_$1633",
																			"typeString": "contract IRedEnvelope"
																		}
																	},
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2720:10:8",
																	"memberName": "buyTickets",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1586,
																	"src": "2690:40:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256) external"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2690:76:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1255,
															"nodeType": "ExpressionStatement",
															"src": "2690:76:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1279,
													"name": "buy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1204,
													"src": "3034:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1202,
												"id": 1280,
												"nodeType": "Return",
												"src": "3027:10:8"
											}
										]
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTicket",
									"nameLocation": "2141:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2160:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2152:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "2172:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2164:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "2196:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2188:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:60:8"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2228:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2228:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:6:8"
									},
									"scope": 1390,
									"src": "2132:916:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1677
									],
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "3144:268:8",
										"statements": [
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3166:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "3158:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3158:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1299,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1293,
														"name": "_ticketNumbers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "3175:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3192:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1295,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "3198:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3198:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "3192:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3175:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3158:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "3227:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1300,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3222:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3222:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "3222:12:8"
											},
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "buy",
														"nameLocation": "3253:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "3248:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1304,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3248:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"arguments": [
														{
															"id": 1307,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "3270:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1308,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "3274:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "_ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "3290:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1306,
														"name": "_getTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "3259:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,address,uint256) returns (bool)"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3248:57:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1313,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "3335:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1316,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3347:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3351:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3347:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3339:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1314,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3339:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3339:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1319,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "3359:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "3375:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1321,
															"name": "_ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "3382:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1322,
															"name": "buy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "3397:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1312,
														"name": "TicketGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "3325:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,bool)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "EmitStatement",
												"src": "3320:81:8"
											}
										]
									},
									"functionSelector": "012c911e",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTicket",
									"nameLocation": "3067:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3085:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "3077:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "3097:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "3089:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "3121:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "3113:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3113:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:60:8"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:8"
									},
									"scope": 1390,
									"src": "3058:354:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1688
									],
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "3532:278:8",
										"statements": [
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3554:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "3546:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1337,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3546:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1345,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1339,
														"name": "_ticketNumbers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "3563:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3580:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1341,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "3586:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3586:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "3580:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3563:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3546:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1347,
															"name": "_fromAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "3619:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3632:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1346,
														"name": "burnFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "3610:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3610:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "3610:29:8"
											},
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "buy",
														"nameLocation": "3658:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "3653:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1351,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3653:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1358,
												"initialValue": {
													"arguments": [
														{
															"id": 1354,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "3675:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1355,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "3679:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1356,
															"name": "_ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "3695:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1353,
														"name": "_getTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "3664:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,address,uint256) returns (bool)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3664:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3653:57:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1360,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "3740:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1361,
															"name": "_fromAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "3744:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1362,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "3757:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3773:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1364,
															"name": "_ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "3780:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1365,
															"name": "buy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "3795:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1359,
														"name": "TicketGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "3730:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,bool)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "EmitStatement",
												"src": "3725:74:8"
											}
										]
									},
									"functionSelector": "6ebd327b",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTicketFrom",
									"nameLocation": "3430:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3452:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3444:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_fromAddress",
												"nameLocation": "3464:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3456:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3456:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "3485:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3477:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "3509:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3501:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:81:8"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3532:0:8"
									},
									"scope": 1390,
									"src": "3421:389:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "3930:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1384,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3968:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1385,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "3972:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1381,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "3951:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1380,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "3944:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3944:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3959:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "3944:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3944:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "3944:35:8"
											}
										]
									},
									"functionSelector": "d9caed12",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1377,
												"name": "onlyOwner",
												"nameLocations": [
													"3921:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3921:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3921:9:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "3861:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3878:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3870:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3870:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3893:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3885:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3905:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3897:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3897:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3869:43:8"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3930:0:8"
									},
									"scope": 1390,
									"src": "3852:138:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1391,
							"src": "515:3481:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								993
							],
							"usedEvents": [
								24,
								811,
								820,
								1083,
								1645,
								1659
							]
						}
					],
					"src": "93:3903:8"
				},
				"id": 8
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IRedEnvelope.sol",
					"exportedSymbols": {
						"IRedEnvelope": [
							1633
						],
						"RedEnvelope": [
							1429
						],
						"Status": [
							1397
						],
						"Ticket": [
							1436
						]
					},
					"id": 1634,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1392,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:9"
						},
						{
							"canonicalName": "Status",
							"id": 1397,
							"members": [
								{
									"id": 1393,
									"name": "Pending",
									"nameLocation": "89:7:9",
									"nodeType": "EnumValue",
									"src": "89:7:9"
								},
								{
									"id": 1394,
									"name": "Open",
									"nameLocation": "103:4:9",
									"nodeType": "EnumValue",
									"src": "103:4:9"
								},
								{
									"id": 1395,
									"name": "Close",
									"nameLocation": "114:5:9",
									"nodeType": "EnumValue",
									"src": "114:5:9"
								},
								{
									"id": 1396,
									"name": "Claimable",
									"nameLocation": "126:9:9",
									"nodeType": "EnumValue",
									"src": "126:9:9"
								}
							],
							"name": "Status",
							"nameLocation": "75:6:9",
							"nodeType": "EnumDefinition",
							"src": "70:68:9"
						},
						{
							"canonicalName": "RedEnvelope",
							"id": 1429,
							"members": [
								{
									"constant": false,
									"id": 1399,
									"mutability": "mutable",
									"name": "ticketToken",
									"nameLocation": "173:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "165:19:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1398,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "165:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1402,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "198:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "191:13:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$1397",
										"typeString": "enum Status"
									},
									"typeName": {
										"id": 1401,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1400,
											"name": "Status",
											"nameLocations": [
												"191:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1397,
											"src": "191:6:9"
										},
										"referencedDeclaration": 1397,
										"src": "191:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$1397",
											"typeString": "enum Status"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1404,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "219:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "211:15:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "211:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1406,
									"mutability": "mutable",
									"name": "maxTickets",
									"nameLocation": "241:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "233:18:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1408,
									"mutability": "mutable",
									"name": "maxPrizeNum",
									"nameLocation": "266:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "258:19:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1407,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1410,
									"mutability": "mutable",
									"name": "buyTickets",
									"nameLocation": "313:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "305:18:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1409,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "305:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1412,
									"mutability": "mutable",
									"name": "sendTickets",
									"nameLocation": "365:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "357:19:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1411,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "357:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1414,
									"mutability": "mutable",
									"name": "injectTickets",
									"nameLocation": "419:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "411:21:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1413,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1416,
									"mutability": "mutable",
									"name": "userAddrNum",
									"nameLocation": "460:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "452:19:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "452:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1418,
									"mutability": "mutable",
									"name": "userTxNum",
									"nameLocation": "486:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "478:17:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1417,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1420,
									"mutability": "mutable",
									"name": "injectAddrNum",
									"nameLocation": "510:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "502:21:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1419,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "502:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1422,
									"mutability": "mutable",
									"name": "ticketPirce",
									"nameLocation": "538:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "530:19:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1421,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "530:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1424,
									"mutability": "mutable",
									"name": "sendAllowAddr",
									"nameLocation": "564:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "556:21:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1423,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "556:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1426,
									"mutability": "mutable",
									"name": "secret",
									"nameLocation": "697:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "689:14:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1425,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1428,
									"mutability": "mutable",
									"name": "autoClaim",
									"nameLocation": "715:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "710:14:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1427,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "710:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedEnvelope",
							"nameLocation": "147:11:9",
							"nodeType": "StructDefinition",
							"scope": 1634,
							"src": "140:589:9",
							"visibility": "public"
						},
						{
							"canonicalName": "Ticket",
							"id": 1436,
							"members": [
								{
									"constant": false,
									"id": 1431,
									"mutability": "mutable",
									"name": "totalNumbers",
									"nameLocation": "761:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1436,
									"src": "753:20:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "753:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1433,
									"mutability": "mutable",
									"name": "receiveAddress",
									"nameLocation": "788:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1436,
									"src": "780:22:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1432,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "780:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1435,
									"mutability": "mutable",
									"name": "buy",
									"nameLocation": "814:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 1436,
									"src": "809:8:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1434,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "809:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Ticket",
							"nameLocation": "740:6:9",
							"nodeType": "StructDefinition",
							"scope": 1634,
							"src": "733:88:9",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRedEnvelope",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1633,
							"linearizedBaseContracts": [
								1633
							],
							"name": "IRedEnvelope",
							"nameLocation": "835:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "d1e3ee1889517a916aeecc9d0b214ca142fce1f8562cd5e9071876b998ec7eea",
									"id": 1454,
									"name": "RedEnvelopeCreated",
									"nameLocation": "857:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "902:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "886:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "923:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "915:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxTickets",
												"nameLocation": "949:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "941:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxPrizeNum",
												"nameLocation": "979:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "971:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketPirce",
												"nameLocation": "1009:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1001:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketToken",
												"nameLocation": "1039:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1031:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"indexed": false,
												"mutability": "mutable",
												"name": "sendAllowAddr",
												"nameLocation": "1069:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1061:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "1098:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1093:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:239:9"
									},
									"src": "851:264:9"
								},
								{
									"anonymous": false,
									"eventSelector": "8e8517d306c35510333dea682099e81a1454bbf42be03c51d19d593ad811bb70",
									"id": 1466,
									"name": "RedEnvelopeClosed",
									"nameLocation": "1129:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1173:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1157:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1194:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1186:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyTickets",
												"nameLocation": "1220:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1212:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"indexed": false,
												"mutability": "mutable",
												"name": "sendTickets",
												"nameLocation": "1249:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1241:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"indexed": false,
												"mutability": "mutable",
												"name": "injectTickets",
												"nameLocation": "1279:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1271:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:153:9"
									},
									"src": "1123:177:9"
								},
								{
									"anonymous": false,
									"eventSelector": "66f6b4cd34444af165fb78bce3996496528b37af161c26f737b7341cc37063bb",
									"id": 1472,
									"name": "RedEnvelopeClaimable",
									"nameLocation": "1314:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1361:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1345:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1382:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1374:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:62:9"
									},
									"src": "1308:89:9"
								},
								{
									"anonymous": false,
									"eventSelector": "2f21f7ec4c4f5661e7ee11613bb65b35b597763197b0d487352af168e7689653",
									"id": 1484,
									"name": "TicketsPurchase",
									"nameLocation": "1604:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1646:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1630:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1675:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1659:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "1708:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1692:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketIndex",
												"nameLocation": "1741:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1733:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "1775:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1767:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:176:9"
									},
									"src": "1598:198:9"
								},
								{
									"anonymous": false,
									"eventSelector": "044a018626111fd20a3d6ed65f4bf175632a5877b08c4aa033d87b2c7b6318b5",
									"id": 1496,
									"name": "TicketsGet",
									"nameLocation": "1810:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1847:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "1831:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1876:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "1860:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "1909:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "1893:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketIndex",
												"nameLocation": "1942:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "1934:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "1972:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "1964:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:172:9"
									},
									"src": "1804:189:9"
								},
								{
									"anonymous": false,
									"eventSelector": "a95519638524dcea0d5d0102c719d77dc3d8b1ae68d2d1e37c79be21bc7b113b",
									"id": 1504,
									"name": "TicketsInject",
									"nameLocation": "2007:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2047:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2031:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2076:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2060:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "2101:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2093:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:101:9"
									},
									"src": "2001:121:9"
								},
								{
									"anonymous": false,
									"eventSelector": "927546e38b674f5e5dff7edce9c7afdcf21a35ac03ba70fe8e341f61f2c73ded",
									"id": 1516,
									"name": "PrizeDrawn",
									"nameLocation": "2138:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2175:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2159:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2204:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2188:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2237:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2221:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2261:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2253:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "2283:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2278:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:151:9"
									},
									"src": "2132:168:9"
								},
								{
									"anonymous": false,
									"eventSelector": "268ef67ed0490cc273925a4865e6fbdb4dcf7e0802aad957aa682a78c7618bef",
									"id": 1526,
									"name": "ClaimPrize",
									"nameLocation": "2314:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2351:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2335:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2380:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2364:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "2405:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2397:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "2432:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2427:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2427:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:124:9"
									},
									"src": "2308:141:9"
								},
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "2455:398:9",
										"text": " @notice create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式\n @dev Callable by operator\n @param _endTime: endTime of the RedEnvelope，0 = no limit\n @param _maxTickets: max ticket of the RedEnvelope，0 = no limit\n @param _maxPrizeNum: prize num of the RedEnvelope，0为100%中奖\n @param _secret: "
									},
									"functionSelector": "0e9e1262",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createRedEnvelope",
									"nameLocation": "2868:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "2904:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2896:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2896:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_maxTickets",
												"nameLocation": "2931:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2923:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2923:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "_maxPrizeNum",
												"nameLocation": "2961:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2953:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "_secret",
												"nameLocation": "2992:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "2984:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:121:9"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3014:0:9"
									},
									"scope": 1633,
									"src": "2859:156:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a42c8f6",
									"id": 1561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createRedEnvelopeDetail",
									"nameLocation": "3116:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "3158:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3150:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3150:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "_ticketPirce",
												"nameLocation": "3206:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3198:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3198:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "3237:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3229:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "_maxTickets",
												"nameLocation": "3264:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3256:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3256:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_maxPrizeNum",
												"nameLocation": "3294:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3286:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "_injectAddress",
												"nameLocation": "3325:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3317:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "_injectTicketNum",
												"nameLocation": "3438:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3430:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "_sendAllowAddr",
												"nameLocation": "3518:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3510:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "_secret",
												"nameLocation": "3741:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3733:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "_autoClaim",
												"nameLocation": "3764:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3759:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3759:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3139:738:9"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3885:0:9"
									},
									"scope": 1633,
									"src": "3107:779:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "559f24bc",
									"id": 1568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "injectTickets",
									"nameLocation": "4002:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4024:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4016:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4036:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4028:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:36:9"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4059:0:9"
									},
									"scope": 1633,
									"src": "3993:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c42e0c5",
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendTickets",
									"nameLocation": "4166:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4186:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4178:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "4198:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4190:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4222:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4214:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:60:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4245:0:9"
									},
									"scope": 1633,
									"src": "4157:89:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5e7bb33",
									"id": 1586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyTickets",
									"nameLocation": "4339:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4358:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "4350:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "4370:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "4362:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4394:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "4386:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:60:9"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4417:0:9"
									},
									"scope": 1633,
									"src": "4330:88:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3834efe1",
									"id": 1591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "endRedEnvelope",
									"nameLocation": "4523:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4546:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "4538:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4538:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4537:13:9"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4558:0:9"
									},
									"scope": 1633,
									"src": "4514:45:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bce3468d",
									"id": 1598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "drawPrize",
									"nameLocation": "4646:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4664:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "4656:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "4676:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "4668:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4655:28:9"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4691:0:9"
									},
									"scope": 1633,
									"src": "4637:55:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d7098154",
									"id": 1603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimPrize",
									"nameLocation": "4798:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4817:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4809:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4809:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4808:13:9"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4829:0:9"
									},
									"scope": 1633,
									"src": "4789:41:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe5c5976",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelopeStatus",
									"nameLocation": "4879:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4909:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "4901:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:13:9"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "4937:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4937:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4936:6:9"
									},
									"scope": 1633,
									"src": "4870:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94456fa4",
									"id": 1615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCurrentRedEnvelopeId",
									"nameLocation": "4986:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5010:2:9"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "5035:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5034:9:9"
									},
									"scope": 1633,
									"src": "4977:67:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f91cd17",
									"id": 1623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelope",
									"nameLocation": "5085:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5109:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "5101:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5101:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5100:13:9"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "5136:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RedEnvelope_$1429_memory_ptr",
													"typeString": "struct RedEnvelope"
												},
												"typeName": {
													"id": 1620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1619,
														"name": "RedEnvelope",
														"nameLocations": [
															"5136:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1429,
														"src": "5136:11:9"
													},
													"referencedDeclaration": 1429,
													"src": "5136:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RedEnvelope_$1429_storage_ptr",
														"typeString": "struct RedEnvelope"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:20:9"
									},
									"scope": 1633,
									"src": "5076:80:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dc912a81",
									"id": 1632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelopeClaimPrize",
									"nameLocation": "5221:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5255:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "5247:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5267:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "5259:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5259:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:27:9"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "5295:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5294:9:9"
									},
									"scope": 1633,
									"src": "5212:92:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1634,
							"src": "825:4484:9",
							"usedErrors": [],
							"usedEvents": [
								1454,
								1466,
								1472,
								1484,
								1496,
								1504,
								1516,
								1526
							]
						}
					],
					"src": "38:5271:9"
				},
				"id": 9
			},
			"contracts/interfaces/ITaskControl.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ITaskControl.sol",
					"exportedSymbols": {
						"ITaskControl": [
							1689
						]
					},
					"id": 1690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1635,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "93:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITaskControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1689,
							"linearizedBaseContracts": [
								1689
							],
							"name": "ITaskControl",
							"nameLocation": "133:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "4d914fbdb28a885441bb0f6e06bb01dfdfe8a8b6902391853b46eb747ae136ef",
									"id": 1645,
									"name": "TokenMint",
									"nameLocation": "163:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "181:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "173:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"indexed": false,
												"mutability": "mutable",
												"name": "taskAddr",
												"nameLocation": "196:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "188:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "213:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "205:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "236:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "228:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:71:10"
									},
									"src": "157:87:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ebc14ddbdd1e1ebc5a287d8957bd1ca84faef18f192f27829b8459fd15f5195d",
									"id": 1659,
									"name": "TicketGet",
									"nameLocation": "259:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "277:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "269:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"indexed": false,
												"mutability": "mutable",
												"name": "fromAddress",
												"nameLocation": "288:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "280:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "308:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "300:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "331:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "323:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "346:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "338:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"indexed": false,
												"mutability": "mutable",
												"name": "buy",
												"nameLocation": "365:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "360:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "360:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:101:10"
									},
									"src": "253:117:10"
								},
								{
									"functionSelector": "d896fc10",
									"id": 1668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "459:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "477:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "469:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "469:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "495:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "487:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "526:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "511:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "511:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:63:10"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:0:10"
									},
									"scope": 1689,
									"src": "450:91:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "012c911e",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTicket",
									"nameLocation": "609:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "627:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "619:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "639:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "631:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "663:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "655:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:60:10"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "686:0:10"
									},
									"scope": 1689,
									"src": "600:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6ebd327b",
									"id": 1688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTicketFrom",
									"nameLocation": "706:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "728:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "720:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "_fromAddress",
												"nameLocation": "740:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "732:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "761:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "753:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "785:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "777:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:81:10"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:10"
									},
									"scope": 1689,
									"src": "697:112:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1690,
							"src": "123:692:10",
							"usedErrors": [],
							"usedEvents": [
								1645,
								1659
							]
						}
					],
					"src": "93:722:10"
				},
				"id": 10
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ItaskCallee.sol",
					"exportedSymbols": {
						"ItaskCallee": [
							1701
						]
					},
					"id": 1702,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ItaskCallee",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1701,
							"linearizedBaseContracts": [
								1701
							],
							"name": "ItaskCallee",
							"nameLocation": "73:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e1ac8d26",
									"id": 1700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "taskCall",
									"nameLocation": "130:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "147:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "139:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "169:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "154:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "154:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:36:11"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "193:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:9:11"
									},
									"scope": 1701,
									"src": "121:81:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1702,
							"src": "63:141:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:168:11"
				},
				"id": 11
			}
		}
	}
}