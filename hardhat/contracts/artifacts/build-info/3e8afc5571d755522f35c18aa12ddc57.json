{
	"id": "3e8afc5571d755522f35c18aa12ddc57",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/TaskControlDirect.sol": {
				"content": "    // SPDX-License-Identifier: MIT\n    // Compatible with OpenZeppelin Contracts ^5.0.0\n    pragma solidity ^0.8.19;\n\n    import \"@openzeppelin/contracts/access/Ownable.sol\";\n    import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n    import \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n    import \"./interfaces/IRedEnvelope.sol\";\n    import \"./interfaces/ITaskControlDirect.sol\";\n    import \"./interfaces/ItaskCallee.sol\";\n\n    contract TaskControlDirect is ITaskControlDirect,ReentrancyGuard, Ownable {\n        address public redEnvelopeAddr;\n        bool public allowBuyTicket;\n        bool public allowSendTicket;\n        uint256 public price;\n\n        mapping(address => uint256) private _tasks;     //记录任务及权重\n\n        event TaskAdd(address taskAddr,uint256 weight);\n\n        constructor(address _redEnvelopeAddr,bool _allowBuyTicket,bool _allowSendTicket,uint256 _price)\n            Ownable(address(msg.sender))\n        {\n            //_mint(msg.sender, 10000 * 10 ** decimals());\n            redEnvelopeAddr = _redEnvelopeAddr;\n            allowBuyTicket = _allowBuyTicket;\n            allowSendTicket = _allowSendTicket;\n            price = _price;\n        }\n\n        //设置任务及权重，若权重为0，则等同删除任务\n        function setTask(address _taskAddr,uint256 _weight)external onlyOwner{\n            _tasks[_taskAddr] = _weight;\n            emit TaskAdd(_taskAddr, _weight);\n        }\n\n        function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){\n            bool buy = true;\n            RedEnvelope memory redEnvelope = IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id);\n            if (redEnvelope.sendAllowAddr == address(0)){      \n                require(allowBuyTicket == true, \"buy ticket no allow\");\n                uint256 approveAmount = redEnvelope.ticketPirce * _ticketNumbers;\n                IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount);       \n                IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers);\n            }else{\n                require(allowSendTicket == true, \"send ticket no allow\");                \n                IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers);\n                buy = false;\n            }\n            return buy;\n        }\n\n        function getTicket(uint256 _id,address _taskAddr,address _receiveAddress,bytes calldata _data)external{\n            require(_tasks[_taskAddr] != 0,\"no set as task\");\n            //实际获取ticket数为runTask返回值*权重/price\n            uint256 ticketNumbers = ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr] / price;\n            bool buy = _getTicket(_id,_receiveAddress,ticketNumbers);\n            emit TicketGet(_id,_taskAddr,address(msg.sender), _receiveAddress,ticketNumbers,buy);\n        }\n\n        //提取第三方代币\n        function withdraw(address _token,address _to,uint256 _value)external onlyOwner{\n            IERC20(_token).transfer(_to,_value);\n        }\n    }"
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.19;\n\ninterface ItaskCallee{\n    //执行具体领取任务\n    function taskCall(address sender,bytes calldata data) external  returns(uint256);\n}\n"
			},
			"contracts/interfaces/ITaskControlDirect.sol": {
				"content": "    // SPDX-License-Identifier: MIT\n    // Compatible with OpenZeppelin Contracts ^5.0.0\n    pragma solidity ^0.8.19;\n\n    interface ITaskControlDirect  {\n        event TicketGet(uint256 id,address taskAddr, address fromAddress,address receiveAddress,uint256 ticketNumbers,bool buy);\n        \n        //执行任务，并领取指定红包的投注\n        function getTicket(uint256 _id,address _taskAddr,address _receiveAddress,bytes calldata data)external;\n    }"
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity ^0.8.19;\r\n\r\n\r\n\r\nenum Status {\r\n    Pending,\r\n    Open,\r\n    Close,\r\n    Claimable\r\n}\r\nstruct RedEnvelope{\r\n    address ticketToken;\r\n    Status status;\r\n    uint256 endTime;\r\n    uint256 maxTickets;\r\n    uint256 maxPrizeNum;    //最大中奖数\r\n    uint256 buyTickets;    //用户购买投注数\r\n    uint256 sendTickets;     //用户获取投注数\r\n    uint256 injectTickets;  //捐赠数\r\n    uint256 userAddrNum;\r\n    uint256 userTxNum;\r\n    uint256 injectAddrNum;\r\n    uint256 ticketPirce;\r\n    address sendAllowAddr;  //可调用领取接口的地址，若设置非0x0，则仅允许getTickets，否则仅允许buyTickets\r\n    uint256 secret;\r\n    bool autoClaim; \r\n}\r\n\r\nstruct Ticket{\r\n    uint256 totalNumbers;\r\n    address receiveAddress;\r\n    bool buy;\r\n}\r\n\r\ninterface IRedEnvelope{\r\n event RedEnvelopeCreated(\r\n        uint256 indexed id,\r\n        uint256 endTime,\r\n        uint256 maxTickets, \r\n        uint256 maxPrizeNum,\r\n        uint256 ticketPirce,\r\n        address ticketToken,\r\n        address sendAllowAddr,\r\n        bool autoClaim\r\n    );\r\n\r\n    event RedEnvelopeClosed(\r\n        uint256 indexed id,\r\n        uint256 endTime,\r\n        uint256 buyTickets,\r\n        uint256 sendTickets,\r\n        uint256 injectTickets\r\n    );\r\n\r\n    event RedEnvelopeClaimable(\r\n        uint256 indexed id,\r\n        uint256 endTime\r\n    );\r\n\r\n    //ticketIndex表明购注的起始编号\r\n    //若ticketIndex为23，ticketNumbers为1，则奖注的编号为23\r\n    //若ticketIndex为0，ticketNumbers为10，则奖注的编号为0-9\r\n    event TicketsPurchase(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        address indexed receiveAddress,\r\n        uint256 ticketIndex,    \r\n        uint256 ticketNumbers\r\n    );\r\n\r\n    event TicketsGet(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        address indexed receiveAddress,\r\n        uint256 ticketIndex,\r\n        uint256 ticketNumbers\r\n    );\r\n\r\n    event TicketsInject(\r\n        uint256 indexed id,\r\n        address indexed sender,\r\n        uint256 ticketNumbers\r\n    );\r\n\r\n\r\n    event PrizeDrawn(\r\n        uint256 indexed id,\r\n        address indexed winner,\r\n        uint256 indexed index,\r\n        uint256 amount,\r\n        bool autoClaim\r\n    );\r\n\r\n    event ClaimPrize(\r\n        uint256 indexed id,\r\n        address indexed winner,\r\n        uint256 totalAmount,\r\n        bool autoClaim\r\n    );\r\n    /**\r\n     * @notice create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式\r\n     * @dev Callable by operator\r\n     * @param _endTime: endTime of the RedEnvelope，0 = no limit\r\n     * @param _maxTickets: max ticket of the RedEnvelope，0 = no limit\r\n     * @param _maxPrizeNum: prize num of the RedEnvelope，0为100%中奖\r\n     * @param _secret: \r\n     */\r\n    function createRedEnvelope(\r\n        uint256 _endTime,\r\n        uint256 _maxTickets,\r\n        uint256 _maxPrizeNum,\r\n        uint256 _secret\r\n    )external;\r\n    \r\n    //精细化创建红包，指定该批次红包的代币及奖注价格，\r\n    function createRedEnvelopeDetail(\r\n        address _tokenAddress,  //代币地址\r\n        uint256 _ticketPirce,\r\n        uint256 _endTime,\r\n        uint256 _maxTickets,\r\n        uint256 _maxPrizeNum,\r\n        address _injectAddress,     //可在创建活动时即向该红包奖池捐赠代币，需approve额度\r\n        uint256 _injectTicketNum,   //初始化时捐赠额度，0为不捐赠\r\n        address _sendAllowAddr,     //若为0x0，则表明为buyTickets模式，仅允许buyTickets；若为非0x0地址，则为sendTickets模式，仅允许_sendTicketAddr地址对第三方通过sendTickets赠送奖注\r\n        uint256 _secret,\r\n        bool _autoClaim             //是否自动领取，若为false，需要中奖用户自行通过claimPrize领奖\r\n    )external;\r\n\r\n    //向奖池捐赠资产额度，不参与抽奖，任何地址可调用，需要approve授权\r\n    function injectTickets(uint256 _id,uint256 _ticketNumbers)external;\r\n\r\n    //在sendTickets模式下可被SendAllowAddr地址调用，指定领取奖注额度\r\n    function sendTickets(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external;\r\n\r\n    //在buyTickets模式下可被任何地址调用，需要approve额度\r\n    function buyTickets(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)external;\r\n\r\n    //结束投注，调用后该红包不再接受injectTickets/getTickets/buyTickets\r\n    function endRedEnvelope(uint256 _id)external;\r\n\r\n    //开奖，若_autoClaim为true，则自动向中奖用户派奖\r\n    function drawPrize(uint256 _id,uint256 _nonce)external;\r\n\r\n    //开奖后，若_autoClaim为false，需要中奖用户调用该接口手动领奖\r\n    function claimPrize(uint256 _id)external;\r\n\r\n    //查询指定红包状态\r\n    function viewRedEnvelopeStatus(uint256 _id)external view  returns (uint);\r\n    //查询最新红包id\r\n    function viewCurrentRedEnvelopeId() external view returns(uint256);\r\n    //查询红包详情\r\n    function viewRedEnvelope(uint256 _id)external view returns (RedEnvelope memory);\r\n    //查询指定用户可领取的中奖金额\r\n    function viewRedEnvelopeClaimPrize(uint256 _id,address _user)external view returns(uint256);\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 944,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TaskControlDirect.sol": {
				"TaskControlDirect": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_redEnvelopeAddr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_allowBuyTicket",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_allowSendTicket",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "TaskAdd",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fromAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "buy",
									"type": "bool"
								}
							],
							"name": "TicketGet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "allowBuyTicket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allowSendTicket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "getTicket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redEnvelopeAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "setTask",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TaskControlDirect.sol\":442:3099  contract TaskControlDirect is ITaskControlDirect,ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TaskControlDirect.sol\":808:1193  constructor(address _redEnvelopeAddr,bool _allowBuyTicket,bool _allowSendTicket,uint256 _price)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  sstore\n    /* \"contracts/TaskControlDirect.sol\":932:942  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":844:895   */\n  mstore\n    /* \"#utility.yul\":817:835   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/TaskControlDirect.sol\":1026:1041  redEnvelopeAddr */\n  0x02\n    /* \"contracts/TaskControlDirect.sol\":1026:1060  redEnvelopeAddr = _redEnvelopeAddr */\n  dup1\n  sload\n    /* \"contracts/TaskControlDirect.sol\":1120:1154  allowSendTicket = _allowSendTicket */\n  swap3\n  iszero\n  iszero\n  shl(0xa8, 0x01)\n  mul\n  not(shl(0xa8, 0xff))\n    /* \"contracts/TaskControlDirect.sol\":1074:1106  allowBuyTicket = _allowBuyTicket */\n  swap5\n  iszero\n  iszero\n  shl(0xa0, 0x01)\n  mul\n  not(sub(shl(0xa8, 0x01), 0x01))\n  swap1\n  swap5\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/TaskControlDirect.sol\":1026:1060  redEnvelopeAddr = _redEnvelopeAddr */\n  swap1\n  swap7\n  and\n    /* \"contracts/TaskControlDirect.sol\":1074:1106  allowBuyTicket = _allowBuyTicket */\n  swap6\n  swap1\n  swap6\n  or\n  swap3\n  swap1\n  swap3\n  or\n    /* \"contracts/TaskControlDirect.sol\":1120:1154  allowSendTicket = _allowSendTicket */\n  swap3\n  swap1\n  swap3\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/TaskControlDirect.sol\":1168:1173  price */\n  0x03\n    /* \"contracts/TaskControlDirect.sol\":1168:1182  price = _price */\n  sstore\n    /* \"contracts/TaskControlDirect.sol\":442:3099  contract TaskControlDirect is ITaskControlDirect,ReentrancyGuard, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:178   */\ntag_17:\n    /* \"#utility.yul\":90:103   */\n  dup1\n  mload\n    /* \"#utility.yul\":139:152   */\n  dup1\n  iszero\n    /* \"#utility.yul\":132:153   */\n  iszero\n    /* \"#utility.yul\":122:154   */\n  dup2\n  eq\n    /* \"#utility.yul\":112:172   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":168:169   */\n  0x00\n    /* \"#utility.yul\":165:166   */\n  dup1\n    /* \"#utility.yul\":158:170   */\n  revert\n    /* \"#utility.yul\":112:172   */\ntag_20:\n    /* \"#utility.yul\":14:178   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":183:693   */\ntag_3:\n    /* \"#utility.yul\":274:280   */\n  0x00\n    /* \"#utility.yul\":282:288   */\n  dup1\n    /* \"#utility.yul\":290:296   */\n  0x00\n    /* \"#utility.yul\":298:304   */\n  dup1\n    /* \"#utility.yul\":351:354   */\n  0x80\n    /* \"#utility.yul\":339:348   */\n  dup6\n    /* \"#utility.yul\":330:337   */\n  dup8\n    /* \"#utility.yul\":326:349   */\n  sub\n    /* \"#utility.yul\":322:355   */\n  slt\n    /* \"#utility.yul\":319:372   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":365:366   */\n  dup1\n    /* \"#utility.yul\":358:370   */\n  revert\n    /* \"#utility.yul\":319:372   */\ntag_22:\n    /* \"#utility.yul\":394:410   */\n  dup5\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":439:470   */\n  dup2\n  and\n    /* \"#utility.yul\":429:471   */\n  dup2\n  eq\n    /* \"#utility.yul\":419:489   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":485:486   */\n  0x00\n    /* \"#utility.yul\":482:483   */\n  dup1\n    /* \"#utility.yul\":475:487   */\n  revert\n    /* \"#utility.yul\":419:489   */\ntag_23:\n    /* \"#utility.yul\":508:513   */\n  swap4\n  pop\n    /* \"#utility.yul\":532:578   */\n  tag_24\n    /* \"#utility.yul\":574:576   */\n  0x20\n    /* \"#utility.yul\":559:577   */\n  dup7\n  add\n    /* \"#utility.yul\":532:578   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":522:578   */\n  swap3\n  pop\n    /* \"#utility.yul\":597:643   */\n  tag_25\n    /* \"#utility.yul\":639:641   */\n  0x40\n    /* \"#utility.yul\":628:637   */\n  dup7\n    /* \"#utility.yul\":624:642   */\n  add\n    /* \"#utility.yul\":597:643   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":683:685   */\n  0x60\n    /* \"#utility.yul\":668:686   */\n  swap6\n  swap1\n  swap6\n  add\n    /* \"#utility.yul\":662:687   */\n  mload\n    /* \"#utility.yul\":183:693   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":698:901   */\ntag_18:\n    /* \"contracts/TaskControlDirect.sol\":442:3099  contract TaskControlDirect is ITaskControlDirect,ReentrancyGuard, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TaskControlDirect.sol\":442:3099  contract TaskControlDirect is ITaskControlDirect,ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa035b1fe\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb4309a9c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc7ff23bb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd9caed12\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x06e2a29a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x082921a5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x14c59b53\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TaskControlDirect.sol\":602:629  bool public allowSendTicket */\n    tag_3:\n      sload(0x02)\n      tag_14\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"contracts/TaskControlDirect.sol\":602:629  bool public allowSendTicket */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TaskControlDirect.sol\":1275:1442  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/TaskControlDirect.sol\":2378:2913  function getTicket(uint256 _id,address _taskAddr,address _receiveAddress,bytes calldata _data)external{... */\n    tag_5:\n      tag_18\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_18\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1767:1799   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1749:1800   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1737:1739   */\n      0x20\n        /* \"#utility.yul\":1722:1740   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_16\n        /* \"#utility.yul\":1603:1806   */\n      jump\n        /* \"contracts/TaskControlDirect.sol\":639:659  uint256 public price */\n    tag_8:\n      tag_32\n      sload(0x03)\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1957:1982   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1945:1947   */\n      0x20\n        /* \"#utility.yul\":1930:1948   */\n      add\n        /* \"contracts/TaskControlDirect.sol\":639:659  uint256 public price */\n      tag_16\n        /* \"#utility.yul\":1811:1988   */\n      jump\n        /* \"contracts/TaskControlDirect.sol\":566:592  bool public allowBuyTicket */\n    tag_9:\n      sload(0x02)\n      tag_14\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/TaskControlDirect.sol\":526:556  address public redEnvelopeAddr */\n    tag_10:\n      sload(0x02)\n      tag_28\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/TaskControlDirect.sol\":2955:3093  function withdraw(address _token,address _to,uint256 _value)external onlyOwner{... */\n    tag_11:\n      tag_18\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_18\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"contracts/TaskControlDirect.sol\":1275:1442  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TaskControlDirect.sol\":1358:1375  _tasks[_taskAddr] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":1358:1364  _tasks */\n      0x04\n        /* \"contracts/TaskControlDirect.sol\":1358:1375  _tasks[_taskAddr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/TaskControlDirect.sol\":1358:1385  _tasks[_taskAddr] = _weight */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/TaskControlDirect.sol\":1404:1431  TaskAdd(_taskAddr, _weight) */\n      dup2\n      mload\n        /* \"#utility.yul\":2880:2931   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2947:2965   */\n      dup3\n      add\n        /* \"#utility.yul\":2940:2974   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":1404:1431  TaskAdd(_taskAddr, _weight) */\n      0xd7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8\n      swap2\n        /* \"#utility.yul\":2853:2871   */\n      add\n        /* \"contracts/TaskControlDirect.sol\":1404:1431  TaskAdd(_taskAddr, _weight) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TaskControlDirect.sol\":1275:1442  function setTask(address _taskAddr,uint256 _weight)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TaskControlDirect.sol\":2378:2913  function getTicket(uint256 _id,address _taskAddr,address _receiveAddress,bytes calldata _data)external{... */\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TaskControlDirect.sol\":2502:2519  _tasks[_taskAddr] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":2502:2508  _tasks */\n      0x04\n        /* \"contracts/TaskControlDirect.sol\":2502:2519  _tasks[_taskAddr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/TaskControlDirect.sol\":2502:2524  _tasks[_taskAddr] != 0 */\n      swap1\n      sub\n        /* \"contracts/TaskControlDirect.sol\":2494:2542  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3187:3189   */\n      0x20\n        /* \"contracts/TaskControlDirect.sol\":2494:2542  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3169:3190   */\n      mstore\n        /* \"#utility.yul\":3226:3228   */\n      0x0e\n        /* \"#utility.yul\":3206:3224   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3199:3229   */\n      mstore\n      shl(0x90, 0x6e6f20736574206173207461736b)\n        /* \"#utility.yul\":3245:3263   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3238:3282   */\n      mstore\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      add\n        /* \"contracts/TaskControlDirect.sol\":2494:2542  require(_tasks[_taskAddr] != 0,\"no set as task\") */\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"contracts/TaskControlDirect.sol\":2729:2734  price */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TaskControlDirect.sol\":2709:2726  _tasks[_taskAddr] */\n      dup6\n      and\n        /* \"contracts/TaskControlDirect.sol\":2624:2645  uint256 ticketNumbers */\n      0x00\n        /* \"contracts/TaskControlDirect.sol\":2709:2726  _tasks[_taskAddr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":2709:2715  _tasks */\n      0x04\n        /* \"contracts/TaskControlDirect.sol\":2709:2726  _tasks[_taskAddr] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/TaskControlDirect.sol\":2648:2706  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      swap1\n      mload\n      shl(0xe1, 0x70d64693)\n      dup2\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":2624:2645  uint256 ticketNumbers */\n      swap3\n      swap5\n        /* \"contracts/TaskControlDirect.sol\":2729:2734  price */\n      swap4\n        /* \"contracts/TaskControlDirect.sol\":2709:2726  _tasks[_taskAddr] */\n      swap1\n      swap3\n      swap1\n      swap2\n        /* \"contracts/TaskControlDirect.sol\":2648:2679  ItaskCallee(_taskAddr).taskCall */\n      0xe1ac8d26\n      swap2\n        /* \"contracts/TaskControlDirect.sol\":2648:2706  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      tag_60\n      swap2\n        /* \"contracts/TaskControlDirect.sol\":2688:2698  msg.sender */\n      caller\n      swap2\n        /* \"contracts/TaskControlDirect.sol\":2700:2705  _data */\n      dup11\n      swap2\n      dup11\n      swap2\n        /* \"contracts/TaskControlDirect.sol\":2648:2706  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) */\n      add\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/TaskControlDirect.sol\":2648:2726  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr] */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/TaskControlDirect.sol\":2648:2734  ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr] / price */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/TaskControlDirect.sol\":2624:2734  uint256 ticketNumbers = ItaskCallee(_taskAddr).taskCall(address(msg.sender),_data) * _tasks[_taskAddr] / price */\n      swap1\n      pop\n        /* \"contracts/TaskControlDirect.sol\":2748:2756  bool buy */\n      0x00\n        /* \"contracts/TaskControlDirect.sol\":2759:2804  _getTicket(_id,_receiveAddress,ticketNumbers) */\n      tag_70\n        /* \"contracts/TaskControlDirect.sol\":2770:2773  _id */\n      dup8\n        /* \"contracts/TaskControlDirect.sol\":2774:2789  _receiveAddress */\n      dup7\n        /* \"contracts/TaskControlDirect.sol\":2790:2803  ticketNumbers */\n      dup5\n        /* \"contracts/TaskControlDirect.sol\":2759:2769  _getTicket */\n      tag_71\n        /* \"contracts/TaskControlDirect.sol\":2759:2804  _getTicket(_id,_receiveAddress,ticketNumbers) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/TaskControlDirect.sol\":2823:2902  TicketGet(_id,_taskAddr,address(msg.sender), _receiveAddress,ticketNumbers,buy) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4780:4805   */\n      dup10\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4879:4894   */\n      dup10\n      dup2\n      and\n        /* \"#utility.yul\":4874:4876   */\n      0x20\n        /* \"#utility.yul\":4859:4877   */\n      dup4\n      add\n        /* \"#utility.yul\":4852:4895   */\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":2855:2865  msg.sender */\n      caller\n        /* \"#utility.yul\":4911:4929   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":4904:4947   */\n      mstore\n        /* \"#utility.yul\":4983:4998   */\n      dup9\n      and\n        /* \"#utility.yul\":4978:4980   */\n      0x60\n        /* \"#utility.yul\":4963:4981   */\n      dup3\n      add\n        /* \"#utility.yul\":4956:4999   */\n      mstore\n        /* \"#utility.yul\":5030:5033   */\n      0x80\n        /* \"#utility.yul\":5015:5034   */\n      dup2\n      add\n        /* \"#utility.yul\":5008:5043   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":5087:5101   */\n      dup3\n      iszero\n        /* \"#utility.yul\":5080:5102   */\n      iszero\n        /* \"#utility.yul\":4832:4835   */\n      0xa0\n        /* \"#utility.yul\":5059:5078   */\n      dup3\n      add\n        /* \"#utility.yul\":5052:5103   */\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":2823:2902  TicketGet(_id,_taskAddr,address(msg.sender), _receiveAddress,ticketNumbers,buy) */\n      swap1\n      mload\n        /* \"#utility.yul\":5087:5101   */\n      swap2\n      swap3\n      pop\n        /* \"contracts/TaskControlDirect.sol\":2823:2902  TicketGet(_id,_taskAddr,address(msg.sender), _receiveAddress,ticketNumbers,buy) */\n      0xe9136042b7047d621d8d2ecf0455dfb179c78142db852170867e7fd65455995c\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":4767:4770   */\n      0xc0\n        /* \"contracts/TaskControlDirect.sol\":2823:2902  TicketGet(_id,_taskAddr,address(msg.sender), _receiveAddress,ticketNumbers,buy) */\n      add\n      swap1\n      log1\n        /* \"contracts/TaskControlDirect.sol\":2480:2913  {... */\n      pop\n      pop\n        /* \"contracts/TaskControlDirect.sol\":2378:2913  function getTicket(uint256 _id,address _taskAddr,address _receiveAddress,bytes calldata _data)external{... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TaskControlDirect.sol\":2955:3093  function withdraw(address _token,address _to,uint256 _value)external onlyOwner{... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/TaskControlDirect.sol\":3047:3082  IERC20(_token).transfer(_to,_value) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2898:2930   */\n      dup4\n      dup2\n      and\n        /* \"contracts/TaskControlDirect.sol\":3047:3082  IERC20(_token).transfer(_to,_value) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2880:2931   */\n      mstore\n        /* \"#utility.yul\":2947:2965   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2940:2974   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":3047:3070  IERC20(_token).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2853:2871   */\n      0x44\n      add\n        /* \"contracts/TaskControlDirect.sol\":3047:3082  IERC20(_token).transfer(_to,_value) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      pop\n        /* \"contracts/TaskControlDirect.sol\":2955:3093  function withdraw(address _token,address _to,uint256 _value)external onlyOwner{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1749:1800   */\n      mstore\n        /* \"#utility.yul\":1722:1740   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_58\n        /* \"#utility.yul\":1603:1806   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1749:1800   */\n      mstore\n        /* \"#utility.yul\":1722:1740   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_58\n        /* \"#utility.yul\":1603:1806   */\n      jump\n        /* \"contracts/TaskControlDirect.sol\":1452:2368  function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){... */\n    tag_71:\n        /* \"contracts/TaskControlDirect.sol\":1642:1657  redEnvelopeAddr */\n      sload(0x02)\n        /* \"contracts/TaskControlDirect.sol\":1629:1679  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      mload(0x40)\n      shl(0xe0, 0x8f91cd17)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1957:1982   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":1548:1552  bool */\n      0x00\n      swap2\n        /* \"contracts/TaskControlDirect.sol\":1578:1582  true */\n      0x01\n      swap2\n        /* \"contracts/TaskControlDirect.sol\":1548:1552  bool */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TaskControlDirect.sol\":1642:1657  redEnvelopeAddr */\n      and\n      swap1\n        /* \"contracts/TaskControlDirect.sol\":1629:1674  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope */\n      0x8f91cd17\n      swap1\n        /* \"#utility.yul\":1930:1948   */\n      0x24\n      add\n        /* \"contracts/TaskControlDirect.sol\":1629:1679  IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      0x01e0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/TaskControlDirect.sol\":1697:1722  redEnvelope.sendAllowAddr */\n      0x0180\n      dup2\n      add\n      mload\n        /* \"contracts/TaskControlDirect.sol\":1596:1679  RedEnvelope memory redEnvelope = IRedEnvelope(redEnvelopeAddr).viewRedEnvelope(_id) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TaskControlDirect.sol\":1697:1736  redEnvelope.sendAllowAddr == address(0) */\n      and\n        /* \"contracts/TaskControlDirect.sol\":1693:2334  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n      tag_107\n      jumpi\n        /* \"contracts/TaskControlDirect.sol\":1769:1783  allowBuyTicket */\n      sload(0x02)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TaskControlDirect.sol\":1769:1791  allowBuyTicket == true */\n      iszero\n      iszero\n        /* \"contracts/TaskControlDirect.sol\":1787:1791  true */\n      0x01\n        /* \"contracts/TaskControlDirect.sol\":1769:1791  allowBuyTicket == true */\n      eq\n        /* \"contracts/TaskControlDirect.sol\":1761:1815  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7700   */\n      0x20\n        /* \"contracts/TaskControlDirect.sol\":1761:1815  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7680:7701   */\n      mstore\n        /* \"#utility.yul\":7737:7739   */\n      0x13\n        /* \"#utility.yul\":7717:7735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7710:7740   */\n      mstore\n      shl(0x68, 0x627579207469636b6574206e6f20616c6c6f77)\n        /* \"#utility.yul\":7756:7774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7749:7798   */\n      mstore\n        /* \"#utility.yul\":7815:7833   */\n      0x64\n      add\n        /* \"contracts/TaskControlDirect.sol\":1761:1815  require(allowBuyTicket == true, \"buy ticket no allow\") */\n      tag_58\n        /* \"#utility.yul\":7496:7839   */\n      jump\n        /* \"contracts/TaskControlDirect.sol\":1761:1815  require(allowBuyTicket == true, \"buy ticket no allow\") */\n    tag_108:\n        /* \"contracts/TaskControlDirect.sol\":1833:1854  uint256 approveAmount */\n      0x00\n        /* \"contracts/TaskControlDirect.sol\":1883:1897  _ticketNumbers */\n      dup5\n        /* \"contracts/TaskControlDirect.sol\":1857:1868  redEnvelope */\n      dup3\n        /* \"contracts/TaskControlDirect.sol\":1857:1880  redEnvelope.ticketPirce */\n      0x0160\n      add\n      mload\n        /* \"contracts/TaskControlDirect.sol\":1857:1897  redEnvelope.ticketPirce * _ticketNumbers */\n      tag_111\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_111:\n        /* \"contracts/TaskControlDirect.sol\":1922:1945  redEnvelope.ticketToken */\n      dup3\n      mload\n        /* \"contracts/TaskControlDirect.sol\":1955:1970  redEnvelopeAddr */\n      sload(0x02)\n        /* \"contracts/TaskControlDirect.sol\":1915:1985  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/TaskControlDirect.sol\":1955:1970  redEnvelopeAddr */\n      swap2\n      dup3\n      and\n        /* \"contracts/TaskControlDirect.sol\":1915:1985  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2880:2931   */\n      mstore\n        /* \"#utility.yul\":2947:2965   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2940:2974   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":1833:1897  uint256 approveAmount = redEnvelope.ticketPirce * _ticketNumbers */\n      swap3\n      swap4\n      pop\n        /* \"contracts/TaskControlDirect.sol\":1915:1954  IERC20(redEnvelope.ticketToken).approve */\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":2853:2871   */\n      0x44\n      add\n        /* \"contracts/TaskControlDirect.sol\":1915:1985  IERC20(redEnvelope.ticketToken).approve(redEnvelopeAddr,approveAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_115:\n      pop\n        /* \"contracts/TaskControlDirect.sol\":2023:2038  redEnvelopeAddr */\n      sload(0x02)\n        /* \"contracts/TaskControlDirect.sol\":2010:2086  IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers) */\n      mload(0x40)\n      shl(0xe0, 0xc5e7bb33)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":8046:8071   */\n      dup10\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8107:8139   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":8087:8105   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8080:8140   */\n      mstore\n        /* \"#utility.yul\":8156:8174   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8149:8183   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":2023:2038  redEnvelopeAddr */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/TaskControlDirect.sol\":2010:2050  IRedEnvelope(redEnvelopeAddr).buyTickets */\n      0xc5e7bb33\n      swap1\n        /* \"#utility.yul\":8019:8037   */\n      0x64\n      add\n        /* \"contracts/TaskControlDirect.sol\":2010:2086  IRedEnvelope(redEnvelopeAddr).buyTickets(_id,_receiveAddress,_ticketNumbers) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TaskControlDirect.sol\":1737:2101  {      ... */\n      pop\n        /* \"contracts/TaskControlDirect.sol\":1693:2334  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n      jump(tag_121)\n    tag_107:\n        /* \"contracts/TaskControlDirect.sol\":2131:2146  allowSendTicket */\n      sload(0x02)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TaskControlDirect.sol\":2131:2154  allowSendTicket == true */\n      iszero\n      iszero\n        /* \"contracts/TaskControlDirect.sol\":2150:2154  true */\n      0x01\n        /* \"contracts/TaskControlDirect.sol\":2131:2154  allowSendTicket == true */\n      eq\n        /* \"contracts/TaskControlDirect.sol\":2123:2179  require(allowSendTicket == true, \"send ticket no allow\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8396:8398   */\n      0x20\n        /* \"contracts/TaskControlDirect.sol\":2123:2179  require(allowSendTicket == true, \"send ticket no allow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8378:8399   */\n      mstore\n        /* \"#utility.yul\":8435:8437   */\n      0x14\n        /* \"#utility.yul\":8415:8433   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8408:8438   */\n      mstore\n      shl(0x60, 0x73656e64207469636b6574206e6f20616c6c6f77)\n        /* \"#utility.yul\":8454:8472   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8447:8497   */\n      mstore\n        /* \"#utility.yul\":8514:8532   */\n      0x64\n      add\n        /* \"contracts/TaskControlDirect.sol\":2123:2179  require(allowSendTicket == true, \"send ticket no allow\") */\n      tag_58\n        /* \"#utility.yul\":8194:8538   */\n      jump\n        /* \"contracts/TaskControlDirect.sol\":2123:2179  require(allowSendTicket == true, \"send ticket no allow\") */\n    tag_122:\n        /* \"contracts/TaskControlDirect.sol\":2226:2241  redEnvelopeAddr */\n      sload(0x02)\n        /* \"contracts/TaskControlDirect.sol\":2213:2290  IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers) */\n      mload(0x40)\n      shl(0xe0, 0x5c42e0c5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":8046:8071   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8107:8139   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":8087:8105   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8080:8140   */\n      mstore\n        /* \"#utility.yul\":8156:8174   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8149:8183   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/TaskControlDirect.sol\":2226:2241  redEnvelopeAddr */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/TaskControlDirect.sol\":2213:2254  IRedEnvelope(redEnvelopeAddr).sendTickets */\n      0x5c42e0c5\n      swap1\n        /* \"#utility.yul\":8019:8037   */\n      0x64\n      add\n        /* \"contracts/TaskControlDirect.sol\":2213:2290  IRedEnvelope(redEnvelopeAddr).sendTickets(_id,_receiveAddress,_ticketNumbers) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TaskControlDirect.sol\":2314:2319  false */\n      0x00\n        /* \"contracts/TaskControlDirect.sol\":2308:2319  buy = false */\n      swap2\n      pop\n        /* \"contracts/TaskControlDirect.sol\":1693:2334  if (redEnvelope.sendAllowAddr == address(0)){      ... */\n    tag_121:\n      pop\n        /* \"contracts/TaskControlDirect.sol\":2354:2357  buy */\n      swap5\n        /* \"contracts/TaskControlDirect.sol\":1452:2368  function _getTicket(uint256 _id,address _receiveAddress,uint256 _ticketNumbers)internal returns(bool){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":206:337   */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":281:312   */\n      dup2\n      and\n        /* \"#utility.yul\":271:313   */\n      dup2\n      eq\n        /* \"#utility.yul\":261:331   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":327:328   */\n      0x00\n        /* \"#utility.yul\":324:325   */\n      dup1\n        /* \"#utility.yul\":317:329   */\n      revert\n        /* \"#utility.yul\":342:657   */\n    tag_20:\n        /* \"#utility.yul\":410:416   */\n      0x00\n        /* \"#utility.yul\":418:424   */\n      dup1\n        /* \"#utility.yul\":471:473   */\n      0x40\n        /* \"#utility.yul\":459:468   */\n      dup4\n        /* \"#utility.yul\":450:457   */\n      dup6\n        /* \"#utility.yul\":446:469   */\n      sub\n        /* \"#utility.yul\":442:474   */\n      slt\n        /* \"#utility.yul\":439:491   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":484:485   */\n      dup1\n        /* \"#utility.yul\":477:489   */\n      revert\n        /* \"#utility.yul\":439:491   */\n    tag_141:\n        /* \"#utility.yul\":526:535   */\n      dup3\n        /* \"#utility.yul\":513:536   */\n      calldataload\n        /* \"#utility.yul\":545:576   */\n      tag_142\n        /* \"#utility.yul\":570:575   */\n      dup2\n        /* \"#utility.yul\":545:576   */\n      tag_131\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":595:600   */\n      swap5\n        /* \"#utility.yul\":647:649   */\n      0x20\n        /* \"#utility.yul\":632:650   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":619:651   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":342:657   */\n      jump\t// out\n        /* \"#utility.yul\":662:1598   */\n    tag_24:\n        /* \"#utility.yul\":759:765   */\n      0x00\n        /* \"#utility.yul\":767:773   */\n      dup1\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":783:789   */\n      dup1\n        /* \"#utility.yul\":791:797   */\n      0x00\n        /* \"#utility.yul\":844:847   */\n      0x80\n        /* \"#utility.yul\":832:841   */\n      dup7\n        /* \"#utility.yul\":823:830   */\n      dup9\n        /* \"#utility.yul\":819:842   */\n      sub\n        /* \"#utility.yul\":815:848   */\n      slt\n        /* \"#utility.yul\":812:865   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":861:862   */\n      0x00\n        /* \"#utility.yul\":858:859   */\n      dup1\n        /* \"#utility.yul\":851:863   */\n      revert\n        /* \"#utility.yul\":812:865   */\n    tag_144:\n        /* \"#utility.yul\":897:906   */\n      dup6\n        /* \"#utility.yul\":884:907   */\n      calldataload\n        /* \"#utility.yul\":874:907   */\n      swap5\n      pop\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":946:955   */\n      dup7\n        /* \"#utility.yul\":942:960   */\n      add\n        /* \"#utility.yul\":929:961   */\n      calldataload\n        /* \"#utility.yul\":970:1001   */\n      tag_145\n        /* \"#utility.yul\":995:1000   */\n      dup2\n        /* \"#utility.yul\":970:1001   */\n      tag_131\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1020:1025   */\n      swap4\n      pop\n        /* \"#utility.yul\":1077:1079   */\n      0x40\n        /* \"#utility.yul\":1062:1080   */\n      dup7\n      add\n        /* \"#utility.yul\":1049:1081   */\n      calldataload\n        /* \"#utility.yul\":1090:1123   */\n      tag_146\n        /* \"#utility.yul\":1049:1081   */\n      dup2\n        /* \"#utility.yul\":1090:1123   */\n      tag_131\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1142:1149   */\n      swap3\n      pop\n        /* \"#utility.yul\":1200:1202   */\n      0x60\n        /* \"#utility.yul\":1185:1203   */\n      dup7\n      add\n        /* \"#utility.yul\":1172:1204   */\n      calldataload\n        /* \"#utility.yul\":1223:1241   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1253:1267   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1250:1284   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1280:1281   */\n      0x00\n        /* \"#utility.yul\":1277:1278   */\n      dup1\n        /* \"#utility.yul\":1270:1282   */\n      revert\n        /* \"#utility.yul\":1250:1284   */\n    tag_147:\n        /* \"#utility.yul\":1318:1324   */\n      dup2\n        /* \"#utility.yul\":1307:1316   */\n      dup9\n        /* \"#utility.yul\":1303:1325   */\n      add\n        /* \"#utility.yul\":1293:1325   */\n      swap2\n      pop\n        /* \"#utility.yul\":1363:1370   */\n      dup9\n        /* \"#utility.yul\":1356:1360   */\n      0x1f\n        /* \"#utility.yul\":1352:1354   */\n      dup4\n        /* \"#utility.yul\":1348:1361   */\n      add\n        /* \"#utility.yul\":1344:1371   */\n      slt\n        /* \"#utility.yul\":1334:1389   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1385:1386   */\n      0x00\n        /* \"#utility.yul\":1382:1383   */\n      dup1\n        /* \"#utility.yul\":1375:1387   */\n      revert\n        /* \"#utility.yul\":1334:1389   */\n    tag_148:\n        /* \"#utility.yul\":1425:1427   */\n      dup2\n        /* \"#utility.yul\":1412:1428   */\n      calldataload\n        /* \"#utility.yul\":1451:1453   */\n      dup2\n        /* \"#utility.yul\":1443:1449   */\n      dup2\n        /* \"#utility.yul\":1440:1454   */\n      gt\n        /* \"#utility.yul\":1437:1471   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1437:1471   */\n    tag_149:\n        /* \"#utility.yul\":1512:1519   */\n      dup10\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1498:1504   */\n      dup3\n        /* \"#utility.yul\":1494:1496   */\n      dup6\n        /* \"#utility.yul\":1490:1505   */\n      add\n        /* \"#utility.yul\":1486:1510   */\n      add\n        /* \"#utility.yul\":1483:1520   */\n      gt\n        /* \"#utility.yul\":1480:1537   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":1533:1534   */\n      0x00\n        /* \"#utility.yul\":1530:1531   */\n      dup1\n        /* \"#utility.yul\":1523:1535   */\n      revert\n        /* \"#utility.yul\":1480:1537   */\n    tag_150:\n        /* \"#utility.yul\":662:1598   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":1564:1566   */\n      0x20\n        /* \"#utility.yul\":1556:1567   */\n      add\n      swap5\n        /* \"#utility.yul\":1586:1592   */\n      swap4\n        /* \"#utility.yul\":662:1598   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1993:2449   */\n    tag_44:\n        /* \"#utility.yul\":2070:2076   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup1\n        /* \"#utility.yul\":2086:2092   */\n      0x00\n        /* \"#utility.yul\":2139:2141   */\n      0x60\n        /* \"#utility.yul\":2127:2136   */\n      dup5\n        /* \"#utility.yul\":2118:2125   */\n      dup7\n        /* \"#utility.yul\":2114:2137   */\n      sub\n        /* \"#utility.yul\":2110:2142   */\n      slt\n        /* \"#utility.yul\":2107:2159   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2155:2156   */\n      0x00\n        /* \"#utility.yul\":2152:2153   */\n      dup1\n        /* \"#utility.yul\":2145:2157   */\n      revert\n        /* \"#utility.yul\":2107:2159   */\n    tag_154:\n        /* \"#utility.yul\":2194:2203   */\n      dup4\n        /* \"#utility.yul\":2181:2204   */\n      calldataload\n        /* \"#utility.yul\":2213:2244   */\n      tag_155\n        /* \"#utility.yul\":2238:2243   */\n      dup2\n        /* \"#utility.yul\":2213:2244   */\n      tag_131\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2263:2268   */\n      swap3\n      pop\n        /* \"#utility.yul\":2320:2322   */\n      0x20\n        /* \"#utility.yul\":2305:2323   */\n      dup5\n      add\n        /* \"#utility.yul\":2292:2324   */\n      calldataload\n        /* \"#utility.yul\":2333:2366   */\n      tag_156\n        /* \"#utility.yul\":2292:2324   */\n      dup2\n        /* \"#utility.yul\":2333:2366   */\n      tag_131\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1993:2449   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2385:2392   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2439:2441   */\n      0x40\n        /* \"#utility.yul\":2424:2442   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2411:2443   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1993:2449   */\n      jump\t// out\n        /* \"#utility.yul\":2454:2701   */\n    tag_48:\n        /* \"#utility.yul\":2513:2519   */\n      0x00\n        /* \"#utility.yul\":2566:2568   */\n      0x20\n        /* \"#utility.yul\":2554:2563   */\n      dup3\n        /* \"#utility.yul\":2545:2552   */\n      dup5\n        /* \"#utility.yul\":2541:2564   */\n      sub\n        /* \"#utility.yul\":2537:2569   */\n      slt\n        /* \"#utility.yul\":2534:2586   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2579:2580   */\n      dup1\n        /* \"#utility.yul\":2572:2584   */\n      revert\n        /* \"#utility.yul\":2534:2586   */\n    tag_158:\n        /* \"#utility.yul\":2621:2630   */\n      dup2\n        /* \"#utility.yul\":2608:2631   */\n      calldataload\n        /* \"#utility.yul\":2640:2671   */\n      tag_159\n        /* \"#utility.yul\":2665:2670   */\n      dup2\n        /* \"#utility.yul\":2640:2671   */\n      tag_131\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2690:2695   */\n      swap4\n        /* \"#utility.yul\":2454:2701   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3328:3813   */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3513:3545   */\n      dup5\n      and\n        /* \"#utility.yul\":3495:3546   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3582:3584   */\n      0x40\n        /* \"#utility.yul\":3577:3579   */\n      0x20\n        /* \"#utility.yul\":3562:3580   */\n      dup3\n      add\n        /* \"#utility.yul\":3555:3585   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3601:3619   */\n      dup2\n      add\n        /* \"#utility.yul\":3594:3628   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3621:3627   */\n      dup2\n        /* \"#utility.yul\":3670:3676   */\n      dup4\n        /* \"#utility.yul\":3665:3667   */\n      0x60\n        /* \"#utility.yul\":3650:3668   */\n      dup4\n      add\n        /* \"#utility.yul\":3637:3685   */\n      calldatacopy\n        /* \"#utility.yul\":3734:3735   */\n      0x00\n        /* \"#utility.yul\":3705:3727   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":3729:3731   */\n      0x60\n        /* \"#utility.yul\":3701:3732   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":3694:3736   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3797:3799   */\n      0x1f\n        /* \"#utility.yul\":3776:3791   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3772:3801   */\n      and\n        /* \"#utility.yul\":3757:3802   */\n      add\n        /* \"#utility.yul\":3753:3807   */\n      add\n      swap3\n        /* \"#utility.yul\":3328:3813   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4002   */\n    tag_65:\n        /* \"#utility.yul\":3888:3894   */\n      0x00\n        /* \"#utility.yul\":3941:3943   */\n      0x20\n        /* \"#utility.yul\":3929:3938   */\n      dup3\n        /* \"#utility.yul\":3920:3927   */\n      dup5\n        /* \"#utility.yul\":3916:3939   */\n      sub\n        /* \"#utility.yul\":3912:3944   */\n      slt\n        /* \"#utility.yul\":3909:3961   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":3957:3958   */\n      0x00\n        /* \"#utility.yul\":3954:3955   */\n      dup1\n        /* \"#utility.yul\":3947:3959   */\n      revert\n        /* \"#utility.yul\":3909:3961   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":3980:3996   */\n      mload\n      swap2\n        /* \"#utility.yul\":3818:4002   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4007:4272   */\n    tag_67:\n        /* \"#utility.yul\":4080:4089   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4111:4120   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4128:4143   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4122:4144   */\n      dup5\n      eq\n        /* \"#utility.yul\":4108:4145   */\n      or\n        /* \"#utility.yul\":4098:4266   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":4188:4198   */\n      0x4e487b71\n        /* \"#utility.yul\":4183:4186   */\n      0xe0\n        /* \"#utility.yul\":4179:4199   */\n      shl\n        /* \"#utility.yul\":4176:4177   */\n      0x00\n        /* \"#utility.yul\":4169:4200   */\n      mstore\n        /* \"#utility.yul\":4223:4227   */\n      0x11\n        /* \"#utility.yul\":4220:4221   */\n      0x04\n        /* \"#utility.yul\":4213:4228   */\n      mstore\n        /* \"#utility.yul\":4251:4255   */\n      0x24\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4241:4256   */\n      revert\n        /* \"#utility.yul\":4098:4266   */\n    tag_166:\n        /* \"#utility.yul\":4007:4272   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4277:4494   */\n    tag_69:\n        /* \"#utility.yul\":4317:4318   */\n      0x00\n        /* \"#utility.yul\":4343:4344   */\n      dup3\n        /* \"#utility.yul\":4333:4465   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":4387:4397   */\n      0x4e487b71\n        /* \"#utility.yul\":4382:4385   */\n      0xe0\n        /* \"#utility.yul\":4378:4398   */\n      shl\n        /* \"#utility.yul\":4375:4376   */\n      0x00\n        /* \"#utility.yul\":4368:4399   */\n      mstore\n        /* \"#utility.yul\":4422:4426   */\n      0x12\n        /* \"#utility.yul\":4419:4420   */\n      0x04\n        /* \"#utility.yul\":4412:4427   */\n      mstore\n        /* \"#utility.yul\":4450:4454   */\n      0x24\n        /* \"#utility.yul\":4447:4448   */\n      0x00\n        /* \"#utility.yul\":4440:4455   */\n      revert\n        /* \"#utility.yul\":4333:4465   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":4479:4488   */\n      div\n      swap1\n        /* \"#utility.yul\":4277:4494   */\n      jump\t// out\n        /* \"#utility.yul\":5114:5278   */\n    tag_132:\n        /* \"#utility.yul\":5190:5203   */\n      dup1\n      mload\n        /* \"#utility.yul\":5239:5252   */\n      dup1\n      iszero\n        /* \"#utility.yul\":5232:5253   */\n      iszero\n        /* \"#utility.yul\":5222:5254   */\n      dup2\n      eq\n        /* \"#utility.yul\":5212:5272   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      dup1\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5212:5272   */\n    tag_171:\n        /* \"#utility.yul\":5114:5278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5283:5485   */\n    tag_87:\n        /* \"#utility.yul\":5350:5356   */\n      0x00\n        /* \"#utility.yul\":5403:5405   */\n      0x20\n        /* \"#utility.yul\":5391:5400   */\n      dup3\n        /* \"#utility.yul\":5382:5389   */\n      dup5\n        /* \"#utility.yul\":5378:5401   */\n      sub\n        /* \"#utility.yul\":5374:5406   */\n      slt\n        /* \"#utility.yul\":5371:5423   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5416:5417   */\n      dup1\n        /* \"#utility.yul\":5409:5421   */\n      revert\n        /* \"#utility.yul\":5371:5423   */\n    tag_173:\n        /* \"#utility.yul\":5442:5479   */\n      tag_159\n        /* \"#utility.yul\":5469:5478   */\n      dup3\n        /* \"#utility.yul\":5442:5479   */\n      tag_132\n      jump\t// in\n        /* \"#utility.yul\":5490:5834   */\n    tag_133:\n        /* \"#utility.yul\":5557:5559   */\n      0x40\n        /* \"#utility.yul\":5551:5560   */\n      mload\n        /* \"#utility.yul\":5599:5602   */\n      0x01e0\n        /* \"#utility.yul\":5587:5603   */\n      dup2\n      add\n        /* \"#utility.yul\":5633:5651   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5618:5652   */\n      dup2\n      gt\n        /* \"#utility.yul\":5654:5676   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":5615:5677   */\n      or\n        /* \"#utility.yul\":5612:5797   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5719:5729   */\n      0x4e487b71\n        /* \"#utility.yul\":5714:5717   */\n      0xe0\n        /* \"#utility.yul\":5710:5730   */\n      shl\n        /* \"#utility.yul\":5707:5708   */\n      0x00\n        /* \"#utility.yul\":5700:5731   */\n      mstore\n        /* \"#utility.yul\":5754:5758   */\n      0x41\n        /* \"#utility.yul\":5751:5752   */\n      0x04\n        /* \"#utility.yul\":5744:5759   */\n      mstore\n        /* \"#utility.yul\":5782:5786   */\n      0x24\n        /* \"#utility.yul\":5779:5780   */\n      0x00\n        /* \"#utility.yul\":5772:5787   */\n      revert\n        /* \"#utility.yul\":5612:5797   */\n    tag_176:\n        /* \"#utility.yul\":5813:5815   */\n      0x40\n        /* \"#utility.yul\":5806:5828   */\n      mstore\n        /* \"#utility.yul\":5490:5834   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5839:5977   */\n    tag_134:\n        /* \"#utility.yul\":5918:5931   */\n      dup1\n      mload\n        /* \"#utility.yul\":5940:5971   */\n      tag_171\n        /* \"#utility.yul\":5918:5931   */\n      dup2\n        /* \"#utility.yul\":5940:5971   */\n      tag_131\n      jump\t// in\n        /* \"#utility.yul\":5982:6133   */\n    tag_135:\n        /* \"#utility.yul\":6065:6078   */\n      dup1\n      mload\n        /* \"#utility.yul\":6107:6108   */\n      0x04\n        /* \"#utility.yul\":6097:6109   */\n      dup2\n      lt\n        /* \"#utility.yul\":6087:6127   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":6123:6124   */\n      0x00\n        /* \"#utility.yul\":6120:6121   */\n      dup1\n        /* \"#utility.yul\":6113:6125   */\n      revert\n        /* \"#utility.yul\":6138:7491   */\n    tag_106:\n        /* \"#utility.yul\":6237:6243   */\n      0x00\n        /* \"#utility.yul\":6290:6293   */\n      0x01e0\n        /* \"#utility.yul\":6278:6287   */\n      dup3\n        /* \"#utility.yul\":6269:6276   */\n      dup5\n        /* \"#utility.yul\":6265:6288   */\n      sub\n        /* \"#utility.yul\":6261:6294   */\n      slt\n        /* \"#utility.yul\":6258:6311   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":6307:6308   */\n      0x00\n        /* \"#utility.yul\":6304:6305   */\n      dup1\n        /* \"#utility.yul\":6297:6309   */\n      revert\n        /* \"#utility.yul\":6258:6311   */\n    tag_182:\n        /* \"#utility.yul\":6333:6350   */\n      tag_183\n      tag_133\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6373:6413   */\n      tag_184\n        /* \"#utility.yul\":6403:6412   */\n      dup4\n        /* \"#utility.yul\":6373:6413   */\n      tag_134\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6366:6371   */\n      dup2\n        /* \"#utility.yul\":6359:6414   */\n      mstore\n        /* \"#utility.yul\":6446:6499   */\n      tag_185\n        /* \"#utility.yul\":6495:6497   */\n      0x20\n        /* \"#utility.yul\":6484:6493   */\n      dup5\n        /* \"#utility.yul\":6480:6498   */\n      add\n        /* \"#utility.yul\":6446:6499   */\n      tag_135\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6441:6443   */\n      0x20\n        /* \"#utility.yul\":6434:6439   */\n      dup3\n        /* \"#utility.yul\":6430:6444   */\n      add\n        /* \"#utility.yul\":6423:6500   */\n      mstore\n        /* \"#utility.yul\":6553:6555   */\n      0x40\n        /* \"#utility.yul\":6542:6551   */\n      dup4\n        /* \"#utility.yul\":6538:6556   */\n      add\n        /* \"#utility.yul\":6532:6557   */\n      mload\n        /* \"#utility.yul\":6527:6529   */\n      0x40\n        /* \"#utility.yul\":6520:6525   */\n      dup3\n        /* \"#utility.yul\":6516:6530   */\n      add\n        /* \"#utility.yul\":6509:6558   */\n      mstore\n        /* \"#utility.yul\":6611:6613   */\n      0x60\n        /* \"#utility.yul\":6600:6609   */\n      dup4\n        /* \"#utility.yul\":6596:6614   */\n      add\n        /* \"#utility.yul\":6590:6615   */\n      mload\n        /* \"#utility.yul\":6585:6587   */\n      0x60\n        /* \"#utility.yul\":6578:6583   */\n      dup3\n        /* \"#utility.yul\":6574:6588   */\n      add\n        /* \"#utility.yul\":6567:6616   */\n      mstore\n        /* \"#utility.yul\":6670:6673   */\n      0x80\n        /* \"#utility.yul\":6659:6668   */\n      dup4\n        /* \"#utility.yul\":6655:6674   */\n      add\n        /* \"#utility.yul\":6649:6675   */\n      mload\n        /* \"#utility.yul\":6643:6646   */\n      0x80\n        /* \"#utility.yul\":6636:6641   */\n      dup3\n        /* \"#utility.yul\":6632:6647   */\n      add\n        /* \"#utility.yul\":6625:6676   */\n      mstore\n        /* \"#utility.yul\":6730:6733   */\n      0xa0\n        /* \"#utility.yul\":6719:6728   */\n      dup4\n        /* \"#utility.yul\":6715:6734   */\n      add\n        /* \"#utility.yul\":6709:6735   */\n      mload\n        /* \"#utility.yul\":6703:6706   */\n      0xa0\n        /* \"#utility.yul\":6696:6701   */\n      dup3\n        /* \"#utility.yul\":6692:6707   */\n      add\n        /* \"#utility.yul\":6685:6736   */\n      mstore\n        /* \"#utility.yul\":6790:6793   */\n      0xc0\n        /* \"#utility.yul\":6779:6788   */\n      dup4\n        /* \"#utility.yul\":6775:6794   */\n      add\n        /* \"#utility.yul\":6769:6795   */\n      mload\n        /* \"#utility.yul\":6763:6766   */\n      0xc0\n        /* \"#utility.yul\":6756:6761   */\n      dup3\n        /* \"#utility.yul\":6752:6767   */\n      add\n        /* \"#utility.yul\":6745:6796   */\n      mstore\n        /* \"#utility.yul\":6850:6853   */\n      0xe0\n        /* \"#utility.yul\":6839:6848   */\n      dup4\n        /* \"#utility.yul\":6835:6854   */\n      add\n        /* \"#utility.yul\":6829:6855   */\n      mload\n        /* \"#utility.yul\":6823:6826   */\n      0xe0\n        /* \"#utility.yul\":6816:6821   */\n      dup3\n        /* \"#utility.yul\":6812:6827   */\n      add\n        /* \"#utility.yul\":6805:6856   */\n      mstore\n        /* \"#utility.yul\":6875:6878   */\n      0x0100\n        /* \"#utility.yul\":6931:6933   */\n      dup1\n        /* \"#utility.yul\":6920:6929   */\n      dup5\n        /* \"#utility.yul\":6916:6934   */\n      add\n        /* \"#utility.yul\":6910:6935   */\n      mload\n        /* \"#utility.yul\":6905:6907   */\n      dup2\n        /* \"#utility.yul\":6898:6903   */\n      dup4\n        /* \"#utility.yul\":6894:6908   */\n      add\n        /* \"#utility.yul\":6887:6936   */\n      mstore\n      pop\n        /* \"#utility.yul\":6955:6958   */\n      0x0120\n        /* \"#utility.yul\":7011:7013   */\n      dup1\n        /* \"#utility.yul\":7000:7009   */\n      dup5\n        /* \"#utility.yul\":6996:7014   */\n      add\n        /* \"#utility.yul\":6990:7015   */\n      mload\n        /* \"#utility.yul\":6985:6987   */\n      dup2\n        /* \"#utility.yul\":6978:6983   */\n      dup4\n        /* \"#utility.yul\":6974:6988   */\n      add\n        /* \"#utility.yul\":6967:7016   */\n      mstore\n      pop\n        /* \"#utility.yul\":7035:7038   */\n      0x0140\n        /* \"#utility.yul\":7091:7093   */\n      dup1\n        /* \"#utility.yul\":7080:7089   */\n      dup5\n        /* \"#utility.yul\":7076:7094   */\n      add\n        /* \"#utility.yul\":7070:7095   */\n      mload\n        /* \"#utility.yul\":7065:7067   */\n      dup2\n        /* \"#utility.yul\":7058:7063   */\n      dup4\n        /* \"#utility.yul\":7054:7068   */\n      add\n        /* \"#utility.yul\":7047:7096   */\n      mstore\n      pop\n        /* \"#utility.yul\":7115:7118   */\n      0x0160\n        /* \"#utility.yul\":7171:7173   */\n      dup1\n        /* \"#utility.yul\":7160:7169   */\n      dup5\n        /* \"#utility.yul\":7156:7174   */\n      add\n        /* \"#utility.yul\":7150:7175   */\n      mload\n        /* \"#utility.yul\":7145:7147   */\n      dup2\n        /* \"#utility.yul\":7138:7143   */\n      dup4\n        /* \"#utility.yul\":7134:7148   */\n      add\n        /* \"#utility.yul\":7127:7176   */\n      mstore\n      pop\n        /* \"#utility.yul\":7195:7198   */\n      0x0180\n        /* \"#utility.yul\":7230:7279   */\n      tag_186\n        /* \"#utility.yul\":7275:7277   */\n      dup2\n        /* \"#utility.yul\":7264:7273   */\n      dup6\n        /* \"#utility.yul\":7260:7278   */\n      add\n        /* \"#utility.yul\":7230:7279   */\n      tag_134\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7214:7228   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7207:7280   */\n      mstore\n        /* \"#utility.yul\":7299:7302   */\n      0x01a0\n        /* \"#utility.yul\":7340:7358   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":7334:7359   */\n      mload\n        /* \"#utility.yul\":7318:7332   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7311:7360   */\n      mstore\n        /* \"#utility.yul\":7379:7382   */\n      0x01c0\n        /* \"#utility.yul\":7414:7460   */\n      tag_187\n        /* \"#utility.yul\":7441:7459   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":7414:7460   */\n      tag_132\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":7398:7412   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7391:7461   */\n      mstore\n        /* \"#utility.yul\":7402:7407   */\n      swap4\n        /* \"#utility.yul\":6138:7491   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ff2fe5246ad3f442e076a00e5d97a324ecad723bb82dd61da38cad0e595cfa0b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 175,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_boolt_boolt_uint256_fromMemory": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:903:11",
										"nodeType": "YulBlock",
										"src": "0:903:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "71:107:11",
													"nodeType": "YulBlock",
													"src": "71:107:11",
													"statements": [
														{
															"nativeSrc": "81:22:11",
															"nodeType": "YulAssignment",
															"src": "81:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "96:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "96:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "90:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "90:5:11"
																},
																"nativeSrc": "90:13:11",
																"nodeType": "YulFunctionCall",
																"src": "90:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "81:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "81:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "156:16:11",
																"nodeType": "YulBlock",
																"src": "156:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "165:1:11",
																					"nodeType": "YulLiteral",
																					"src": "165:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "168:1:11",
																					"nodeType": "YulLiteral",
																					"src": "168:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "158:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "158:6:11"
																			},
																			"nativeSrc": "158:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "158:12:11"
																		},
																		"nativeSrc": "158:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "158:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "125:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "125:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "146:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "146:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "139:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "139:6:11"
																						},
																						"nativeSrc": "139:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "139:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "132:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "132:6:11"
																				},
																				"nativeSrc": "132:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "132:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "122:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "122:2:11"
																		},
																		"nativeSrc": "122:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "122:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "115:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "115:6:11"
																},
																"nativeSrc": "115:40:11",
																"nodeType": "YulFunctionCall",
																"src": "115:40:11"
															},
															"nativeSrc": "112:60:11",
															"nodeType": "YulIf",
															"src": "112:60:11"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nativeSrc": "14:164:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "50:6:11",
														"nodeType": "YulTypedName",
														"src": "50:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "61:5:11",
														"nodeType": "YulTypedName",
														"src": "61:5:11",
														"type": ""
													}
												],
												"src": "14:164:11"
											},
											{
												"body": {
													"nativeSrc": "309:384:11",
													"nodeType": "YulBlock",
													"src": "309:384:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "356:16:11",
																"nodeType": "YulBlock",
																"src": "356:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "365:1:11",
																					"nodeType": "YulLiteral",
																					"src": "365:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "368:1:11",
																					"nodeType": "YulLiteral",
																					"src": "368:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "358:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:11"
																			},
																			"nativeSrc": "358:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "358:12:11"
																		},
																		"nativeSrc": "358:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "330:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "330:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "339:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "339:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "326:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "326:3:11"
																		},
																		"nativeSrc": "326:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "326:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "351:3:11",
																		"nodeType": "YulLiteral",
																		"src": "351:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "322:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "322:3:11"
																},
																"nativeSrc": "322:33:11",
																"nodeType": "YulFunctionCall",
																"src": "322:33:11"
															},
															"nativeSrc": "319:53:11",
															"nodeType": "YulIf",
															"src": "319:53:11"
														},
														{
															"nativeSrc": "381:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "381:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "400:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "400:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "394:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "394:5:11"
																},
																"nativeSrc": "394:16:11",
																"nodeType": "YulFunctionCall",
																"src": "394:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "385:5:11",
																	"nodeType": "YulTypedName",
																	"src": "385:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "473:16:11",
																"nodeType": "YulBlock",
																"src": "473:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "482:1:11",
																					"nodeType": "YulLiteral",
																					"src": "482:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "485:1:11",
																					"nodeType": "YulLiteral",
																					"src": "485:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "475:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "475:6:11"
																			},
																			"nativeSrc": "475:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "475:12:11"
																		},
																		"nativeSrc": "475:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "475:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "432:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "432:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "443:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "443:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "458:3:11",
																										"nodeType": "YulLiteral",
																										"src": "458:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "463:1:11",
																										"nodeType": "YulLiteral",
																										"src": "463:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "454:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "454:3:11"
																								},
																								"nativeSrc": "454:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "454:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "467:1:11",
																								"nodeType": "YulLiteral",
																								"src": "467:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "450:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "450:3:11"
																						},
																						"nativeSrc": "450:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "450:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "439:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "439:3:11"
																				},
																				"nativeSrc": "439:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "439:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "429:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "429:2:11"
																		},
																		"nativeSrc": "429:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "429:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:11"
																},
																"nativeSrc": "422:50:11",
																"nodeType": "YulFunctionCall",
																"src": "422:50:11"
															},
															"nativeSrc": "419:70:11",
															"nodeType": "YulIf",
															"src": "419:70:11"
														},
														{
															"nativeSrc": "498:15:11",
															"nodeType": "YulAssignment",
															"src": "498:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "508:5:11",
																"nodeType": "YulIdentifier",
																"src": "508:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "498:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "498:6:11"
																}
															]
														},
														{
															"nativeSrc": "522:56:11",
															"nodeType": "YulAssignment",
															"src": "522:56:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "563:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "563:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "574:2:11",
																				"nodeType": "YulLiteral",
																				"src": "574:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "559:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "559:3:11"
																		},
																		"nativeSrc": "559:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "559:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "532:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:26:11"
																},
																"nativeSrc": "532:46:11",
																"nodeType": "YulFunctionCall",
																"src": "532:46:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "522:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "522:6:11"
																}
															]
														},
														{
															"nativeSrc": "587:56:11",
															"nodeType": "YulAssignment",
															"src": "587:56:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "628:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "628:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "639:2:11",
																				"nodeType": "YulLiteral",
																				"src": "639:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "624:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "624:3:11"
																		},
																		"nativeSrc": "624:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "624:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "597:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "597:26:11"
																},
																"nativeSrc": "597:46:11",
																"nodeType": "YulFunctionCall",
																"src": "597:46:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "587:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:11"
																}
															]
														},
														{
															"nativeSrc": "652:35:11",
															"nodeType": "YulAssignment",
															"src": "652:35:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "672:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "672:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "683:2:11",
																				"nodeType": "YulLiteral",
																				"src": "683:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nativeSrc": "668:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "668:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "662:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "662:5:11"
																},
																"nativeSrc": "662:25:11",
																"nodeType": "YulFunctionCall",
																"src": "662:25:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "652:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "652:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_boolt_boolt_uint256_fromMemory",
												"nativeSrc": "183:510:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "251:9:11",
														"nodeType": "YulTypedName",
														"src": "251:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "262:7:11",
														"nodeType": "YulTypedName",
														"src": "262:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "274:6:11",
														"nodeType": "YulTypedName",
														"src": "274:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "282:6:11",
														"nodeType": "YulTypedName",
														"src": "282:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "290:6:11",
														"nodeType": "YulTypedName",
														"src": "290:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "298:6:11",
														"nodeType": "YulTypedName",
														"src": "298:6:11",
														"type": ""
													}
												],
												"src": "183:510:11"
											},
											{
												"body": {
													"nativeSrc": "799:102:11",
													"nodeType": "YulBlock",
													"src": "799:102:11",
													"statements": [
														{
															"nativeSrc": "809:26:11",
															"nodeType": "YulAssignment",
															"src": "809:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "821:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "821:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "832:2:11",
																		"nodeType": "YulLiteral",
																		"src": "832:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "817:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "817:3:11"
																},
																"nativeSrc": "817:18:11",
																"nodeType": "YulFunctionCall",
																"src": "817:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "809:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "851:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "851:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "866:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "866:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "882:3:11",
																								"nodeType": "YulLiteral",
																								"src": "882:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "887:1:11",
																								"nodeType": "YulLiteral",
																								"src": "887:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "878:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "878:3:11"
																						},
																						"nativeSrc": "878:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "878:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "891:1:11",
																						"nodeType": "YulLiteral",
																						"src": "891:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "874:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "874:3:11"
																				},
																				"nativeSrc": "874:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "874:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "862:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:11"
																		},
																		"nativeSrc": "862:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "862:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "844:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "844:6:11"
																},
																"nativeSrc": "844:51:11",
																"nodeType": "YulFunctionCall",
																"src": "844:51:11"
															},
															"nativeSrc": "844:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "844:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "698:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "768:9:11",
														"nodeType": "YulTypedName",
														"src": "768:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "779:6:11",
														"nodeType": "YulTypedName",
														"src": "779:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "790:4:11",
														"nodeType": "YulTypedName",
														"src": "790:4:11",
														"type": ""
													}
												],
												"src": "698:203:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_boolt_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_bool_fromMemory(add(headStart, 32))\n        value2 := abi_decode_bool_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610c0b380380610c0b83398101604081905261002e91610114565b60015f55338061005757604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b610060816100af565b5060028054921515600160a81b0260ff60a81b19941515600160a01b026001600160a81b03199094166001600160a01b0390961695909517929092179290921692909217909155600355610169565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b8051801515811461010f575f80fd5b919050565b5f805f8060808587031215610127575f80fd5b84516001600160a01b038116811461013d575f80fd5b935061014b60208601610100565b925061015960408601610100565b6060959095015193969295505050565b610a95806101765f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063a035b1fe11610063578063a035b1fe1461011d578063b4309a9c14610134578063c7ff23bb14610148578063d9caed121461015b578063f2fde38b1461016e575f80fd5b806306e2a29a1461009f578063082921a5146100c857806314c59b53146100dd578063715018a6146100f05780638da5cb5b146100f8575b5f80fd5b6002546100b390600160a81b900460ff1681565b60405190151581526020015b60405180910390f35b6100db6100d636600461074d565b610181565b005b6100db6100eb366004610777565b6101e0565b6100db610350565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016100bf565b61012660035481565b6040519081526020016100bf565b6002546100b390600160a01b900460ff1681565b600254610105906001600160a01b031681565b6100db61016936600461080e565b610363565b6100db61017c36600461084c565b6103e1565b61018961041e565b6001600160a01b0382165f81815260046020908152604091829020849055815192835282018390527fd7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8910160405180910390a15050565b6001600160a01b0384165f90815260046020526040812054900361023c5760405162461bcd60e51b815260206004820152600e60248201526d6e6f20736574206173207461736b60901b60448201526064015b60405180910390fd5b6003546001600160a01b0385165f8181526004602081905260408083205490516370d6469360e11b81529294939092909163e1ac8d26916102839133918a918a910161086e565b6020604051808303815f875af115801561029f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c391906108ad565b6102cd91906108c4565b6102d791906108ed565b90505f6102e587868461044b565b604080518981526001600160a01b0389811660208301523382840152881660608201526080810185905282151560a082015290519192507fe9136042b7047d621d8d2ecf0455dfb179c78142db852170867e7fd65455995c919081900360c00190a150505050505050565b61035861041e565b6103615f6106e8565b565b61036b61041e565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303815f875af11580156103b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103db9190610920565b50505050565b6103e961041e565b6001600160a01b03811661041257604051631e4fbdf760e01b81525f6004820152602401610233565b61041b816106e8565b50565b6001546001600160a01b031633146103615760405163118cdaa760e01b8152336004820152602401610233565b600254604051638f91cd1760e01b8152600481018590525f9160019183916001600160a01b031690638f91cd17906024016101e060405180830381865afa158015610498573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104bc9190610988565b6101808101519091506001600160a01b031661061e57600254600160a01b900460ff1615156001146105265760405162461bcd60e51b8152602060048201526013602482015272627579207469636b6574206e6f20616c6c6f7760681b6044820152606401610233565b5f8482610160015161053891906108c4565b825160025460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303815f875af115801561058b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105af9190610920565b5060025460405163c5e7bb3360e01b8152600481018990526001600160a01b038881166024830152604482018890529091169063c5e7bb33906064015f604051808303815f87803b158015610602575f80fd5b505af1158015610614573d5f803e3d5ffd5b50505050506106df565b600254600160a81b900460ff1615156001146106735760405162461bcd60e51b815260206004820152601460248201527373656e64207469636b6574206e6f20616c6c6f7760601b6044820152606401610233565b600254604051635c42e0c560e01b8152600481018890526001600160a01b0387811660248301526044820187905290911690635c42e0c5906064015f604051808303815f87803b1580156106c5575f80fd5b505af11580156106d7573d5f803e3d5ffd5b505050505f91505b50949350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038116811461041b575f80fd5b5f806040838503121561075e575f80fd5b823561076981610739565b946020939093013593505050565b5f805f805f6080868803121561078b575f80fd5b85359450602086013561079d81610739565b935060408601356107ad81610739565b9250606086013567ffffffffffffffff808211156107c9575f80fd5b818801915088601f8301126107dc575f80fd5b8135818111156107ea575f80fd5b8960208285010111156107fb575f80fd5b9699959850939650602001949392505050565b5f805f60608486031215610820575f80fd5b833561082b81610739565b9250602084013561083b81610739565b929592945050506040919091013590565b5f6020828403121561085c575f80fd5b813561086781610739565b9392505050565b6001600160a01b03841681526040602082018190528101829052818360608301375f818301606090810191909152601f909201601f1916010192915050565b5f602082840312156108bd575f80fd5b5051919050565b80820281158282048414176108e757634e487b7160e01b5f52601160045260245ffd5b92915050565b5f8261090757634e487b7160e01b5f52601260045260245ffd5b500490565b8051801515811461091b575f80fd5b919050565b5f60208284031215610930575f80fd5b6108678261090c565b6040516101e0810167ffffffffffffffff8111828210171561096957634e487b7160e01b5f52604160045260245ffd5b60405290565b805161091b81610739565b80516004811061091b575f80fd5b5f6101e08284031215610999575f80fd5b6109a1610939565b6109aa8361096f565b81526109b86020840161097a565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120808401518183015250610140808401518183015250610160808401518183015250610180610a3781850161096f565b908201526101a083810151908201526101c0610a5481850161090c565b90820152939250505056fea2646970667358221220ff2fe5246ad3f442e076a00e5d97a324ecad723bb82dd61da38cad0e595cfa0b64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC0B CODESIZE SUB DUP1 PUSH2 0xC0B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x114 JUMP JUMPDEST PUSH1 0x1 PUSH0 SSTORE CALLER DUP1 PUSH2 0x57 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60 DUP2 PUSH2 0xAF JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP5 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP3 SWAP1 SWAP3 OR SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 SSTORE PUSH2 0x169 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH2 0x14B PUSH1 0x20 DUP7 ADD PUSH2 0x100 JUMP JUMPDEST SWAP3 POP PUSH2 0x159 PUSH1 0x40 DUP7 ADD PUSH2 0x100 JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH2 0xA95 DUP1 PUSH2 0x176 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA035B1FE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xB4309A9C EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xC7FF23BB EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E2A29A EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x82921A5 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x14C59B53 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB3 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x350 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x126 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB3 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x105 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xD7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6E6F20736574206173207461736B PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70D64693 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 SWAP5 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH4 0xE1AC8D26 SWAP2 PUSH2 0x283 SWAP2 CALLER SWAP2 DUP11 SWAP2 DUP11 SWAP2 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x8ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2E5 DUP8 DUP7 DUP5 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE CALLER DUP3 DUP5 ADD MSTORE DUP9 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xE9136042B7047D621D8D2ECF0455DFB179C78142DB852170867E7FD65455995C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x358 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x361 PUSH0 PUSH2 0x6E8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x36B PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x920 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x233 JUMP JUMPDEST PUSH2 0x41B DUP2 PUSH2 0x6E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x233 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8F91CD17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8F91CD17 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x498 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61E JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x627579207469636B6574206E6F20616C6C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x233 JUMP JUMPDEST PUSH0 DUP5 DUP3 PUSH2 0x160 ADD MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x920 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5E7BB33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC5E7BB33 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x614 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E64207469636B6574206E6F20616C6C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x233 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C42E0C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5C42E0C5 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x769 DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x7AD DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x7EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x7FB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x820 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x82B DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x83B DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x867 DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x907 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x91B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x930 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x867 DUP3 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x969 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x91B DUP2 PUSH2 0x739 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x91B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x999 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9A1 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x9AA DUP4 PUSH2 0x96F JUMP JUMPDEST DUP2 MSTORE PUSH2 0x9B8 PUSH1 0x20 DUP5 ADD PUSH2 0x97A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0xA37 DUP2 DUP6 ADD PUSH2 0x96F JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0xA54 DUP2 DUP6 ADD PUSH2 0x90C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0x2F 0xE5 0x24 PUSH11 0xD3F442E076A00E5D97A324 0xEC 0xAD PUSH19 0x3BB82DD61DA38CAD0E595CFA0B64736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "442:2657:7:-:0;;;808:385;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1713:1:6;1917:7;:21;932:10:7;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;844:51:11;817:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1026:15:7::1;:34:::0;;1120;::::1;;-1:-1:-1::0;;;1120:34:7::1;-1:-1:-1::0;;;;1074:32:7;::::1;;-1:-1:-1::0;;;1074:32:7::1;-1:-1:-1::0;;;;;;1074:32:7;;;-1:-1:-1;;;;;1026:34:7;;::::1;1074:32:::0;;;;;;;::::1;1120:34:::0;;;::::1;::::0;;;::::1;::::0;;;1168:5:::1;:14:::0;442:2657;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:164:11:-;90:13;;139;;132:21;122:32;;112:60;;168:1;165;158:12;112:60;14:164;;;:::o;183:510::-;274:6;282;290;298;351:3;339:9;330:7;326:23;322:33;319:53;;;368:1;365;358:12;319:53;394:16;;-1:-1:-1;;;;;439:31:11;;429:42;;419:70;;485:1;482;475:12;419:70;508:5;-1:-1:-1;532:46:11;574:2;559:18;;532:46;:::i;:::-;522:56;;597:46;639:2;628:9;624:18;597:46;:::i;:::-;683:2;668:18;;;;662:25;183:510;;;;-1:-1:-1;;;183:510:11:o;698:203::-;442:2657:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1054,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTicket_1180": {
									"entryPoint": 1099,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1768,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowBuyTicket_1020": {
									"entryPoint": null,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowSendTicket_1022": {
									"entryPoint": null,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTicket_1242": {
									"entryPoint": 480,
									"id": 1242,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@price_1024": {
									"entryPoint": null,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@redEnvelopeAddr_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 848,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTask_1090": {
									"entryPoint": 385,
									"id": 1090,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 993,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1262": {
									"entryPoint": 867,
									"id": 1262,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 2316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_enum_Status_fromMemory": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_RedEnvelope_$1302_memory_ptr_fromMemory": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_addresst_bytes_calldata_ptr": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8540:11",
										"nodeType": "YulBlock",
										"src": "0:8540:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "109:92:11",
													"nodeType": "YulBlock",
													"src": "109:92:11",
													"statements": [
														{
															"nativeSrc": "119:26:11",
															"nodeType": "YulAssignment",
															"src": "119:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "131:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "142:2:11",
																		"nodeType": "YulLiteral",
																		"src": "142:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "127:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:11"
																},
																"nativeSrc": "127:18:11",
																"nodeType": "YulFunctionCall",
																"src": "127:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "119:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "161:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "186:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "179:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:11"
																				},
																				"nativeSrc": "179:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "172:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:11"
																		},
																		"nativeSrc": "172:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:11"
																},
																"nativeSrc": "154:41:11",
																"nodeType": "YulFunctionCall",
																"src": "154:41:11"
															},
															"nativeSrc": "154:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "154:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "14:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "78:9:11",
														"nodeType": "YulTypedName",
														"src": "78:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "89:6:11",
														"nodeType": "YulTypedName",
														"src": "89:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "100:4:11",
														"nodeType": "YulTypedName",
														"src": "100:4:11",
														"type": ""
													}
												],
												"src": "14:187:11"
											},
											{
												"body": {
													"nativeSrc": "251:86:11",
													"nodeType": "YulBlock",
													"src": "251:86:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "315:16:11",
																"nodeType": "YulBlock",
																"src": "315:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:11",
																					"nodeType": "YulLiteral",
																					"src": "324:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "327:1:11",
																					"nodeType": "YulLiteral",
																					"src": "327:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "317:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "317:6:11"
																			},
																			"nativeSrc": "317:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "317:12:11"
																		},
																		"nativeSrc": "317:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "317:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "274:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "274:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "285:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "285:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "300:3:11",
																										"nodeType": "YulLiteral",
																										"src": "300:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "305:1:11",
																										"nodeType": "YulLiteral",
																										"src": "305:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "296:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "296:3:11"
																								},
																								"nativeSrc": "296:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "296:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "309:1:11",
																								"nodeType": "YulLiteral",
																								"src": "309:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "292:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "292:3:11"
																						},
																						"nativeSrc": "292:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "292:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "281:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "281:3:11"
																				},
																				"nativeSrc": "281:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "281:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "271:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "271:2:11"
																		},
																		"nativeSrc": "271:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "271:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "264:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "264:6:11"
																},
																"nativeSrc": "264:50:11",
																"nodeType": "YulFunctionCall",
																"src": "264:50:11"
															},
															"nativeSrc": "261:70:11",
															"nodeType": "YulIf",
															"src": "261:70:11"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "206:131:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "240:5:11",
														"nodeType": "YulTypedName",
														"src": "240:5:11",
														"type": ""
													}
												],
												"src": "206:131:11"
											},
											{
												"body": {
													"nativeSrc": "429:228:11",
													"nodeType": "YulBlock",
													"src": "429:228:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "475:16:11",
																"nodeType": "YulBlock",
																"src": "475:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "484:1:11",
																					"nodeType": "YulLiteral",
																					"src": "484:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "487:1:11",
																					"nodeType": "YulLiteral",
																					"src": "487:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "477:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:11"
																			},
																			"nativeSrc": "477:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "477:12:11"
																		},
																		"nativeSrc": "477:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "477:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "450:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "450:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "459:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "459:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "446:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "446:3:11"
																		},
																		"nativeSrc": "446:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "446:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "471:2:11",
																		"nodeType": "YulLiteral",
																		"src": "471:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "442:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "442:3:11"
																},
																"nativeSrc": "442:32:11",
																"nodeType": "YulFunctionCall",
																"src": "442:32:11"
															},
															"nativeSrc": "439:52:11",
															"nodeType": "YulIf",
															"src": "439:52:11"
														},
														{
															"nativeSrc": "500:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "500:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "526:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "526:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "513:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "513:12:11"
																},
																"nativeSrc": "513:23:11",
																"nodeType": "YulFunctionCall",
																"src": "513:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "504:5:11",
																	"nodeType": "YulTypedName",
																	"src": "504:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "570:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "570:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "545:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "545:24:11"
																},
																"nativeSrc": "545:31:11",
																"nodeType": "YulFunctionCall",
																"src": "545:31:11"
															},
															"nativeSrc": "545:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "545:31:11"
														},
														{
															"nativeSrc": "585:15:11",
															"nodeType": "YulAssignment",
															"src": "585:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "595:5:11",
																"nodeType": "YulIdentifier",
																"src": "595:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "585:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:11"
																}
															]
														},
														{
															"nativeSrc": "609:42:11",
															"nodeType": "YulAssignment",
															"src": "609:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "636:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "636:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "647:2:11",
																				"nodeType": "YulLiteral",
																				"src": "647:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "632:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:11"
																		},
																		"nativeSrc": "632:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "632:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "619:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "619:12:11"
																},
																"nativeSrc": "619:32:11",
																"nodeType": "YulFunctionCall",
																"src": "619:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "609:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "342:315:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "387:9:11",
														"nodeType": "YulTypedName",
														"src": "387:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "398:7:11",
														"nodeType": "YulTypedName",
														"src": "398:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "410:6:11",
														"nodeType": "YulTypedName",
														"src": "410:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "418:6:11",
														"nodeType": "YulTypedName",
														"src": "418:6:11",
														"type": ""
													}
												],
												"src": "342:315:11"
											},
											{
												"body": {
													"nativeSrc": "802:796:11",
													"nodeType": "YulBlock",
													"src": "802:796:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "849:16:11",
																"nodeType": "YulBlock",
																"src": "849:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "858:1:11",
																					"nodeType": "YulLiteral",
																					"src": "858:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "861:1:11",
																					"nodeType": "YulLiteral",
																					"src": "861:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "851:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "851:6:11"
																			},
																			"nativeSrc": "851:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "851:12:11"
																		},
																		"nativeSrc": "851:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "851:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "823:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "823:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "832:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "832:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "819:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:11"
																		},
																		"nativeSrc": "819:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "819:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "844:3:11",
																		"nodeType": "YulLiteral",
																		"src": "844:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "815:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "815:3:11"
																},
																"nativeSrc": "815:33:11",
																"nodeType": "YulFunctionCall",
																"src": "815:33:11"
															},
															"nativeSrc": "812:53:11",
															"nodeType": "YulIf",
															"src": "812:53:11"
														},
														{
															"nativeSrc": "874:33:11",
															"nodeType": "YulAssignment",
															"src": "874:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "897:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "897:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "884:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "884:12:11"
																},
																"nativeSrc": "884:23:11",
																"nodeType": "YulFunctionCall",
																"src": "884:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "874:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "874:6:11"
																}
															]
														},
														{
															"nativeSrc": "916:45:11",
															"nodeType": "YulVariableDeclaration",
															"src": "916:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "946:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "946:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "957:2:11",
																				"nodeType": "YulLiteral",
																				"src": "957:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "942:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:11"
																		},
																		"nativeSrc": "942:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "942:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "929:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "929:12:11"
																},
																"nativeSrc": "929:32:11",
																"nodeType": "YulFunctionCall",
																"src": "929:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "920:5:11",
																	"nodeType": "YulTypedName",
																	"src": "920:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "995:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "995:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "970:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "970:24:11"
																},
																"nativeSrc": "970:31:11",
																"nodeType": "YulFunctionCall",
																"src": "970:31:11"
															},
															"nativeSrc": "970:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "970:31:11"
														},
														{
															"nativeSrc": "1010:15:11",
															"nodeType": "YulAssignment",
															"src": "1010:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1020:5:11",
																"nodeType": "YulIdentifier",
																"src": "1020:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1010:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:11"
																}
															]
														},
														{
															"nativeSrc": "1034:47:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1034:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1066:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1066:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1077:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1077:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1062:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:11"
																		},
																		"nativeSrc": "1062:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1062:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1049:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1049:12:11"
																},
																"nativeSrc": "1049:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1049:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1038:7:11",
																	"nodeType": "YulTypedName",
																	"src": "1038:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1115:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1115:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1090:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "1090:24:11"
																},
																"nativeSrc": "1090:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1090:33:11"
															},
															"nativeSrc": "1090:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1090:33:11"
														},
														{
															"nativeSrc": "1132:17:11",
															"nodeType": "YulAssignment",
															"src": "1132:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "1142:7:11",
																"nodeType": "YulIdentifier",
																"src": "1142:7:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1132:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1132:6:11"
																}
															]
														},
														{
															"nativeSrc": "1158:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1158:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1189:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1189:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1200:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1200:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1185:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1185:3:11"
																		},
																		"nativeSrc": "1185:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1185:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1172:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1172:12:11"
																},
																"nativeSrc": "1172:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1172:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1162:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1162:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1213:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1213:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1223:18:11",
																"nodeType": "YulLiteral",
																"src": "1223:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1217:2:11",
																	"nodeType": "YulTypedName",
																	"src": "1217:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1268:16:11",
																"nodeType": "YulBlock",
																"src": "1268:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1277:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1277:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1280:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1280:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1270:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1270:6:11"
																			},
																			"nativeSrc": "1270:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1270:12:11"
																		},
																		"nativeSrc": "1270:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1270:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1256:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1256:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1264:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1264:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1253:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1253:2:11"
																},
																"nativeSrc": "1253:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1253:14:11"
															},
															"nativeSrc": "1250:34:11",
															"nodeType": "YulIf",
															"src": "1250:34:11"
														},
														{
															"nativeSrc": "1293:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1293:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1307:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1307:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1318:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1318:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1303:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1303:3:11"
																},
																"nativeSrc": "1303:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1303:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1297:2:11",
																	"nodeType": "YulTypedName",
																	"src": "1297:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1373:16:11",
																"nodeType": "YulBlock",
																"src": "1373:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1382:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1382:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1375:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1375:6:11"
																			},
																			"nativeSrc": "1375:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1375:12:11"
																		},
																		"nativeSrc": "1375:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1375:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1352:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1352:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1356:4:11",
																						"nodeType": "YulLiteral",
																						"src": "1356:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1348:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1348:3:11"
																				},
																				"nativeSrc": "1348:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1348:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1344:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1344:3:11"
																		},
																		"nativeSrc": "1344:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1344:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1337:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:11"
																},
																"nativeSrc": "1337:35:11",
																"nodeType": "YulFunctionCall",
																"src": "1337:35:11"
															},
															"nativeSrc": "1334:55:11",
															"nodeType": "YulIf",
															"src": "1334:55:11"
														},
														{
															"nativeSrc": "1398:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1398:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1425:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1425:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1412:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:12:11"
																},
																"nativeSrc": "1412:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1402:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1402:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1455:16:11",
																"nodeType": "YulBlock",
																"src": "1455:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:11"
																			},
																			"nativeSrc": "1457:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:11"
																		},
																		"nativeSrc": "1457:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1443:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1443:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1451:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1451:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1440:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:2:11"
																},
																"nativeSrc": "1440:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:14:11"
															},
															"nativeSrc": "1437:34:11",
															"nodeType": "YulIf",
															"src": "1437:34:11"
														},
														{
															"body": {
																"nativeSrc": "1521:16:11",
																"nodeType": "YulBlock",
																"src": "1521:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1530:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1530:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1533:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1533:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1523:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1523:6:11"
																			},
																			"nativeSrc": "1523:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1523:12:11"
																		},
																		"nativeSrc": "1523:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1523:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1494:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1494:2:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1498:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1498:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1490:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1490:3:11"
																				},
																				"nativeSrc": "1490:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1490:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1507:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1507:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1486:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1486:3:11"
																		},
																		"nativeSrc": "1486:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1486:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1512:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1512:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1483:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1483:2:11"
																},
																"nativeSrc": "1483:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1483:37:11"
															},
															"nativeSrc": "1480:57:11",
															"nodeType": "YulIf",
															"src": "1480:57:11"
														},
														{
															"nativeSrc": "1546:21:11",
															"nodeType": "YulAssignment",
															"src": "1546:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1560:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1560:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1564:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1564:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1556:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:11"
																},
																"nativeSrc": "1556:11:11",
																"nodeType": "YulFunctionCall",
																"src": "1556:11:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1546:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:11"
																}
															]
														},
														{
															"nativeSrc": "1576:16:11",
															"nodeType": "YulAssignment",
															"src": "1576:16:11",
															"value": {
																"name": "length",
																"nativeSrc": "1586:6:11",
																"nodeType": "YulIdentifier",
																"src": "1586:6:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1576:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_addresst_bytes_calldata_ptr",
												"nativeSrc": "662:936:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "736:9:11",
														"nodeType": "YulTypedName",
														"src": "736:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "747:7:11",
														"nodeType": "YulTypedName",
														"src": "747:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "759:6:11",
														"nodeType": "YulTypedName",
														"src": "759:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "767:6:11",
														"nodeType": "YulTypedName",
														"src": "767:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "775:6:11",
														"nodeType": "YulTypedName",
														"src": "775:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "783:6:11",
														"nodeType": "YulTypedName",
														"src": "783:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "791:6:11",
														"nodeType": "YulTypedName",
														"src": "791:6:11",
														"type": ""
													}
												],
												"src": "662:936:11"
											},
											{
												"body": {
													"nativeSrc": "1704:102:11",
													"nodeType": "YulBlock",
													"src": "1704:102:11",
													"statements": [
														{
															"nativeSrc": "1714:26:11",
															"nodeType": "YulAssignment",
															"src": "1714:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1726:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1726:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1737:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1737:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1722:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1722:3:11"
																},
																"nativeSrc": "1722:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1722:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1714:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1714:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1756:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1756:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1771:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1771:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1787:3:11",
																								"nodeType": "YulLiteral",
																								"src": "1787:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1792:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1792:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1783:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1783:3:11"
																						},
																						"nativeSrc": "1783:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1783:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1796:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1796:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1779:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:11"
																				},
																				"nativeSrc": "1779:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1779:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1767:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:11"
																		},
																		"nativeSrc": "1767:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1767:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1749:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:11"
																},
																"nativeSrc": "1749:51:11",
																"nodeType": "YulFunctionCall",
																"src": "1749:51:11"
															},
															"nativeSrc": "1749:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "1749:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1603:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1673:9:11",
														"nodeType": "YulTypedName",
														"src": "1673:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1684:6:11",
														"nodeType": "YulTypedName",
														"src": "1684:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1695:4:11",
														"nodeType": "YulTypedName",
														"src": "1695:4:11",
														"type": ""
													}
												],
												"src": "1603:203:11"
											},
											{
												"body": {
													"nativeSrc": "1912:76:11",
													"nodeType": "YulBlock",
													"src": "1912:76:11",
													"statements": [
														{
															"nativeSrc": "1922:26:11",
															"nodeType": "YulAssignment",
															"src": "1922:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1934:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1934:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1945:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1945:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1930:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:11"
																},
																"nativeSrc": "1930:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1930:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1922:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1922:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1964:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1964:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1975:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1957:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1957:6:11"
																},
																"nativeSrc": "1957:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1957:25:11"
															},
															"nativeSrc": "1957:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "1957:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1811:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1881:9:11",
														"nodeType": "YulTypedName",
														"src": "1881:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1892:6:11",
														"nodeType": "YulTypedName",
														"src": "1892:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1903:4:11",
														"nodeType": "YulTypedName",
														"src": "1903:4:11",
														"type": ""
													}
												],
												"src": "1811:177:11"
											},
											{
												"body": {
													"nativeSrc": "2097:352:11",
													"nodeType": "YulBlock",
													"src": "2097:352:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2143:16:11",
																"nodeType": "YulBlock",
																"src": "2143:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2152:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2152:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2155:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2155:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2145:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2145:6:11"
																			},
																			"nativeSrc": "2145:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2145:12:11"
																		},
																		"nativeSrc": "2145:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2145:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2118:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2118:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2127:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2127:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2114:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2114:3:11"
																		},
																		"nativeSrc": "2114:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2114:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2139:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2139:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2110:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2110:3:11"
																},
																"nativeSrc": "2110:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2110:32:11"
															},
															"nativeSrc": "2107:52:11",
															"nodeType": "YulIf",
															"src": "2107:52:11"
														},
														{
															"nativeSrc": "2168:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2168:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2194:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2194:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2181:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2181:12:11"
																},
																"nativeSrc": "2181:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2181:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2172:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2172:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2238:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2238:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2213:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "2213:24:11"
																},
																"nativeSrc": "2213:31:11",
																"nodeType": "YulFunctionCall",
																"src": "2213:31:11"
															},
															"nativeSrc": "2213:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "2213:31:11"
														},
														{
															"nativeSrc": "2253:15:11",
															"nodeType": "YulAssignment",
															"src": "2253:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2263:5:11",
																"nodeType": "YulIdentifier",
																"src": "2263:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2253:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2253:6:11"
																}
															]
														},
														{
															"nativeSrc": "2277:47:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2277:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2309:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2320:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2320:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2305:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:11"
																		},
																		"nativeSrc": "2305:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2305:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2292:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2292:12:11"
																},
																"nativeSrc": "2292:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2292:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2281:7:11",
																	"nodeType": "YulTypedName",
																	"src": "2281:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2358:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "2358:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2333:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "2333:24:11"
																},
																"nativeSrc": "2333:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2333:33:11"
															},
															"nativeSrc": "2333:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2333:33:11"
														},
														{
															"nativeSrc": "2375:17:11",
															"nodeType": "YulAssignment",
															"src": "2375:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "2385:7:11",
																"nodeType": "YulIdentifier",
																"src": "2385:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2375:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2375:6:11"
																}
															]
														},
														{
															"nativeSrc": "2401:42:11",
															"nodeType": "YulAssignment",
															"src": "2401:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2428:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2428:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2439:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2439:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2424:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2424:3:11"
																		},
																		"nativeSrc": "2424:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2424:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2411:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2411:12:11"
																},
																"nativeSrc": "2411:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2411:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2401:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1993:456:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2047:9:11",
														"nodeType": "YulTypedName",
														"src": "2047:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2058:7:11",
														"nodeType": "YulTypedName",
														"src": "2058:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2070:6:11",
														"nodeType": "YulTypedName",
														"src": "2070:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2078:6:11",
														"nodeType": "YulTypedName",
														"src": "2078:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2086:6:11",
														"nodeType": "YulTypedName",
														"src": "2086:6:11",
														"type": ""
													}
												],
												"src": "1993:456:11"
											},
											{
												"body": {
													"nativeSrc": "2524:177:11",
													"nodeType": "YulBlock",
													"src": "2524:177:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2570:16:11",
																"nodeType": "YulBlock",
																"src": "2570:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2579:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2579:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2582:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2572:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2572:6:11"
																			},
																			"nativeSrc": "2572:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2572:12:11"
																		},
																		"nativeSrc": "2572:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2572:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2545:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2554:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2554:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2541:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:11"
																		},
																		"nativeSrc": "2541:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2566:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2566:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2537:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2537:3:11"
																},
																"nativeSrc": "2537:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2537:32:11"
															},
															"nativeSrc": "2534:52:11",
															"nodeType": "YulIf",
															"src": "2534:52:11"
														},
														{
															"nativeSrc": "2595:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2595:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2621:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2621:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2608:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2608:12:11"
																},
																"nativeSrc": "2608:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2608:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2599:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2599:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2665:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2665:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2640:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "2640:24:11"
																},
																"nativeSrc": "2640:31:11",
																"nodeType": "YulFunctionCall",
																"src": "2640:31:11"
															},
															"nativeSrc": "2640:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "2640:31:11"
														},
														{
															"nativeSrc": "2680:15:11",
															"nodeType": "YulAssignment",
															"src": "2680:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2690:5:11",
																"nodeType": "YulIdentifier",
																"src": "2690:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2680:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2454:247:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2490:9:11",
														"nodeType": "YulTypedName",
														"src": "2490:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2501:7:11",
														"nodeType": "YulTypedName",
														"src": "2501:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2513:6:11",
														"nodeType": "YulTypedName",
														"src": "2513:6:11",
														"type": ""
													}
												],
												"src": "2454:247:11"
											},
											{
												"body": {
													"nativeSrc": "2835:145:11",
													"nodeType": "YulBlock",
													"src": "2835:145:11",
													"statements": [
														{
															"nativeSrc": "2845:26:11",
															"nodeType": "YulAssignment",
															"src": "2845:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2857:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2857:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2868:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2868:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2853:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2853:3:11"
																},
																"nativeSrc": "2853:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2853:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2845:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2845:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2887:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2887:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2902:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2902:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2918:3:11",
																								"nodeType": "YulLiteral",
																								"src": "2918:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2923:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2923:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2914:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2914:3:11"
																						},
																						"nativeSrc": "2914:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2914:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2927:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2927:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2910:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2910:3:11"
																				},
																				"nativeSrc": "2910:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2910:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2898:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2898:3:11"
																		},
																		"nativeSrc": "2898:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2898:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2880:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2880:6:11"
																},
																"nativeSrc": "2880:51:11",
																"nodeType": "YulFunctionCall",
																"src": "2880:51:11"
															},
															"nativeSrc": "2880:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "2880:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2951:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2951:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2962:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2962:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2947:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2947:3:11"
																		},
																		"nativeSrc": "2947:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2947:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2967:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2940:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2940:6:11"
																},
																"nativeSrc": "2940:34:11",
																"nodeType": "YulFunctionCall",
																"src": "2940:34:11"
															},
															"nativeSrc": "2940:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "2940:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2706:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2796:9:11",
														"nodeType": "YulTypedName",
														"src": "2796:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2807:6:11",
														"nodeType": "YulTypedName",
														"src": "2807:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2815:6:11",
														"nodeType": "YulTypedName",
														"src": "2815:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2826:4:11",
														"nodeType": "YulTypedName",
														"src": "2826:4:11",
														"type": ""
													}
												],
												"src": "2706:274:11"
											},
											{
												"body": {
													"nativeSrc": "3159:164:11",
													"nodeType": "YulBlock",
													"src": "3159:164:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3176:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3176:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3187:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3187:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3169:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3169:6:11"
																},
																"nativeSrc": "3169:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3169:21:11"
															},
															"nativeSrc": "3169:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "3169:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3210:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3210:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3221:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3221:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3206:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:11"
																		},
																		"nativeSrc": "3206:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3206:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3226:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3226:2:11",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3199:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:11"
																},
																"nativeSrc": "3199:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3199:30:11"
															},
															"nativeSrc": "3199:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "3199:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3249:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3249:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3260:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3260:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3245:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3245:3:11"
																		},
																		"nativeSrc": "3245:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3245:18:11"
																	},
																	{
																		"hexValue": "6e6f20736574206173207461736b",
																		"kind": "string",
																		"nativeSrc": "3265:16:11",
																		"nodeType": "YulLiteral",
																		"src": "3265:16:11",
																		"type": "",
																		"value": "no set as task"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3238:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:11"
																},
																"nativeSrc": "3238:44:11",
																"nodeType": "YulFunctionCall",
																"src": "3238:44:11"
															},
															"nativeSrc": "3238:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "3238:44:11"
														},
														{
															"nativeSrc": "3291:26:11",
															"nodeType": "YulAssignment",
															"src": "3291:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3303:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3303:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3314:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3314:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3299:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3299:3:11"
																},
																"nativeSrc": "3299:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3299:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3291:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3291:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2985:338:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3136:9:11",
														"nodeType": "YulTypedName",
														"src": "3136:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3150:4:11",
														"nodeType": "YulTypedName",
														"src": "3150:4:11",
														"type": ""
													}
												],
												"src": "2985:338:11"
											},
											{
												"body": {
													"nativeSrc": "3485:328:11",
													"nodeType": "YulBlock",
													"src": "3485:328:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3502:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3502:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3517:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3517:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3533:3:11",
																								"nodeType": "YulLiteral",
																								"src": "3533:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3538:1:11",
																								"nodeType": "YulLiteral",
																								"src": "3538:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3529:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3529:3:11"
																						},
																						"nativeSrc": "3529:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3529:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3542:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3542:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3525:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3525:3:11"
																				},
																				"nativeSrc": "3525:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3525:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3513:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3513:3:11"
																		},
																		"nativeSrc": "3513:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3495:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3495:6:11"
																},
																"nativeSrc": "3495:51:11",
																"nodeType": "YulFunctionCall",
																"src": "3495:51:11"
															},
															"nativeSrc": "3495:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "3495:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3566:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3577:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3577:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3562:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:11"
																		},
																		"nativeSrc": "3562:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3582:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3555:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3555:6:11"
																},
																"nativeSrc": "3555:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3555:30:11"
															},
															"nativeSrc": "3555:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "3555:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3605:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3605:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3616:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3616:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3601:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3601:3:11"
																		},
																		"nativeSrc": "3601:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3601:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3621:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3621:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3594:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:11"
																},
																"nativeSrc": "3594:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3594:34:11"
															},
															"nativeSrc": "3594:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3594:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3654:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3665:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3650:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:11"
																		},
																		"nativeSrc": "3650:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3670:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3670:6:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3678:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3678:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3637:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3637:12:11"
																},
																"nativeSrc": "3637:48:11",
																"nodeType": "YulFunctionCall",
																"src": "3637:48:11"
															},
															"nativeSrc": "3637:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "3637:48:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3709:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3709:9:11"
																					},
																					{
																						"name": "value2",
																						"nativeSrc": "3720:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3720:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3705:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3705:3:11"
																				},
																				"nativeSrc": "3705:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3705:22:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3729:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3729:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3701:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3701:3:11"
																		},
																		"nativeSrc": "3701:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3701:31:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3734:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3734:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3694:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3694:6:11"
																},
																"nativeSrc": "3694:42:11",
																"nodeType": "YulFunctionCall",
																"src": "3694:42:11"
															},
															"nativeSrc": "3694:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "3694:42:11"
														},
														{
															"nativeSrc": "3745:62:11",
															"nodeType": "YulAssignment",
															"src": "3745:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3761:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value2",
																								"nativeSrc": "3780:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "3780:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3788:2:11",
																								"nodeType": "YulLiteral",
																								"src": "3788:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3776:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3776:3:11"
																						},
																						"nativeSrc": "3776:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3776:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3797:2:11",
																								"nodeType": "YulLiteral",
																								"src": "3797:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3793:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3793:3:11"
																						},
																						"nativeSrc": "3793:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3793:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3772:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:11"
																				},
																				"nativeSrc": "3772:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3772:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3757:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:11"
																		},
																		"nativeSrc": "3757:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3757:45:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3804:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3804:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3753:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:11"
																},
																"nativeSrc": "3753:54:11",
																"nodeType": "YulFunctionCall",
																"src": "3753:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3745:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3745:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "3328:485:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3438:9:11",
														"nodeType": "YulTypedName",
														"src": "3438:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3449:6:11",
														"nodeType": "YulTypedName",
														"src": "3449:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3457:6:11",
														"nodeType": "YulTypedName",
														"src": "3457:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3465:6:11",
														"nodeType": "YulTypedName",
														"src": "3465:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3476:4:11",
														"nodeType": "YulTypedName",
														"src": "3476:4:11",
														"type": ""
													}
												],
												"src": "3328:485:11"
											},
											{
												"body": {
													"nativeSrc": "3899:103:11",
													"nodeType": "YulBlock",
													"src": "3899:103:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3945:16:11",
																"nodeType": "YulBlock",
																"src": "3945:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3954:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3954:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3957:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3957:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3947:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3947:6:11"
																			},
																			"nativeSrc": "3947:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3947:12:11"
																		},
																		"nativeSrc": "3947:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3947:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3920:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3920:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3929:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3929:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3916:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3916:3:11"
																		},
																		"nativeSrc": "3916:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3916:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3941:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3941:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3912:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3912:3:11"
																},
																"nativeSrc": "3912:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3912:32:11"
															},
															"nativeSrc": "3909:52:11",
															"nodeType": "YulIf",
															"src": "3909:52:11"
														},
														{
															"nativeSrc": "3970:26:11",
															"nodeType": "YulAssignment",
															"src": "3970:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3986:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3980:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3980:5:11"
																},
																"nativeSrc": "3980:16:11",
																"nodeType": "YulFunctionCall",
																"src": "3980:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3970:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3818:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3865:9:11",
														"nodeType": "YulTypedName",
														"src": "3865:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3876:7:11",
														"nodeType": "YulTypedName",
														"src": "3876:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3888:6:11",
														"nodeType": "YulTypedName",
														"src": "3888:6:11",
														"type": ""
													}
												],
												"src": "3818:184:11"
											},
											{
												"body": {
													"nativeSrc": "4059:213:11",
													"nodeType": "YulBlock",
													"src": "4059:213:11",
													"statements": [
														{
															"nativeSrc": "4069:20:11",
															"nodeType": "YulAssignment",
															"src": "4069:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4084:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4084:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4087:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4087:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4080:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4080:3:11"
																},
																"nativeSrc": "4080:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4080:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4069:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4069:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4155:111:11",
																"nodeType": "YulBlock",
																"src": "4155:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4176:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4176:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4183:3:11",
																							"nodeType": "YulLiteral",
																							"src": "4183:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4188:10:11",
																							"nodeType": "YulLiteral",
																							"src": "4188:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4179:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4179:3:11"
																					},
																					"nativeSrc": "4179:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4179:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4169:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4169:6:11"
																			},
																			"nativeSrc": "4169:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4169:31:11"
																		},
																		"nativeSrc": "4169:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4169:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4220:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4220:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4223:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4223:4:11",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4213:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4213:6:11"
																			},
																			"nativeSrc": "4213:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4213:15:11"
																		},
																		"nativeSrc": "4213:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4213:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4248:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4251:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4251:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4241:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4241:6:11"
																			},
																			"nativeSrc": "4241:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4241:15:11"
																		},
																		"nativeSrc": "4241:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4241:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4118:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "4118:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4111:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "4111:6:11"
																				},
																				"nativeSrc": "4111:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4111:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4125:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "4125:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4132:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "4132:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4141:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "4141:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4128:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4128:3:11"
																						},
																						"nativeSrc": "4128:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4128:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4122:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4122:2:11"
																				},
																				"nativeSrc": "4122:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4122:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4108:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4108:2:11"
																		},
																		"nativeSrc": "4108:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4101:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:11"
																},
																"nativeSrc": "4101:45:11",
																"nodeType": "YulFunctionCall",
																"src": "4101:45:11"
															},
															"nativeSrc": "4098:168:11",
															"nodeType": "YulIf",
															"src": "4098:168:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4007:265:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4038:1:11",
														"nodeType": "YulTypedName",
														"src": "4038:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4041:1:11",
														"nodeType": "YulTypedName",
														"src": "4041:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4047:7:11",
														"nodeType": "YulTypedName",
														"src": "4047:7:11",
														"type": ""
													}
												],
												"src": "4007:265:11"
											},
											{
												"body": {
													"nativeSrc": "4323:171:11",
													"nodeType": "YulBlock",
													"src": "4323:171:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4354:111:11",
																"nodeType": "YulBlock",
																"src": "4354:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4375:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4375:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4382:3:11",
																							"nodeType": "YulLiteral",
																							"src": "4382:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4387:10:11",
																							"nodeType": "YulLiteral",
																							"src": "4387:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4378:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4378:3:11"
																					},
																					"nativeSrc": "4378:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4378:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4368:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4368:6:11"
																			},
																			"nativeSrc": "4368:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4368:31:11"
																		},
																		"nativeSrc": "4368:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4368:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4419:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4419:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4422:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4422:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4412:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4412:6:11"
																			},
																			"nativeSrc": "4412:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4412:15:11"
																		},
																		"nativeSrc": "4412:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4412:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4447:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4447:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4450:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4450:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4440:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4440:6:11"
																			},
																			"nativeSrc": "4440:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4440:15:11"
																		},
																		"nativeSrc": "4440:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4440:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4343:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4343:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4336:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:11"
																},
																"nativeSrc": "4336:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4336:9:11"
															},
															"nativeSrc": "4333:132:11",
															"nodeType": "YulIf",
															"src": "4333:132:11"
														},
														{
															"nativeSrc": "4474:14:11",
															"nodeType": "YulAssignment",
															"src": "4474:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4483:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4483:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4486:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4486:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4479:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:11"
																},
																"nativeSrc": "4479:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4479:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4474:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "4474:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4277:217:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4308:1:11",
														"nodeType": "YulTypedName",
														"src": "4308:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4311:1:11",
														"nodeType": "YulTypedName",
														"src": "4311:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4317:1:11",
														"nodeType": "YulTypedName",
														"src": "4317:1:11",
														"type": ""
													}
												],
												"src": "4277:217:11"
											},
											{
												"body": {
													"nativeSrc": "4734:375:11",
													"nodeType": "YulBlock",
													"src": "4734:375:11",
													"statements": [
														{
															"nativeSrc": "4744:27:11",
															"nodeType": "YulAssignment",
															"src": "4744:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4756:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4756:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4767:3:11",
																		"nodeType": "YulLiteral",
																		"src": "4767:3:11",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4752:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4752:3:11"
																},
																"nativeSrc": "4752:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4752:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4744:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4744:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4787:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4787:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4798:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4798:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4780:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4780:6:11"
																},
																"nativeSrc": "4780:25:11",
																"nodeType": "YulFunctionCall",
																"src": "4780:25:11"
															},
															"nativeSrc": "4780:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "4780:25:11"
														},
														{
															"nativeSrc": "4814:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4814:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4832:3:11",
																				"nodeType": "YulLiteral",
																				"src": "4832:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4828:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:11"
																		},
																		"nativeSrc": "4828:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:11:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4841:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4841:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4824:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4824:3:11"
																},
																"nativeSrc": "4824:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4824:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4818:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4818:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4863:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4863:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4874:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4874:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4859:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4859:3:11"
																		},
																		"nativeSrc": "4859:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4859:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4883:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4883:6:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4891:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4891:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4879:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:11"
																		},
																		"nativeSrc": "4879:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4852:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4852:6:11"
																},
																"nativeSrc": "4852:43:11",
																"nodeType": "YulFunctionCall",
																"src": "4852:43:11"
															},
															"nativeSrc": "4852:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "4852:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4915:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4926:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4926:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4911:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:11"
																		},
																		"nativeSrc": "4911:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4911:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "4935:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4935:6:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4943:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4943:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4931:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:11"
																		},
																		"nativeSrc": "4931:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4904:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:11"
																},
																"nativeSrc": "4904:43:11",
																"nodeType": "YulFunctionCall",
																"src": "4904:43:11"
															},
															"nativeSrc": "4904:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "4904:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4967:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4967:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4978:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4978:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4963:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4963:3:11"
																		},
																		"nativeSrc": "4963:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4963:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "4987:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4987:6:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4995:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4995:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4983:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4983:3:11"
																		},
																		"nativeSrc": "4983:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4983:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4956:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4956:6:11"
																},
																"nativeSrc": "4956:43:11",
																"nodeType": "YulFunctionCall",
																"src": "4956:43:11"
															},
															"nativeSrc": "4956:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "4956:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5019:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5019:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5030:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5030:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:11"
																		},
																		"nativeSrc": "5015:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:19:11"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5036:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5036:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5008:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5008:6:11"
																},
																"nativeSrc": "5008:35:11",
																"nodeType": "YulFunctionCall",
																"src": "5008:35:11"
															},
															"nativeSrc": "5008:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "5008:35:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5063:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5063:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5074:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5074:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5059:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5059:3:11"
																		},
																		"nativeSrc": "5059:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5059:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "5094:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5094:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5087:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5087:6:11"
																				},
																				"nativeSrc": "5087:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5087:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5080:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5080:6:11"
																		},
																		"nativeSrc": "5080:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5080:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5052:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5052:6:11"
																},
																"nativeSrc": "5052:51:11",
																"nodeType": "YulFunctionCall",
																"src": "5052:51:11"
															},
															"nativeSrc": "5052:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "5052:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "4499:610:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4663:9:11",
														"nodeType": "YulTypedName",
														"src": "4663:9:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4674:6:11",
														"nodeType": "YulTypedName",
														"src": "4674:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4682:6:11",
														"nodeType": "YulTypedName",
														"src": "4682:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4690:6:11",
														"nodeType": "YulTypedName",
														"src": "4690:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4698:6:11",
														"nodeType": "YulTypedName",
														"src": "4698:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4706:6:11",
														"nodeType": "YulTypedName",
														"src": "4706:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4714:6:11",
														"nodeType": "YulTypedName",
														"src": "4714:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4725:4:11",
														"nodeType": "YulTypedName",
														"src": "4725:4:11",
														"type": ""
													}
												],
												"src": "4499:610:11"
											},
											{
												"body": {
													"nativeSrc": "5171:107:11",
													"nodeType": "YulBlock",
													"src": "5171:107:11",
													"statements": [
														{
															"nativeSrc": "5181:22:11",
															"nodeType": "YulAssignment",
															"src": "5181:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5196:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5196:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5190:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5190:5:11"
																},
																"nativeSrc": "5190:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5190:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5181:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5181:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5256:16:11",
																"nodeType": "YulBlock",
																"src": "5256:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:11"
																			},
																			"nativeSrc": "5258:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:11"
																		},
																		"nativeSrc": "5258:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5225:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5225:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5246:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "5246:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5239:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5239:6:11"
																						},
																						"nativeSrc": "5239:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5239:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5232:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5232:6:11"
																				},
																				"nativeSrc": "5232:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5232:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5222:2:11"
																		},
																		"nativeSrc": "5222:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:11"
																},
																"nativeSrc": "5215:40:11",
																"nodeType": "YulFunctionCall",
																"src": "5215:40:11"
															},
															"nativeSrc": "5212:60:11",
															"nodeType": "YulIf",
															"src": "5212:60:11"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nativeSrc": "5114:164:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5150:6:11",
														"nodeType": "YulTypedName",
														"src": "5150:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5161:5:11",
														"nodeType": "YulTypedName",
														"src": "5161:5:11",
														"type": ""
													}
												],
												"src": "5114:164:11"
											},
											{
												"body": {
													"nativeSrc": "5361:124:11",
													"nodeType": "YulBlock",
													"src": "5361:124:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5407:16:11",
																"nodeType": "YulBlock",
																"src": "5407:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5416:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5416:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5419:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5419:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5409:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5409:6:11"
																			},
																			"nativeSrc": "5409:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5409:12:11"
																		},
																		"nativeSrc": "5409:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5409:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5382:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5382:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5391:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5391:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5378:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5378:3:11"
																		},
																		"nativeSrc": "5378:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5378:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5403:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5374:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:11"
																},
																"nativeSrc": "5374:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5374:32:11"
															},
															"nativeSrc": "5371:52:11",
															"nodeType": "YulIf",
															"src": "5371:52:11"
														},
														{
															"nativeSrc": "5432:47:11",
															"nodeType": "YulAssignment",
															"src": "5432:47:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5469:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5469:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nativeSrc": "5442:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "5442:26:11"
																},
																"nativeSrc": "5442:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5442:37:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5432:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5432:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5283:202:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5327:9:11",
														"nodeType": "YulTypedName",
														"src": "5327:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5338:7:11",
														"nodeType": "YulTypedName",
														"src": "5338:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5350:6:11",
														"nodeType": "YulTypedName",
														"src": "5350:6:11",
														"type": ""
													}
												],
												"src": "5283:202:11"
											},
											{
												"body": {
													"nativeSrc": "5531:303:11",
													"nodeType": "YulBlock",
													"src": "5531:303:11",
													"statements": [
														{
															"nativeSrc": "5541:19:11",
															"nodeType": "YulAssignment",
															"src": "5541:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5551:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5551:5:11"
																},
																"nativeSrc": "5551:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5551:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5541:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5541:6:11"
																}
															]
														},
														{
															"nativeSrc": "5569:34:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5569:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5591:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5599:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5599:3:11",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5587:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5587:3:11"
																},
																"nativeSrc": "5587:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5587:16:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5573:10:11",
																	"nodeType": "YulTypedName",
																	"src": "5573:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5686:111:11",
																"nodeType": "YulBlock",
																"src": "5686:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5707:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5714:3:11",
																							"nodeType": "YulLiteral",
																							"src": "5714:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5719:10:11",
																							"nodeType": "YulLiteral",
																							"src": "5719:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5710:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5710:3:11"
																					},
																					"nativeSrc": "5710:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5710:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5700:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:11"
																			},
																			"nativeSrc": "5700:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5700:31:11"
																		},
																		"nativeSrc": "5700:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5751:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5751:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5754:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5754:4:11",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5744:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5744:6:11"
																			},
																			"nativeSrc": "5744:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5744:15:11"
																		},
																		"nativeSrc": "5744:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5744:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5779:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5779:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5782:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5782:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5772:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5772:6:11"
																			},
																			"nativeSrc": "5772:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5772:15:11"
																		},
																		"nativeSrc": "5772:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5772:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5621:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "5621:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5633:18:11",
																				"nodeType": "YulLiteral",
																				"src": "5633:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5618:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5618:2:11"
																		},
																		"nativeSrc": "5618:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5618:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5657:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "5657:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5669:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5669:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5654:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5654:2:11"
																		},
																		"nativeSrc": "5654:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5654:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5615:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5615:2:11"
																},
																"nativeSrc": "5615:62:11",
																"nodeType": "YulFunctionCall",
																"src": "5615:62:11"
															},
															"nativeSrc": "5612:185:11",
															"nodeType": "YulIf",
															"src": "5612:185:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5813:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5817:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "5817:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5806:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5806:6:11"
																},
																"nativeSrc": "5806:22:11",
																"nodeType": "YulFunctionCall",
																"src": "5806:22:11"
															},
															"nativeSrc": "5806:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "5806:22:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5490:344:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5520:6:11",
														"nodeType": "YulTypedName",
														"src": "5520:6:11",
														"type": ""
													}
												],
												"src": "5490:344:11"
											},
											{
												"body": {
													"nativeSrc": "5899:78:11",
													"nodeType": "YulBlock",
													"src": "5899:78:11",
													"statements": [
														{
															"nativeSrc": "5909:22:11",
															"nodeType": "YulAssignment",
															"src": "5909:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5924:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5924:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5918:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5918:5:11"
																},
																"nativeSrc": "5918:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5918:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5909:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5909:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5965:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5965:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5940:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "5940:24:11"
																},
																"nativeSrc": "5940:31:11",
																"nodeType": "YulFunctionCall",
																"src": "5940:31:11"
															},
															"nativeSrc": "5940:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "5940:31:11"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "5839:138:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5878:6:11",
														"nodeType": "YulTypedName",
														"src": "5878:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5889:5:11",
														"nodeType": "YulTypedName",
														"src": "5889:5:11",
														"type": ""
													}
												],
												"src": "5839:138:11"
											},
											{
												"body": {
													"nativeSrc": "6046:87:11",
													"nodeType": "YulBlock",
													"src": "6046:87:11",
													"statements": [
														{
															"nativeSrc": "6056:22:11",
															"nodeType": "YulAssignment",
															"src": "6056:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6071:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6071:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6065:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6065:5:11"
																},
																"nativeSrc": "6065:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6065:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6056:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6056:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6111:16:11",
																"nodeType": "YulBlock",
																"src": "6111:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6120:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6120:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6123:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6123:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6113:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:11"
																			},
																			"nativeSrc": "6113:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6113:12:11"
																		},
																		"nativeSrc": "6113:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6113:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6100:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6100:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6107:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6107:1:11",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6097:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6097:2:11"
																		},
																		"nativeSrc": "6097:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6097:12:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6090:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:11"
																},
																"nativeSrc": "6090:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6090:20:11"
															},
															"nativeSrc": "6087:40:11",
															"nodeType": "YulIf",
															"src": "6087:40:11"
														}
													]
												},
												"name": "abi_decode_enum_Status_fromMemory",
												"nativeSrc": "5982:151:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6025:6:11",
														"nodeType": "YulTypedName",
														"src": "6025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6036:5:11",
														"nodeType": "YulTypedName",
														"src": "6036:5:11",
														"type": ""
													}
												],
												"src": "5982:151:11"
											},
											{
												"body": {
													"nativeSrc": "6248:1243:11",
													"nodeType": "YulBlock",
													"src": "6248:1243:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6295:16:11",
																"nodeType": "YulBlock",
																"src": "6295:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6304:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6304:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6307:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6307:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6297:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6297:6:11"
																			},
																			"nativeSrc": "6297:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6297:12:11"
																		},
																		"nativeSrc": "6297:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6297:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6269:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6269:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6278:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6278:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6265:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6265:3:11"
																		},
																		"nativeSrc": "6265:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6265:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6290:3:11",
																		"nodeType": "YulLiteral",
																		"src": "6290:3:11",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:11"
																},
																"nativeSrc": "6261:33:11",
																"nodeType": "YulFunctionCall",
																"src": "6261:33:11"
															},
															"nativeSrc": "6258:53:11",
															"nodeType": "YulIf",
															"src": "6258:53:11"
														},
														{
															"nativeSrc": "6320:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6320:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6333:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "6333:15:11"
																},
																"nativeSrc": "6333:17:11",
																"nodeType": "YulFunctionCall",
																"src": "6333:17:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6324:5:11",
																	"nodeType": "YulTypedName",
																	"src": "6324:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6366:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6366:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6403:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6403:9:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nativeSrc": "6373:29:11",
																			"nodeType": "YulIdentifier",
																			"src": "6373:29:11"
																		},
																		"nativeSrc": "6373:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6373:40:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6359:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6359:6:11"
																},
																"nativeSrc": "6359:55:11",
																"nodeType": "YulFunctionCall",
																"src": "6359:55:11"
															},
															"nativeSrc": "6359:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "6359:55:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6434:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6434:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6441:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6441:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6430:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6430:3:11"
																		},
																		"nativeSrc": "6430:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6430:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6484:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6484:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6495:2:11",
																						"nodeType": "YulLiteral",
																						"src": "6495:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6480:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6480:3:11"
																				},
																				"nativeSrc": "6480:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6480:18:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_enum_Status_fromMemory",
																			"nativeSrc": "6446:33:11",
																			"nodeType": "YulIdentifier",
																			"src": "6446:33:11"
																		},
																		"nativeSrc": "6446:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6446:53:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6423:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:11"
																},
																"nativeSrc": "6423:77:11",
																"nodeType": "YulFunctionCall",
																"src": "6423:77:11"
															},
															"nativeSrc": "6423:77:11",
															"nodeType": "YulExpressionStatement",
															"src": "6423:77:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6520:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6520:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6527:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6527:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6516:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6516:3:11"
																		},
																		"nativeSrc": "6516:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6542:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6542:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6553:2:11",
																						"nodeType": "YulLiteral",
																						"src": "6553:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6538:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6538:3:11"
																				},
																				"nativeSrc": "6538:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6538:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6532:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6532:5:11"
																		},
																		"nativeSrc": "6532:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6532:25:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6509:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6509:6:11"
																},
																"nativeSrc": "6509:49:11",
																"nodeType": "YulFunctionCall",
																"src": "6509:49:11"
															},
															"nativeSrc": "6509:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "6509:49:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6578:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6578:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6585:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6585:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6574:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6574:3:11"
																		},
																		"nativeSrc": "6574:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6574:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6600:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6600:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6611:2:11",
																						"nodeType": "YulLiteral",
																						"src": "6611:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6596:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6596:3:11"
																				},
																				"nativeSrc": "6596:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6596:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6590:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6590:5:11"
																		},
																		"nativeSrc": "6590:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6590:25:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6567:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6567:6:11"
																},
																"nativeSrc": "6567:49:11",
																"nodeType": "YulFunctionCall",
																"src": "6567:49:11"
															},
															"nativeSrc": "6567:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "6567:49:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6636:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6636:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6643:3:11",
																				"nodeType": "YulLiteral",
																				"src": "6643:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6632:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:11"
																		},
																		"nativeSrc": "6632:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6632:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6659:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6659:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6670:3:11",
																						"nodeType": "YulLiteral",
																						"src": "6670:3:11",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6655:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6655:3:11"
																				},
																				"nativeSrc": "6655:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6655:19:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6649:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6649:5:11"
																		},
																		"nativeSrc": "6649:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6649:26:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6625:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6625:6:11"
																},
																"nativeSrc": "6625:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6625:51:11"
															},
															"nativeSrc": "6625:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6625:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6696:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6696:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6703:3:11",
																				"nodeType": "YulLiteral",
																				"src": "6703:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6692:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6692:3:11"
																		},
																		"nativeSrc": "6692:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6692:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6719:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6719:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6730:3:11",
																						"nodeType": "YulLiteral",
																						"src": "6730:3:11",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6715:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6715:3:11"
																				},
																				"nativeSrc": "6715:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6715:19:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6709:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6709:5:11"
																		},
																		"nativeSrc": "6709:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6709:26:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6685:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6685:6:11"
																},
																"nativeSrc": "6685:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6685:51:11"
															},
															"nativeSrc": "6685:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6685:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6756:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6756:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6763:3:11",
																				"nodeType": "YulLiteral",
																				"src": "6763:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6752:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6752:3:11"
																		},
																		"nativeSrc": "6752:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6752:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6790:3:11",
																						"nodeType": "YulLiteral",
																						"src": "6790:3:11",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:11"
																				},
																				"nativeSrc": "6775:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:19:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6769:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6769:5:11"
																		},
																		"nativeSrc": "6769:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6769:26:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6745:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6745:6:11"
																},
																"nativeSrc": "6745:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6745:51:11"
															},
															"nativeSrc": "6745:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6745:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6816:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6816:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6823:3:11",
																				"nodeType": "YulLiteral",
																				"src": "6823:3:11",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6812:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6812:3:11"
																		},
																		"nativeSrc": "6812:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6812:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6839:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6839:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6850:3:11",
																						"nodeType": "YulLiteral",
																						"src": "6850:3:11",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6835:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6835:3:11"
																				},
																				"nativeSrc": "6835:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6835:19:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6829:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6829:5:11"
																		},
																		"nativeSrc": "6829:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6829:26:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6805:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6805:6:11"
																},
																"nativeSrc": "6805:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6805:51:11"
															},
															"nativeSrc": "6805:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6805:51:11"
														},
														{
															"nativeSrc": "6865:13:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6865:13:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6875:3:11",
																"nodeType": "YulLiteral",
																"src": "6875:3:11",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6869:2:11",
																	"nodeType": "YulTypedName",
																	"src": "6869:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6898:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6898:5:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6905:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6905:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6894:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6894:3:11"
																		},
																		"nativeSrc": "6894:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6894:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6920:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6920:9:11"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "6931:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "6931:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6916:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6916:3:11"
																				},
																				"nativeSrc": "6916:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6916:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6910:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6910:5:11"
																		},
																		"nativeSrc": "6910:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6910:25:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6887:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:11"
																},
																"nativeSrc": "6887:49:11",
																"nodeType": "YulFunctionCall",
																"src": "6887:49:11"
															},
															"nativeSrc": "6887:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "6887:49:11"
														},
														{
															"nativeSrc": "6945:13:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6945:13:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6955:3:11",
																"nodeType": "YulLiteral",
																"src": "6955:3:11",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "6949:2:11",
																	"nodeType": "YulTypedName",
																	"src": "6949:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6978:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6978:5:11"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "6985:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6985:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6974:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:11"
																		},
																		"nativeSrc": "6974:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6974:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7000:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7000:9:11"
																					},
																					{
																						"name": "_2",
																						"nativeSrc": "7011:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7011:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6996:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6996:3:11"
																				},
																				"nativeSrc": "6996:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6996:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6990:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6990:5:11"
																		},
																		"nativeSrc": "6990:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6990:25:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6967:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6967:6:11"
																},
																"nativeSrc": "6967:49:11",
																"nodeType": "YulFunctionCall",
																"src": "6967:49:11"
															},
															"nativeSrc": "6967:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "6967:49:11"
														},
														{
															"nativeSrc": "7025:13:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7025:13:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7035:3:11",
																"nodeType": "YulLiteral",
																"src": "7035:3:11",
																"type": "",
																"value": "320"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "7029:2:11",
																	"nodeType": "YulTypedName",
																	"src": "7029:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7058:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7058:5:11"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "7065:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7065:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7054:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7054:3:11"
																		},
																		"nativeSrc": "7054:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7054:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7080:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7080:9:11"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "7091:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7091:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7076:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7076:3:11"
																				},
																				"nativeSrc": "7076:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7076:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7070:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "7070:5:11"
																		},
																		"nativeSrc": "7070:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7070:25:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7047:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7047:6:11"
																},
																"nativeSrc": "7047:49:11",
																"nodeType": "YulFunctionCall",
																"src": "7047:49:11"
															},
															"nativeSrc": "7047:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "7047:49:11"
														},
														{
															"nativeSrc": "7105:13:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7105:13:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7115:3:11",
																"nodeType": "YulLiteral",
																"src": "7115:3:11",
																"type": "",
																"value": "352"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "7109:2:11",
																	"nodeType": "YulTypedName",
																	"src": "7109:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7138:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7138:5:11"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "7145:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7145:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7134:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7134:3:11"
																		},
																		"nativeSrc": "7134:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7134:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7160:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7160:9:11"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "7171:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7171:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7156:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7156:3:11"
																				},
																				"nativeSrc": "7156:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7156:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7150:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "7150:5:11"
																		},
																		"nativeSrc": "7150:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7150:25:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7127:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7127:6:11"
																},
																"nativeSrc": "7127:49:11",
																"nodeType": "YulFunctionCall",
																"src": "7127:49:11"
															},
															"nativeSrc": "7127:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "7127:49:11"
														},
														{
															"nativeSrc": "7185:13:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7185:13:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7195:3:11",
																"nodeType": "YulLiteral",
																"src": "7195:3:11",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "7189:2:11",
																	"nodeType": "YulTypedName",
																	"src": "7189:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7218:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7218:5:11"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "7225:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7225:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7214:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7214:3:11"
																		},
																		"nativeSrc": "7214:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7214:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7264:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7264:9:11"
																					},
																					{
																						"name": "_5",
																						"nativeSrc": "7275:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7275:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7260:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7260:3:11"
																				},
																				"nativeSrc": "7260:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7260:18:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nativeSrc": "7230:29:11",
																			"nodeType": "YulIdentifier",
																			"src": "7230:29:11"
																		},
																		"nativeSrc": "7230:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7230:49:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7207:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:11"
																},
																"nativeSrc": "7207:73:11",
																"nodeType": "YulFunctionCall",
																"src": "7207:73:11"
															},
															"nativeSrc": "7207:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "7207:73:11"
														},
														{
															"nativeSrc": "7289:13:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7289:13:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7299:3:11",
																"nodeType": "YulLiteral",
																"src": "7299:3:11",
																"type": "",
																"value": "416"
															},
															"variables": [
																{
																	"name": "_6",
																	"nativeSrc": "7293:2:11",
																	"nodeType": "YulTypedName",
																	"src": "7293:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7322:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7322:5:11"
																			},
																			{
																				"name": "_6",
																				"nativeSrc": "7329:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7329:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7318:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7318:3:11"
																		},
																		"nativeSrc": "7318:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7318:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7344:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7344:9:11"
																					},
																					{
																						"name": "_6",
																						"nativeSrc": "7355:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7355:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7340:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7340:3:11"
																				},
																				"nativeSrc": "7340:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7340:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7334:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "7334:5:11"
																		},
																		"nativeSrc": "7334:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7334:25:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7311:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7311:6:11"
																},
																"nativeSrc": "7311:49:11",
																"nodeType": "YulFunctionCall",
																"src": "7311:49:11"
															},
															"nativeSrc": "7311:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "7311:49:11"
														},
														{
															"nativeSrc": "7369:13:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7369:13:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7379:3:11",
																"nodeType": "YulLiteral",
																"src": "7379:3:11",
																"type": "",
																"value": "448"
															},
															"variables": [
																{
																	"name": "_7",
																	"nativeSrc": "7373:2:11",
																	"nodeType": "YulTypedName",
																	"src": "7373:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7402:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7402:5:11"
																			},
																			{
																				"name": "_7",
																				"nativeSrc": "7409:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7409:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7398:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7398:3:11"
																		},
																		"nativeSrc": "7398:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7398:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7445:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7445:9:11"
																					},
																					{
																						"name": "_7",
																						"nativeSrc": "7456:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "7456:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7441:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7441:3:11"
																				},
																				"nativeSrc": "7441:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7441:18:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool_fromMemory",
																			"nativeSrc": "7414:26:11",
																			"nodeType": "YulIdentifier",
																			"src": "7414:26:11"
																		},
																		"nativeSrc": "7414:46:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7414:46:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7391:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7391:6:11"
																},
																"nativeSrc": "7391:70:11",
																"nodeType": "YulFunctionCall",
																"src": "7391:70:11"
															},
															"nativeSrc": "7391:70:11",
															"nodeType": "YulExpressionStatement",
															"src": "7391:70:11"
														},
														{
															"nativeSrc": "7470:15:11",
															"nodeType": "YulAssignment",
															"src": "7470:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "7480:5:11",
																"nodeType": "YulIdentifier",
																"src": "7480:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7470:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7470:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_RedEnvelope_$1302_memory_ptr_fromMemory",
												"nativeSrc": "6138:1353:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6214:9:11",
														"nodeType": "YulTypedName",
														"src": "6214:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6225:7:11",
														"nodeType": "YulTypedName",
														"src": "6225:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6237:6:11",
														"nodeType": "YulTypedName",
														"src": "6237:6:11",
														"type": ""
													}
												],
												"src": "6138:1353:11"
											},
											{
												"body": {
													"nativeSrc": "7670:169:11",
													"nodeType": "YulBlock",
													"src": "7670:169:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7687:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7687:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7698:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7698:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7680:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7680:6:11"
																},
																"nativeSrc": "7680:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7680:21:11"
															},
															"nativeSrc": "7680:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7680:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7721:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7721:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7732:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7732:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7717:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7717:3:11"
																		},
																		"nativeSrc": "7717:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7717:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7737:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7737:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7710:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7710:6:11"
																},
																"nativeSrc": "7710:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7710:30:11"
															},
															"nativeSrc": "7710:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7710:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7760:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7760:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7771:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7771:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7756:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7756:3:11"
																		},
																		"nativeSrc": "7756:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7756:18:11"
																	},
																	{
																		"hexValue": "627579207469636b6574206e6f20616c6c6f77",
																		"kind": "string",
																		"nativeSrc": "7776:21:11",
																		"nodeType": "YulLiteral",
																		"src": "7776:21:11",
																		"type": "",
																		"value": "buy ticket no allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7749:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7749:6:11"
																},
																"nativeSrc": "7749:49:11",
																"nodeType": "YulFunctionCall",
																"src": "7749:49:11"
															},
															"nativeSrc": "7749:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "7749:49:11"
														},
														{
															"nativeSrc": "7807:26:11",
															"nodeType": "YulAssignment",
															"src": "7807:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7819:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7819:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7830:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7830:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7815:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7815:3:11"
																},
																"nativeSrc": "7815:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7815:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7807:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7496:343:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7647:9:11",
														"nodeType": "YulTypedName",
														"src": "7647:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7661:4:11",
														"nodeType": "YulTypedName",
														"src": "7661:4:11",
														"type": ""
													}
												],
												"src": "7496:343:11"
											},
											{
												"body": {
													"nativeSrc": "8001:188:11",
													"nodeType": "YulBlock",
													"src": "8001:188:11",
													"statements": [
														{
															"nativeSrc": "8011:26:11",
															"nodeType": "YulAssignment",
															"src": "8011:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8023:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8023:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8034:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8034:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8019:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:11"
																},
																"nativeSrc": "8019:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8019:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8011:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8011:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8053:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8053:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8064:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8064:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8046:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8046:6:11"
																},
																"nativeSrc": "8046:25:11",
																"nodeType": "YulFunctionCall",
																"src": "8046:25:11"
															},
															"nativeSrc": "8046:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "8046:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8091:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8091:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8102:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8102:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8087:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8087:3:11"
																		},
																		"nativeSrc": "8087:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8087:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8111:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8111:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8127:3:11",
																								"nodeType": "YulLiteral",
																								"src": "8127:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8132:1:11",
																								"nodeType": "YulLiteral",
																								"src": "8132:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8123:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8123:3:11"
																						},
																						"nativeSrc": "8123:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8123:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8136:1:11",
																						"nodeType": "YulLiteral",
																						"src": "8136:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8119:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:11"
																				},
																				"nativeSrc": "8119:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8119:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8107:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8107:3:11"
																		},
																		"nativeSrc": "8107:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8107:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8080:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:11"
																},
																"nativeSrc": "8080:60:11",
																"nodeType": "YulFunctionCall",
																"src": "8080:60:11"
															},
															"nativeSrc": "8080:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "8080:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8160:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8160:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8171:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8171:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8156:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:11"
																		},
																		"nativeSrc": "8156:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8156:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8176:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8176:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8149:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8149:6:11"
																},
																"nativeSrc": "8149:34:11",
																"nodeType": "YulFunctionCall",
																"src": "8149:34:11"
															},
															"nativeSrc": "8149:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "8149:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7844:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7954:9:11",
														"nodeType": "YulTypedName",
														"src": "7954:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7965:6:11",
														"nodeType": "YulTypedName",
														"src": "7965:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7973:6:11",
														"nodeType": "YulTypedName",
														"src": "7973:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7981:6:11",
														"nodeType": "YulTypedName",
														"src": "7981:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7992:4:11",
														"nodeType": "YulTypedName",
														"src": "7992:4:11",
														"type": ""
													}
												],
												"src": "7844:345:11"
											},
											{
												"body": {
													"nativeSrc": "8368:170:11",
													"nodeType": "YulBlock",
													"src": "8368:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8385:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8385:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8396:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8396:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8378:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8378:6:11"
																},
																"nativeSrc": "8378:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8378:21:11"
															},
															"nativeSrc": "8378:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8378:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8419:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8430:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8430:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8415:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:11"
																		},
																		"nativeSrc": "8415:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8415:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8435:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8435:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8408:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:11"
																},
																"nativeSrc": "8408:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8408:30:11"
															},
															"nativeSrc": "8408:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8408:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8458:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8458:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8469:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8469:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8454:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8454:3:11"
																		},
																		"nativeSrc": "8454:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8454:18:11"
																	},
																	{
																		"hexValue": "73656e64207469636b6574206e6f20616c6c6f77",
																		"kind": "string",
																		"nativeSrc": "8474:22:11",
																		"nodeType": "YulLiteral",
																		"src": "8474:22:11",
																		"type": "",
																		"value": "send ticket no allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8447:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8447:6:11"
																},
																"nativeSrc": "8447:50:11",
																"nodeType": "YulFunctionCall",
																"src": "8447:50:11"
															},
															"nativeSrc": "8447:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "8447:50:11"
														},
														{
															"nativeSrc": "8506:26:11",
															"nodeType": "YulAssignment",
															"src": "8506:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8518:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8518:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8529:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8529:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8514:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8514:3:11"
																},
																"nativeSrc": "8514:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8514:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8506:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8506:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8194:344:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8345:9:11",
														"nodeType": "YulTypedName",
														"src": "8345:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8359:4:11",
														"nodeType": "YulTypedName",
														"src": "8359:4:11",
														"type": ""
													}
												],
												"src": "8194:344:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"no set as task\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), value2)\n        calldatacopy(add(headStart, 96), value1, value2)\n        mstore(add(add(headStart, value2), 96), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 480)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_enum_Status_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_RedEnvelope_$1302_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 480) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_address_fromMemory(headStart))\n        mstore(add(value, 32), abi_decode_enum_Status_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), mload(add(headStart, 64)))\n        mstore(add(value, 96), mload(add(headStart, 96)))\n        mstore(add(value, 128), mload(add(headStart, 128)))\n        mstore(add(value, 160), mload(add(headStart, 160)))\n        mstore(add(value, 192), mload(add(headStart, 192)))\n        mstore(add(value, 224), mload(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), mload(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), mload(add(headStart, _2)))\n        let _3 := 320\n        mstore(add(value, _3), mload(add(headStart, _3)))\n        let _4 := 352\n        mstore(add(value, _4), mload(add(headStart, _4)))\n        let _5 := 384\n        mstore(add(value, _5), abi_decode_address_fromMemory(add(headStart, _5)))\n        let _6 := 416\n        mstore(add(value, _6), mload(add(headStart, _6)))\n        let _7 := 448\n        mstore(add(value, _7), abi_decode_bool_fromMemory(add(headStart, _7)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"buy ticket no allow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"send ticket no allow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063a035b1fe11610063578063a035b1fe1461011d578063b4309a9c14610134578063c7ff23bb14610148578063d9caed121461015b578063f2fde38b1461016e575f80fd5b806306e2a29a1461009f578063082921a5146100c857806314c59b53146100dd578063715018a6146100f05780638da5cb5b146100f8575b5f80fd5b6002546100b390600160a81b900460ff1681565b60405190151581526020015b60405180910390f35b6100db6100d636600461074d565b610181565b005b6100db6100eb366004610777565b6101e0565b6100db610350565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016100bf565b61012660035481565b6040519081526020016100bf565b6002546100b390600160a01b900460ff1681565b600254610105906001600160a01b031681565b6100db61016936600461080e565b610363565b6100db61017c36600461084c565b6103e1565b61018961041e565b6001600160a01b0382165f81815260046020908152604091829020849055815192835282018390527fd7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8910160405180910390a15050565b6001600160a01b0384165f90815260046020526040812054900361023c5760405162461bcd60e51b815260206004820152600e60248201526d6e6f20736574206173207461736b60901b60448201526064015b60405180910390fd5b6003546001600160a01b0385165f8181526004602081905260408083205490516370d6469360e11b81529294939092909163e1ac8d26916102839133918a918a910161086e565b6020604051808303815f875af115801561029f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102c391906108ad565b6102cd91906108c4565b6102d791906108ed565b90505f6102e587868461044b565b604080518981526001600160a01b0389811660208301523382840152881660608201526080810185905282151560a082015290519192507fe9136042b7047d621d8d2ecf0455dfb179c78142db852170867e7fd65455995c919081900360c00190a150505050505050565b61035861041e565b6103615f6106e8565b565b61036b61041e565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303815f875af11580156103b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103db9190610920565b50505050565b6103e961041e565b6001600160a01b03811661041257604051631e4fbdf760e01b81525f6004820152602401610233565b61041b816106e8565b50565b6001546001600160a01b031633146103615760405163118cdaa760e01b8152336004820152602401610233565b600254604051638f91cd1760e01b8152600481018590525f9160019183916001600160a01b031690638f91cd17906024016101e060405180830381865afa158015610498573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104bc9190610988565b6101808101519091506001600160a01b031661061e57600254600160a01b900460ff1615156001146105265760405162461bcd60e51b8152602060048201526013602482015272627579207469636b6574206e6f20616c6c6f7760681b6044820152606401610233565b5f8482610160015161053891906108c4565b825160025460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303815f875af115801561058b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105af9190610920565b5060025460405163c5e7bb3360e01b8152600481018990526001600160a01b038881166024830152604482018890529091169063c5e7bb33906064015f604051808303815f87803b158015610602575f80fd5b505af1158015610614573d5f803e3d5ffd5b50505050506106df565b600254600160a81b900460ff1615156001146106735760405162461bcd60e51b815260206004820152601460248201527373656e64207469636b6574206e6f20616c6c6f7760601b6044820152606401610233565b600254604051635c42e0c560e01b8152600481018890526001600160a01b0387811660248301526044820187905290911690635c42e0c5906064015f604051808303815f87803b1580156106c5575f80fd5b505af11580156106d7573d5f803e3d5ffd5b505050505f91505b50949350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038116811461041b575f80fd5b5f806040838503121561075e575f80fd5b823561076981610739565b946020939093013593505050565b5f805f805f6080868803121561078b575f80fd5b85359450602086013561079d81610739565b935060408601356107ad81610739565b9250606086013567ffffffffffffffff808211156107c9575f80fd5b818801915088601f8301126107dc575f80fd5b8135818111156107ea575f80fd5b8960208285010111156107fb575f80fd5b9699959850939650602001949392505050565b5f805f60608486031215610820575f80fd5b833561082b81610739565b9250602084013561083b81610739565b929592945050506040919091013590565b5f6020828403121561085c575f80fd5b813561086781610739565b9392505050565b6001600160a01b03841681526040602082018190528101829052818360608301375f818301606090810191909152601f909201601f1916010192915050565b5f602082840312156108bd575f80fd5b5051919050565b80820281158282048414176108e757634e487b7160e01b5f52601160045260245ffd5b92915050565b5f8261090757634e487b7160e01b5f52601260045260245ffd5b500490565b8051801515811461091b575f80fd5b919050565b5f60208284031215610930575f80fd5b6108678261090c565b6040516101e0810167ffffffffffffffff8111828210171561096957634e487b7160e01b5f52604160045260245ffd5b60405290565b805161091b81610739565b80516004811061091b575f80fd5b5f6101e08284031215610999575f80fd5b6109a1610939565b6109aa8361096f565b81526109b86020840161097a565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120808401518183015250610140808401518183015250610160808401518183015250610180610a3781850161096f565b908201526101a083810151908201526101c0610a5481850161090c565b90820152939250505056fea2646970667358221220ff2fe5246ad3f442e076a00e5d97a324ecad723bb82dd61da38cad0e595cfa0b64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA035B1FE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xB4309A9C EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xC7FF23BB EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E2A29A EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x82921A5 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x14C59B53 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB3 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x350 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x126 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xB3 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x105 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xD7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6E6F20736574206173207461736B PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70D64693 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 SWAP5 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH4 0xE1AC8D26 SWAP2 PUSH2 0x283 SWAP2 CALLER SWAP2 DUP11 SWAP2 DUP11 SWAP2 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x8ED JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2E5 DUP8 DUP7 DUP5 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE CALLER DUP3 DUP5 ADD MSTORE DUP9 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xE9136042B7047D621D8D2ECF0455DFB179C78142DB852170867E7FD65455995C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0xC0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x358 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x361 PUSH0 PUSH2 0x6E8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x36B PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x920 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x233 JUMP JUMPDEST PUSH2 0x41B DUP2 PUSH2 0x6E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x233 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8F91CD17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8F91CD17 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x498 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61E JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x627579207469636B6574206E6F20616C6C6F77 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x233 JUMP JUMPDEST PUSH0 DUP5 DUP3 PUSH2 0x160 ADD MLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x920 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC5E7BB33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xC5E7BB33 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x614 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E64207469636B6574206E6F20616C6C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x233 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C42E0C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5C42E0C5 SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x769 DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x7AD DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x7EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x7FB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x820 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x82B DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x83B DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x867 DUP2 PUSH2 0x739 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x907 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x91B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x930 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x867 DUP3 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x969 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x91B DUP2 PUSH2 0x739 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x91B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x999 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9A1 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x9AA DUP4 PUSH2 0x96F JUMP JUMPDEST DUP2 MSTORE PUSH2 0x9B8 PUSH1 0x20 DUP5 ADD PUSH2 0x97A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0xA37 DUP2 DUP6 ADD PUSH2 0x96F JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0xA54 DUP2 DUP6 ADD PUSH2 0x90C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0x2F 0xE5 0x24 PUSH11 0xD3F442E076A00E5D97A324 0xEC 0xAD PUSH19 0x3BB82DD61DA38CAD0E595CFA0B64736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "442:2657:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:27;;;;;-1:-1:-1;;;602:27:7;;;;;;;;;179:14:11;;172:22;154:41;;142:2;127:18;602:27:7;;;;;;;;1275:167;;;;;;:::i;:::-;;:::i;:::-;;2378:535;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;1767:32:11;;;1749:51;;1737:2;1722:18;1638:85:0;1603:203:11;639:20:7;;;;;;;;;1957:25:11;;;1945:2;1930:18;639:20:7;1811:177:11;566:26:7;;;;;-1:-1:-1;;;566:26:7;;;;;;526:30;;;;;-1:-1:-1;;;;;526:30:7;;;2955:138;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1275:167:7:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1358:17:7;::::1;;::::0;;;:6:::1;:17;::::0;;;;;;;;:27;;;1404;;2880:51:11;;;2947:18;;2940:34;;;1404:27:7::1;::::0;2853:18:11;1404:27:7::1;;;;;;;1275:167:::0;;:::o;2378:535::-;-1:-1:-1;;;;;2502:17:7;;;;;;:6;:17;;;;;;:22;;2494:48;;;;-1:-1:-1;;;2494:48:7;;3187:2:11;2494:48:7;;;3169:21:11;3226:2;3206:18;;;3199:30;-1:-1:-1;;;3245:18:11;;;3238:44;3299:18;;2494:48:7;;;;;;;;;2729:5;;-1:-1:-1;;;;;2709:17:7;;2624:21;2709:17;;;:6;:17;;;;;;;;;2648:58;;-1:-1:-1;;;2648:58:7;;2624:21;;2729:5;2709:17;;;;2648:31;;:58;;2688:10;;2700:5;;;;2648:58;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;;;:::i;:::-;:86;;;;:::i;:::-;2624:110;;2748:8;2759:45;2770:3;2774:15;2790:13;2759:10;:45::i;:::-;2823:79;;;4780:25:11;;;-1:-1:-1;;;;;4879:15:11;;;4874:2;4859:18;;4852:43;2855:10:7;4911:18:11;;;4904:43;4983:15;;4978:2;4963:18;;4956:43;5030:3;5015:19;;5008:35;;;5087:14;;5080:22;4832:3;5059:19;;5052:51;2823:79:7;;5087:14:11;;-1:-1:-1;2823:79:7;;;;;;4767:3:11;2823:79:7;;;2480:433;;2378:535;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2955:138:7:-;1531:13:0;:11;:13::i;:::-;3047:35:7::1;::::0;-1:-1:-1;;;3047:35:7;;-1:-1:-1;;;;;2898:32:11;;;3047:35:7::1;::::0;::::1;2880:51:11::0;2947:18;;;2940:34;;;3047:23:7;::::1;::::0;::::1;::::0;2853:18:11;;3047:35:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2955:138:::0;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1749:51:11::0;1722:18;;2672:31:0::1;1603:203:11::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;1749:51:11;1722:18;;1901:40:0;1603:203:11;1452:916:7;1642:15;;1629:50;;-1:-1:-1;;;1629:50:7;;;;;1957:25:11;;;1548:4:7;;1578;;1548;;-1:-1:-1;;;;;1642:15:7;;1629:45;;1930:18:11;;1629:50:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1697:25;;;;1596:83;;-1:-1:-1;;;;;;1697:39:7;1693:641;;1769:14;;-1:-1:-1;;;1769:14:7;;;;:22;;1787:4;1769:22;1761:54;;;;-1:-1:-1;;;1761:54:7;;7698:2:11;1761:54:7;;;7680:21:11;7737:2;7717:18;;;7710:30;-1:-1:-1;;;7756:18:11;;;7749:49;7815:18;;1761:54:7;7496:343:11;1761:54:7;1833:21;1883:14;1857:11;:23;;;:40;;;;:::i;:::-;1922:23;;1955:15;;1915:70;;-1:-1:-1;;;1915:70:7;;-1:-1:-1;;;;;1955:15:7;;;1915:70;;;2880:51:11;2947:18;;;2940:34;;;1833:64:7;;-1:-1:-1;1915:39:7;;;;2853:18:11;;1915:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2023:15:7;;2010:76;;-1:-1:-1;;;2010:76:7;;;;;8046:25:11;;;-1:-1:-1;;;;;8107:32:11;;;8087:18;;;8080:60;8156:18;;;8149:34;;;2023:15:7;;;;2010:40;;8019:18:11;;2010:76:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1737:364;1693:641;;;2131:15;;-1:-1:-1;;;2131:15:7;;;;:23;;2150:4;2131:23;2123:56;;;;-1:-1:-1;;;2123:56:7;;8396:2:11;2123:56:7;;;8378:21:11;8435:2;8415:18;;;8408:30;-1:-1:-1;;;8454:18:11;;;8447:50;8514:18;;2123:56:7;8194:344:11;2123:56:7;2226:15;;2213:77;;-1:-1:-1;;;2213:77:7;;;;;8046:25:11;;;-1:-1:-1;;;;;8107:32:11;;;8087:18;;;8080:60;8156:18;;;8149:34;;;2226:15:7;;;;2213:41;;8019:18:11;;2213:77:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:5;2308:11;;1693:641;-1:-1:-1;2354:3:7;1452:916;-1:-1:-1;;;;1452:916:7:o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;206:131:11:-;-1:-1:-1;;;;;281:31:11;;271:42;;261:70;;327:1;324;317:12;342:315;410:6;418;471:2;459:9;450:7;446:23;442:32;439:52;;;487:1;484;477:12;439:52;526:9;513:23;545:31;570:5;545:31;:::i;:::-;595:5;647:2;632:18;;;;619:32;;-1:-1:-1;;;342:315:11:o;662:936::-;759:6;767;775;783;791;844:3;832:9;823:7;819:23;815:33;812:53;;;861:1;858;851:12;812:53;897:9;884:23;874:33;;957:2;946:9;942:18;929:32;970:31;995:5;970:31;:::i;:::-;1020:5;-1:-1:-1;1077:2:11;1062:18;;1049:32;1090:33;1049:32;1090:33;:::i;:::-;1142:7;-1:-1:-1;1200:2:11;1185:18;;1172:32;1223:18;1253:14;;;1250:34;;;1280:1;1277;1270:12;1250:34;1318:6;1307:9;1303:22;1293:32;;1363:7;1356:4;1352:2;1348:13;1344:27;1334:55;;1385:1;1382;1375:12;1334:55;1425:2;1412:16;1451:2;1443:6;1440:14;1437:34;;;1467:1;1464;1457:12;1437:34;1512:7;1507:2;1498:6;1494:2;1490:15;1486:24;1483:37;1480:57;;;1533:1;1530;1523:12;1480:57;662:936;;;;-1:-1:-1;662:936:11;;-1:-1:-1;1564:2:11;1556:11;;1586:6;662:936;-1:-1:-1;;;662:936:11:o;1993:456::-;2070:6;2078;2086;2139:2;2127:9;2118:7;2114:23;2110:32;2107:52;;;2155:1;2152;2145:12;2107:52;2194:9;2181:23;2213:31;2238:5;2213:31;:::i;:::-;2263:5;-1:-1:-1;2320:2:11;2305:18;;2292:32;2333:33;2292:32;2333:33;:::i;:::-;1993:456;;2385:7;;-1:-1:-1;;;2439:2:11;2424:18;;;;2411:32;;1993:456::o;2454:247::-;2513:6;2566:2;2554:9;2545:7;2541:23;2537:32;2534:52;;;2582:1;2579;2572:12;2534:52;2621:9;2608:23;2640:31;2665:5;2640:31;:::i;:::-;2690:5;2454:247;-1:-1:-1;;;2454:247:11:o;3328:485::-;-1:-1:-1;;;;;3513:32:11;;3495:51;;3582:2;3577;3562:18;;3555:30;;;3601:18;;3594:34;;;3621:6;3670;3665:2;3650:18;;3637:48;3734:1;3705:22;;;3729:2;3701:31;;;3694:42;;;;3797:2;3776:15;;;-1:-1:-1;;3772:29:11;3757:45;3753:54;;3328:485;-1:-1:-1;;3328:485:11:o;3818:184::-;3888:6;3941:2;3929:9;3920:7;3916:23;3912:32;3909:52;;;3957:1;3954;3947:12;3909:52;-1:-1:-1;3980:16:11;;3818:184;-1:-1:-1;3818:184:11:o;4007:265::-;4080:9;;;4111;;4128:15;;;4122:22;;4108:37;4098:168;;4188:10;4183:3;4179:20;4176:1;4169:31;4223:4;4220:1;4213:15;4251:4;4248:1;4241:15;4098:168;4007:265;;;;:::o;4277:217::-;4317:1;4343;4333:132;;4387:10;4382:3;4378:20;4375:1;4368:31;4422:4;4419:1;4412:15;4450:4;4447:1;4440:15;4333:132;-1:-1:-1;4479:9:11;;4277:217::o;5114:164::-;5190:13;;5239;;5232:21;5222:32;;5212:60;;5268:1;5265;5258:12;5212:60;5114:164;;;:::o;5283:202::-;5350:6;5403:2;5391:9;5382:7;5378:23;5374:32;5371:52;;;5419:1;5416;5409:12;5371:52;5442:37;5469:9;5442:37;:::i;5490:344::-;5557:2;5551:9;5599:3;5587:16;;5633:18;5618:34;;5654:22;;;5615:62;5612:185;;;5719:10;5714:3;5710:20;5707:1;5700:31;5754:4;5751:1;5744:15;5782:4;5779:1;5772:15;5612:185;5813:2;5806:22;5490:344;:::o;5839:138::-;5918:13;;5940:31;5918:13;5940:31;:::i;5982:151::-;6065:13;;6107:1;6097:12;;6087:40;;6123:1;6120;6113:12;6138:1353;6237:6;6290:3;6278:9;6269:7;6265:23;6261:33;6258:53;;;6307:1;6304;6297:12;6258:53;6333:17;;:::i;:::-;6373:40;6403:9;6373:40;:::i;:::-;6366:5;6359:55;6446:53;6495:2;6484:9;6480:18;6446:53;:::i;:::-;6441:2;6434:5;6430:14;6423:77;6553:2;6542:9;6538:18;6532:25;6527:2;6520:5;6516:14;6509:49;6611:2;6600:9;6596:18;6590:25;6585:2;6578:5;6574:14;6567:49;6670:3;6659:9;6655:19;6649:26;6643:3;6636:5;6632:15;6625:51;6730:3;6719:9;6715:19;6709:26;6703:3;6696:5;6692:15;6685:51;6790:3;6779:9;6775:19;6769:26;6763:3;6756:5;6752:15;6745:51;6850:3;6839:9;6835:19;6829:26;6823:3;6816:5;6812:15;6805:51;6875:3;6931:2;6920:9;6916:18;6910:25;6905:2;6898:5;6894:14;6887:49;;6955:3;7011:2;7000:9;6996:18;6990:25;6985:2;6978:5;6974:14;6967:49;;7035:3;7091:2;7080:9;7076:18;7070:25;7065:2;7058:5;7054:14;7047:49;;7115:3;7171:2;7160:9;7156:18;7150:25;7145:2;7138:5;7134:14;7127:49;;7195:3;7230:49;7275:2;7264:9;7260:18;7230:49;:::i;:::-;7214:14;;;7207:73;7299:3;7340:18;;;7334:25;7318:14;;;7311:49;7379:3;7414:46;7441:18;;;7414:46;:::i;:::-;7398:14;;;7391:70;7402:5;6138:1353;-1:-1:-1;;;6138:1353:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "541800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowBuyTicket()": "2337",
								"allowSendTicket()": "2316",
								"getTicket(uint256,address,address,bytes)": "infinite",
								"owner()": "2408",
								"price()": "2294",
								"redEnvelopeAddr()": "2380",
								"renounceOwnership()": "infinite",
								"setTask(address,uint256)": "26041",
								"transferOwnership(address)": "infinite",
								"withdraw(address,address,uint256)": "infinite"
							},
							"internal": {
								"_getTicket(uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 442,
									"end": 3099,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 808,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 808,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 932,
									"end": 942,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 932,
									"end": 942,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 844,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1026,
									"end": 1041,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1026,
									"end": 1060,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1026,
									"end": 1060,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1120,
									"end": 1154,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1074,
									"end": 1106,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1026,
									"end": 1060,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1026,
									"end": 1060,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1026,
									"end": 1060,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1074,
									"end": 1106,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1173,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1182,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 178,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 178,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 90,
									"end": 103,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 90,
									"end": 103,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 139,
									"end": 152,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 139,
									"end": 152,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 132,
									"end": 153,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 122,
									"end": 154,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 122,
									"end": 154,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 112,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 112,
									"end": 172,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 168,
									"end": 169,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 166,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 158,
									"end": 170,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 112,
									"end": 172,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 112,
									"end": 172,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 14,
									"end": 178,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 14,
									"end": 178,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 14,
									"end": 178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 183,
									"end": 693,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 183,
									"end": 693,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 274,
									"end": 280,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 288,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 290,
									"end": 296,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 304,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 351,
									"end": 354,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 339,
									"end": 348,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 330,
									"end": 337,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 326,
									"end": 349,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 322,
									"end": 355,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 319,
									"end": 372,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 319,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 319,
									"end": 372,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 366,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 358,
									"end": 370,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 319,
									"end": 372,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 319,
									"end": 372,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 394,
									"end": 410,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 394,
									"end": 410,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 439,
									"end": 470,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 439,
									"end": 470,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 429,
									"end": 471,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 429,
									"end": 471,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 419,
									"end": 489,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 419,
									"end": 489,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 485,
									"end": 486,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 483,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 475,
									"end": 487,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 419,
									"end": 489,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 419,
									"end": 489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 508,
									"end": 513,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 532,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 559,
									"end": 577,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 559,
									"end": 577,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 532,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 532,
									"end": 578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 578,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 578,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 522,
									"end": 578,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 522,
									"end": 578,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 597,
									"end": 643,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 639,
									"end": 641,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 637,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 624,
									"end": 642,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 597,
									"end": 643,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 597,
									"end": 643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 597,
									"end": 643,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 597,
									"end": 643,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 683,
									"end": 685,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 668,
									"end": 686,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 668,
									"end": 686,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 668,
									"end": 686,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 668,
									"end": 686,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 662,
									"end": 687,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 183,
									"end": 693,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 183,
									"end": 693,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": 183,
									"end": 693,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 693,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 183,
									"end": 693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 698,
									"end": 901,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 698,
									"end": 901,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 3099,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff2fe5246ad3f442e076a00e5d97a324ecad723bb82dd61da38cad0e595cfa0b64736f6c63430008190033",
									".code": [
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "A035B1FE"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "A035B1FE"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "B4309A9C"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "C7FF23BB"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "D9CAED12"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "6E2A29A"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "82921A5"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "14C59B53"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 3099,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 629,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1275,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2378,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2378,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1767,
											"end": 1799,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1799,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1799,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1800,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1737,
											"end": 1739,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1740,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1603,
											"end": 1806,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 639,
											"end": 659,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 639,
											"end": 659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 639,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 639,
											"end": 659,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 639,
											"end": 659,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 639,
											"end": 659,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 639,
											"end": 659,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 639,
											"end": 659,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 639,
											"end": 659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 639,
											"end": 659,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 659,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 639,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1811,
											"end": 1988,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 566,
											"end": 592,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 566,
											"end": 592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 566,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 566,
											"end": 592,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 566,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 566,
											"end": 592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 566,
											"end": 592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 566,
											"end": 592,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 566,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 566,
											"end": 592,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 566,
											"end": 592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 566,
											"end": 592,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 526,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 526,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 526,
											"end": 556,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 526,
											"end": 556,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 526,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 526,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 526,
											"end": 556,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 526,
											"end": 556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 526,
											"end": 556,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2955,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2955,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1385,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1385,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1431,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D7D0CDF0B13669CAB92566615F9093D52F6D2C34CC92561E500DDDD3AE918DE8"
										},
										{
											"begin": 1404,
											"end": 1431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1404,
											"end": 1431,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1431,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1431,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1431,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1431,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2502,
											"end": 2524,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3169,
											"end": 3190,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3226,
											"end": 3228,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3229,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F20736574206173207461736B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2494,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2645,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70D64693"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2645,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2679,
											"name": "PUSH",
											"source": 7,
											"value": "E1AC8D26"
										},
										{
											"begin": 2648,
											"end": 2679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2698,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2648,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2648,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2648,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2648,
											"end": 2726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2648,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2726,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2648,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2648,
											"end": 2734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2648,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2734,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2648,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2803,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2759,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2759,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4780,
											"end": 4805,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4780,
											"end": 4805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4780,
											"end": 4805,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4852,
											"end": 4895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 2865,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4947,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 4998,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 4998,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4956,
											"end": 4999,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5033,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5015,
											"end": 5034,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5008,
											"end": 5043,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5008,
											"end": 5043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5008,
											"end": 5043,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5101,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5101,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4835,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 5059,
											"end": 5078,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5078,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5103,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5101,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5101,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "PUSH",
											"source": 7,
											"value": "E9136042B7047D621D8D2ECF0455DFB179C78142DB852170867E7FD65455995C"
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4770,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2902,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2898,
											"end": 2930,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 2930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 2930,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3047,
											"end": 3070,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 3047,
											"end": 3070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3047,
											"end": 3082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1800,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1722,
											"end": 1740,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1722,
											"end": 1740,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1603,
											"end": 1806,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1800,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1722,
											"end": 1740,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1722,
											"end": 1740,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1603,
											"end": 1806,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1452,
											"end": 2368,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1452,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8F91CD17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1548,
											"end": 1552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1582,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1578,
											"end": 1582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1552,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1674,
											"name": "PUSH",
											"source": 7,
											"value": "8F91CD17"
										},
										{
											"begin": 1629,
											"end": 1674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1948,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1930,
											"end": 1948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "1E0"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1629,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1629,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1722,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1697,
											"end": 1722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1679,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1736,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1693,
											"end": 2334,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7700,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7701,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7737,
											"end": 7739,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 7717,
											"end": 7735,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7717,
											"end": 7735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7717,
											"end": 7735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7710,
											"end": 7740,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "627579207469636B6574206E6F20616C6C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7749,
											"end": 7798,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 7496,
											"end": 7839,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1761,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1897,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1868,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1880,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1857,
											"end": 1880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1880,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1857,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1945,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2974,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1897,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1897,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1954,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1954,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1954,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 1915,
											"end": 1954,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2853,
											"end": 2871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1915,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1915,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2023,
											"end": 2038,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2023,
											"end": 2038,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C5E7BB33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8046,
											"end": 8071,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8107,
											"end": 8139,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8139,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8080,
											"end": 8140,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8149,
											"end": 8183,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8149,
											"end": 8183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8149,
											"end": 8183,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2023,
											"end": 2038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "C5E7BB33"
										},
										{
											"begin": 2010,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 2101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1693,
											"end": 2334,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 2334,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1693,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2154,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8398,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8435,
											"end": 8437,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8438,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73656E64207469636B6574206E6F20616C6C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8447,
											"end": 8497,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 8194,
											"end": 8538,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2123,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2241,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2226,
											"end": 2241,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C42E0C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8046,
											"end": 8071,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8107,
											"end": 8139,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8107,
											"end": 8139,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8080,
											"end": 8140,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8149,
											"end": 8183,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8149,
											"end": 8183,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8149,
											"end": 8183,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2241,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2254,
											"name": "PUSH",
											"source": 7,
											"value": "5C42E0C5"
										},
										{
											"begin": 2213,
											"end": 2254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2319,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 2334,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1693,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2354,
											"end": 2357,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 2368,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 2368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 337,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 206,
											"end": 337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 281,
											"end": 312,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 281,
											"end": 312,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 271,
											"end": 313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 271,
											"end": 313,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 261,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 261,
											"end": 331,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 327,
											"end": 328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 325,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 317,
											"end": 329,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 342,
											"end": 657,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 410,
											"end": 416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 424,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 473,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 468,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 450,
											"end": 457,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 446,
											"end": 469,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 442,
											"end": 474,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 439,
											"end": 491,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 439,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 439,
											"end": 491,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 485,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 477,
											"end": 489,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 439,
											"end": 491,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 439,
											"end": 491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 526,
											"end": 535,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 513,
											"end": 536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 545,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 570,
											"end": 575,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 545,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 545,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 576,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 545,
											"end": 576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 650,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 632,
											"end": 650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 632,
											"end": 650,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 632,
											"end": 650,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 619,
											"end": 651,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 619,
											"end": 651,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 342,
											"end": 657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 791,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 847,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 832,
											"end": 841,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 823,
											"end": 830,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 819,
											"end": 842,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 815,
											"end": 848,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 812,
											"end": 865,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 812,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 812,
											"end": 865,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 861,
											"end": 862,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 851,
											"end": 863,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 812,
											"end": 865,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 812,
											"end": 865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 897,
											"end": 906,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 884,
											"end": 907,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 907,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 874,
											"end": 907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 955,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 942,
											"end": 960,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 929,
											"end": 961,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 995,
											"end": 1000,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 970,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1025,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1077,
											"end": 1079,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1081,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1049,
											"end": 1081,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1090,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1149,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1172,
											"end": 1204,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1250,
											"end": 1284,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1250,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1250,
											"end": 1284,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1282,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1250,
											"end": 1284,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1250,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1316,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 1325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1360,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1344,
											"end": 1371,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1334,
											"end": 1389,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1375,
											"end": 1387,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1389,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1334,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1428,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1453,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1454,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1437,
											"end": 1471,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1437,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1437,
											"end": 1471,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1437,
											"end": 1471,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1437,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1519,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1490,
											"end": 1505,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1486,
											"end": 1510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1520,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1537,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1480,
											"end": 1537,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1523,
											"end": 1535,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1537,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1480,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1556,
											"end": 1567,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1592,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 662,
											"end": 1598,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 662,
											"end": 1598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2449,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1993,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2086,
											"end": 2092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2141,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2127,
											"end": 2136,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2125,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2114,
											"end": 2137,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2110,
											"end": 2142,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2159,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2107,
											"end": 2159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2155,
											"end": 2156,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2159,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2107,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2181,
											"end": 2204,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2213,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2213,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2213,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2213,
											"end": 2244,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2213,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2268,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2322,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2324,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2292,
											"end": 2324,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2333,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2366,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2333,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2449,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2449,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2392,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2392,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2439,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2442,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2701,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2454,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2568,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2563,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2552,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2564,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2534,
											"end": 2586,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2534,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2534,
											"end": 2586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2534,
											"end": 2586,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2534,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2608,
											"end": 2631,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2665,
											"end": 2670,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2640,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2671,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2640,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2701,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2454,
											"end": 2701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3328,
											"end": 3813,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3328,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3545,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3545,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3546,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3546,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3582,
											"end": 3584,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3580,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3562,
											"end": 3580,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3555,
											"end": 3585,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3555,
											"end": 3585,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3555,
											"end": 3585,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3601,
											"end": 3619,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3601,
											"end": 3619,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3628,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3628,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3628,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3621,
											"end": 3627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3670,
											"end": 3676,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3637,
											"end": 3685,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 3734,
											"end": 3735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3727,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3705,
											"end": 3727,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3705,
											"end": 3727,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3729,
											"end": 3731,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3701,
											"end": 3732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3701,
											"end": 3732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3701,
											"end": 3732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3694,
											"end": 3736,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3694,
											"end": 3736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3694,
											"end": 3736,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3694,
											"end": 3736,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3776,
											"end": 3791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3791,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3791,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3772,
											"end": 3801,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3757,
											"end": 3802,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3753,
											"end": 3807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3753,
											"end": 3807,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3328,
											"end": 3813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3328,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3818,
											"end": 4002,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 3818,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 3894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3943,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3920,
											"end": 3927,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3939,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 3944,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3947,
											"end": 3959,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3909,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3818,
											"end": 4002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3818,
											"end": 4002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4272,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4007,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4128,
											"end": 4143,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4128,
											"end": 4143,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4128,
											"end": 4143,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4122,
											"end": 4144,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4122,
											"end": 4144,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4145,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 4098,
											"end": 4266,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4198,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 4183,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4200,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4223,
											"end": 4227,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 4220,
											"end": 4221,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4213,
											"end": 4228,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4256,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4266,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 4098,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4272,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4272,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4272,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4272,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4494,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4277,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4344,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4333,
											"end": 4465,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4387,
											"end": 4397,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 4382,
											"end": 4385,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4378,
											"end": 4398,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 4419,
											"end": 4420,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4427,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4454,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4455,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4465,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4333,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5114,
											"end": 5278,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 5114,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5190,
											"end": 5203,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5190,
											"end": 5203,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5239,
											"end": 5252,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5239,
											"end": 5252,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5253,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5222,
											"end": 5254,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5222,
											"end": 5254,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5212,
											"end": 5272,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5272,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5212,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5114,
											"end": 5278,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5114,
											"end": 5278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5114,
											"end": 5278,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5114,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5485,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5283,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5350,
											"end": 5356,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5405,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5382,
											"end": 5389,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5378,
											"end": 5401,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5371,
											"end": 5423,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5371,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5371,
											"end": 5423,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5417,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5409,
											"end": 5421,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5371,
											"end": 5423,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5371,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5469,
											"end": 5478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5442,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 5442,
											"end": 5479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5834,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 5490,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 5559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5560,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5599,
											"end": 5602,
											"name": "PUSH",
											"source": 11,
											"value": "1E0"
										},
										{
											"begin": 5587,
											"end": 5603,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5587,
											"end": 5603,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5633,
											"end": 5651,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5652,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5618,
											"end": 5652,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5676,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5676,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5676,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5615,
											"end": 5677,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5719,
											"end": 5729,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5714,
											"end": 5717,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5710,
											"end": 5730,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5731,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5758,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 5751,
											"end": 5752,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 5759,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5782,
											"end": 5786,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5779,
											"end": 5780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5772,
											"end": 5787,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5806,
											"end": 5828,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5834,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5977,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 5839,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5918,
											"end": 5931,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5918,
											"end": 5931,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5940,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5918,
											"end": 5931,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5940,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 5940,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5982,
											"end": 6133,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 5982,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6078,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6078,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6107,
											"end": 6108,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6097,
											"end": 6109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6097,
											"end": 6109,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6087,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 6087,
											"end": 6127,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6123,
											"end": 6124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6121,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6125,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6138,
											"end": 7491,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 6138,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "PUSH",
											"source": 11,
											"value": "1E0"
										},
										{
											"begin": 6278,
											"end": 6287,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6276,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6288,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6261,
											"end": 6294,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6308,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6297,
											"end": 6309,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6333,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6333,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 6333,
											"end": 6350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6333,
											"end": 6350,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6333,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6373,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 6403,
											"end": 6412,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6373,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 6373,
											"end": 6413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6373,
											"end": 6413,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 6373,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6366,
											"end": 6371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6359,
											"end": 6414,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 6495,
											"end": 6497,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6484,
											"end": 6493,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6480,
											"end": 6498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 6446,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6446,
											"end": 6499,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 6446,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6441,
											"end": 6443,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6434,
											"end": 6439,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6423,
											"end": 6500,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6555,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6551,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6557,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6520,
											"end": 6525,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6516,
											"end": 6530,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6509,
											"end": 6558,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6611,
											"end": 6613,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6600,
											"end": 6609,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6578,
											"end": 6583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6574,
											"end": 6588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6567,
											"end": 6616,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6673,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6659,
											"end": 6668,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6655,
											"end": 6674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6649,
											"end": 6675,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6636,
											"end": 6641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6625,
											"end": 6676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6730,
											"end": 6733,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 6719,
											"end": 6728,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6715,
											"end": 6734,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6709,
											"end": 6735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6703,
											"end": 6706,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 6696,
											"end": 6701,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6692,
											"end": 6707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6736,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6790,
											"end": 6793,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6775,
											"end": 6794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6769,
											"end": 6795,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6763,
											"end": 6766,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 6756,
											"end": 6761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6752,
											"end": 6767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6850,
											"end": 6853,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6829,
											"end": 6855,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6823,
											"end": 6826,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6816,
											"end": 6821,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6805,
											"end": 6856,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6875,
											"end": 6878,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6931,
											"end": 6933,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6920,
											"end": 6929,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 6934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6935,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6894,
											"end": 6908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6887,
											"end": 6936,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6887,
											"end": 6936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6955,
											"end": 6958,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 7011,
											"end": 7013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7000,
											"end": 7009,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6985,
											"end": 6987,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6978,
											"end": 6983,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6974,
											"end": 6988,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7016,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 7016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "PUSH",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 7091,
											"end": 7093,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7080,
											"end": 7089,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7070,
											"end": 7095,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7065,
											"end": 7067,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7058,
											"end": 7063,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7054,
											"end": 7068,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7047,
											"end": 7096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7047,
											"end": 7096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7115,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 7171,
											"end": 7173,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7160,
											"end": 7169,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7150,
											"end": 7175,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7145,
											"end": 7147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7138,
											"end": 7143,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7134,
											"end": 7148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7176,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7127,
											"end": 7176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7195,
											"end": 7198,
											"name": "PUSH",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 7230,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 7275,
											"end": 7277,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7264,
											"end": 7273,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7230,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 7230,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7230,
											"end": 7279,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 7230,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7214,
											"end": 7228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7214,
											"end": 7228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7214,
											"end": 7228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7207,
											"end": 7280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7302,
											"name": "PUSH",
											"source": 11,
											"value": "1A0"
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7359,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7311,
											"end": 7360,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "PUSH",
											"source": 11,
											"value": "1C0"
										},
										{
											"begin": 7414,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7414,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 7414,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7414,
											"end": 7460,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 7414,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7412,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7398,
											"end": 7412,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7391,
											"end": 7461,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7402,
											"end": 7407,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6138,
											"end": 7491,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6138,
											"end": 7491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/TaskControlDirect.sol",
								"contracts/interfaces/IRedEnvelope.sol",
								"contracts/interfaces/ITaskControlDirect.sol",
								"contracts/interfaces/ItaskCallee.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowBuyTicket()": "b4309a9c",
							"allowSendTicket()": "06e2a29a",
							"getTicket(uint256,address,address,bytes)": "14c59b53",
							"owner()": "8da5cb5b",
							"price()": "a035b1fe",
							"redEnvelopeAddr()": "c7ff23bb",
							"renounceOwnership()": "715018a6",
							"setTask(address,uint256)": "082921a5",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,address,uint256)": "d9caed12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_redEnvelopeAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowBuyTicket\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowSendTicket\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"TaskAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"}],\"name\":\"TicketGet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowBuyTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowSendTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redEnvelopeAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"setTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TaskControlDirect.sol\":\"TaskControlDirect\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/TaskControlDirect.sol\":{\"keccak256\":\"0x3e8544084f4702fb46c34ea12069438cb7f1e090f72180f0126b0037e4e1af4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b7cf8c25a116e7b384c0c29b0cf4003a96983ddfced772e4cf3928ed0c1fa5f\",\"dweb:/ipfs/QmWQ5YKLeBDHeiH5GxZe5oMiqxxhxfYoLNrSq2WDmaspvY\"]},\"contracts/interfaces/IRedEnvelope.sol\":{\"keccak256\":\"0x59aba94fd75d769066dc8dc6db6f2511d424656acca2f8c7f60c66cff2dc1f7e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba2e181d89ef297a064a31f72797ca71e53368e8cda85c59bc834e581daa91d6\",\"dweb:/ipfs/QmXvVjSi3xpbSyEnjtRf69AAReEnzQQh6RzikYJajqK5R2\"]},\"contracts/interfaces/ITaskControlDirect.sol\":{\"keccak256\":\"0x4c850a4ef6d78888a2066b7678e34c3b11b848645a0e628177e184c03dfff482\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc63a5b8f0b337dc84ade9bf7cb6a0ed62d080b7d6643fa305859b918ecee58\",\"dweb:/ipfs/QmYNPx9atQWYTLgGvdxdB9HpbTs36kr4757kLuHyPmUzeS\"]},\"contracts/interfaces/ItaskCallee.sol\":{\"keccak256\":\"0x96f9931598e1fad8b2f9c5a1f560835657f1e1be9481ea2fb8f6d1f1f6dd5596\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://26f94f8a89fbe5944c9061d2e7c6e55b0e08c707b2eaffdc0d32573edee53a8b\",\"dweb:/ipfs/QmXFMoPoHe5H42gHtZLDXLPDZQF2wuF9mBhupXURgzPRAs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 944,
								"contract": "contracts/TaskControlDirect.sol:TaskControlDirect",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/TaskControlDirect.sol:TaskControlDirect",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1018,
								"contract": "contracts/TaskControlDirect.sol:TaskControlDirect",
								"label": "redEnvelopeAddr",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1020,
								"contract": "contracts/TaskControlDirect.sol:TaskControlDirect",
								"label": "allowBuyTicket",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 1022,
								"contract": "contracts/TaskControlDirect.sol:TaskControlDirect",
								"label": "allowSendTicket",
								"offset": 21,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 1024,
								"contract": "contracts/TaskControlDirect.sol:TaskControlDirect",
								"label": "price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1028,
								"contract": "contracts/TaskControlDirect.sol:TaskControlDirect",
								"label": "_tasks",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"IRedEnvelope": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "ClaimPrize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "PrizeDrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "RedEnvelopeClaimable",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "buyTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sendTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "injectTickets",
									"type": "uint256"
								}
							],
							"name": "RedEnvelopeClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxTickets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxPrizeNum",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketPirce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "ticketToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sendAllowAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoClaim",
									"type": "bool"
								}
							],
							"name": "RedEnvelopeCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsGet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsInject",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "TicketsPurchase",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "buyTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "claimPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTickets",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPrizeNum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_secret",
									"type": "uint256"
								}
							],
							"name": "createRedEnvelope",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketPirce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTickets",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPrizeNum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_injectAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_injectTicketNum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_sendAllowAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_secret",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_autoClaim",
									"type": "bool"
								}
							],
							"name": "createRedEnvelopeDetail",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								}
							],
							"name": "drawPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "endRedEnvelope",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "injectTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ticketNumbers",
									"type": "uint256"
								}
							],
							"name": "sendTickets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCurrentRedEnvelopeId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "viewRedEnvelope",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "ticketToken",
											"type": "address"
										},
										{
											"internalType": "enum Status",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPrizeNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "buyTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "sendTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "injectTickets",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "userAddrNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "userTxNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "injectAddrNum",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "ticketPirce",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "sendAllowAddr",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "secret",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "autoClaim",
											"type": "bool"
										}
									],
									"internalType": "struct RedEnvelope",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "viewRedEnvelopeClaimPrize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "viewRedEnvelopeStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createRedEnvelope(uint256,uint256,uint256,uint256)": {
								"details": "Callable by operator",
								"params": {
									"_endTime": ": endTime of the RedEnvelope，0 = no limit",
									"_maxPrizeNum": ": prize num of the RedEnvelope，0为100%中奖",
									"_maxTickets": ": max ticket of the RedEnvelope，0 = no limit",
									"_secret": ": "
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTickets(uint256,address,uint256)": "c5e7bb33",
							"claimPrize(uint256)": "d7098154",
							"createRedEnvelope(uint256,uint256,uint256,uint256)": "0e9e1262",
							"createRedEnvelopeDetail(address,uint256,uint256,uint256,uint256,address,uint256,address,uint256,bool)": "4a42c8f6",
							"drawPrize(uint256,uint256)": "bce3468d",
							"endRedEnvelope(uint256)": "3834efe1",
							"injectTickets(uint256,uint256)": "559f24bc",
							"sendTickets(uint256,address,uint256)": "5c42e0c5",
							"viewCurrentRedEnvelopeId()": "94456fa4",
							"viewRedEnvelope(uint256)": "8f91cd17",
							"viewRedEnvelopeClaimPrize(uint256,address)": "dc912a81",
							"viewRedEnvelopeStatus(uint256)": "fe5c5976"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"ClaimPrize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"PrizeDrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"RedEnvelopeClaimable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sendTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"injectTickets\",\"type\":\"uint256\"}],\"name\":\"RedEnvelopeClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTickets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPrizeNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketPirce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ticketToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendAllowAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"name\":\"RedEnvelopeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsInject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"TicketsPurchase\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"buyTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_secret\",\"type\":\"uint256\"}],\"name\":\"createRedEnvelope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPirce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_injectAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_injectTicketNum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sendAllowAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_secret\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_autoClaim\",\"type\":\"bool\"}],\"name\":\"createRedEnvelopeDetail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"drawPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"endRedEnvelope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"injectTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ticketNumbers\",\"type\":\"uint256\"}],\"name\":\"sendTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCurrentRedEnvelopeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"viewRedEnvelope\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ticketToken\",\"type\":\"address\"},{\"internalType\":\"enum Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrizeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sendTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"injectTickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAddrNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userTxNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"injectAddrNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketPirce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sendAllowAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"secret\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoClaim\",\"type\":\"bool\"}],\"internalType\":\"struct RedEnvelope\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"viewRedEnvelopeClaimPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"viewRedEnvelopeStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createRedEnvelope(uint256,uint256,uint256,uint256)\":{\"details\":\"Callable by operator\",\"params\":{\"_endTime\":\": endTime of the RedEnvelope\\uff0c0 = no limit\",\"_maxPrizeNum\":\": prize num of the RedEnvelope\\uff0c0\\u4e3a100%\\u4e2d\\u5956\",\"_maxTickets\":\": max ticket of the RedEnvelope\\uff0c0 = no limit\",\"_secret\":\": \"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createRedEnvelope(uint256,uint256,uint256,uint256)\":{\"notice\":\"create the RedEnvelope\\uff0c\\u91c7\\u7528\\u9ed8\\u8ba4\\u4ee3\\u5e01\\u5730\\u5740\\u53ca\\u914d\\u7f6e\\uff0c\\u9ed8\\u8ba4\\u4e3a\\u4ec5\\u652f\\u6301buyTickets\\u6a21\\u5f0f\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRedEnvelope.sol\":\"IRedEnvelope\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRedEnvelope.sol\":{\"keccak256\":\"0x59aba94fd75d769066dc8dc6db6f2511d424656acca2f8c7f60c66cff2dc1f7e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba2e181d89ef297a064a31f72797ca71e53368e8cda85c59bc834e581daa91d6\",\"dweb:/ipfs/QmXvVjSi3xpbSyEnjtRf69AAReEnzQQh6RzikYJajqK5R2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createRedEnvelope(uint256,uint256,uint256,uint256)": {
								"notice": "create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ITaskControlDirect.sol": {
				"ITaskControlDirect": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "taskAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fromAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiveAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ticketNumbers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "buy",
									"type": "bool"
								}
							],
							"name": "TicketGet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_taskAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_receiveAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "getTicket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTicket(uint256,address,address,bytes)": "14c59b53"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taskAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketNumbers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"}],\"name\":\"TicketGet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_taskAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ITaskControlDirect.sol\":\"ITaskControlDirect\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ITaskControlDirect.sol\":{\"keccak256\":\"0x4c850a4ef6d78888a2066b7678e34c3b11b848645a0e628177e184c03dfff482\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc63a5b8f0b337dc84ade9bf7cb6a0ed62d080b7d6643fa305859b918ecee58\",\"dweb:/ipfs/QmYNPx9atQWYTLgGvdxdB9HpbTs36kr4757kLuHyPmUzeS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"ItaskCallee": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "taskCall",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"taskCall(address,bytes)": "e1ac8d26"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"taskCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ItaskCallee.sol\":\"ItaskCallee\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ItaskCallee.sol\":{\"keccak256\":\"0x96f9931598e1fad8b2f9c5a1f560835657f1e1be9481ea2fb8f6d1f1f6dd5596\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://26f94f8a89fbe5944c9061d2e7c6e55b0e08c707b2eaffdc0d32573edee53a8b\",\"dweb:/ipfs/QmXFMoPoHe5H42gHtZLDXLPDZQF2wuF9mBhupXURgzPRAs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1002
						]
					},
					"id": 1003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 939,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1674:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 938,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 942,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1720:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 940,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 944,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1763:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 947,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:6"
									},
									"src": "1850:37:6"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "1907:38:6",
										"statements": [
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "1927:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:6"
											}
										]
									},
									"id": 955,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:6"
									},
									"scope": 1002,
									"src": "1893:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "2346:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2356:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:6"
											},
											{
												"id": 961,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 962,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2398:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:6"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 966,
									"name": "nonReentrant",
									"nameLocation": "2331:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:6"
									},
									"src": "2322:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2470:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 969,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2558:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 970,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2569:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "2554:86:6",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "2578:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 972,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "2599:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "2592:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2714:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2724:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:6"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:6"
									},
									"scope": 1002,
									"src": "2431:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2782:170:6",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2924:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "2934:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:6"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:6"
									},
									"scope": 1002,
									"src": "2744:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "3195:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3212:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 997,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3223:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 995,
												"id": 999,
												"nodeType": "Return",
												"src": "3205:25:6"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3189:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:6"
									},
									"scope": 1002,
									"src": "3131:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1003,
							"src": "886:2353:6",
							"usedErrors": [
								947
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:6"
				},
				"id": 6
			},
			"contracts/TaskControlDirect.sol": {
				"ast": {
					"absolutePath": "contracts/TaskControlDirect.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IRedEnvelope": [
							1506
						],
						"ITaskControlDirect": [
							1534
						],
						"ItaskCallee": [
							1546
						],
						"Ownable": [
							147
						],
						"RedEnvelope": [
							1302
						],
						"ReentrancyGuard": [
							1002
						],
						"Status": [
							1270
						],
						"TaskControlDirect": [
							1263
						],
						"Ticket": [
							1309
						]
					},
					"id": 1264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "93:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 148,
							"src": "123:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1006,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 800,
							"src": "180:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1007,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 1003,
							"src": "240:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IRedEnvelope.sol",
							"file": "./interfaces/IRedEnvelope.sol",
							"id": 1008,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 1507,
							"src": "304:39:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ITaskControlDirect.sol",
							"file": "./interfaces/ITaskControlDirect.sol",
							"id": 1009,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 1535,
							"src": "348:45:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ItaskCallee.sol",
							"file": "./interfaces/ItaskCallee.sol",
							"id": 1010,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1264,
							"sourceUnit": 1547,
							"src": "398:38:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1011,
										"name": "ITaskControlDirect",
										"nameLocations": [
											"472:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1534,
										"src": "472:18:7"
									},
									"id": 1012,
									"nodeType": "InheritanceSpecifier",
									"src": "472:18:7"
								},
								{
									"baseName": {
										"id": 1013,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"491:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "491:15:7"
									},
									"id": 1014,
									"nodeType": "InheritanceSpecifier",
									"src": "491:15:7"
								},
								{
									"baseName": {
										"id": 1015,
										"name": "Ownable",
										"nameLocations": [
											"508:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "508:7:7"
									},
									"id": 1016,
									"nodeType": "InheritanceSpecifier",
									"src": "508:7:7"
								}
							],
							"canonicalName": "TaskControlDirect",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1263,
							"linearizedBaseContracts": [
								1263,
								147,
								933,
								1002,
								1534
							],
							"name": "TaskControlDirect",
							"nameLocation": "451:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c7ff23bb",
									"id": 1018,
									"mutability": "mutable",
									"name": "redEnvelopeAddr",
									"nameLocation": "541:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1263,
									"src": "526:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1017,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "526:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4309a9c",
									"id": 1020,
									"mutability": "mutable",
									"name": "allowBuyTicket",
									"nameLocation": "578:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1263,
									"src": "566:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1019,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "566:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06e2a29a",
									"id": 1022,
									"mutability": "mutable",
									"name": "allowSendTicket",
									"nameLocation": "614:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1263,
									"src": "602:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1021,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "602:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 1024,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "654:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1263,
									"src": "639:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1023,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "639:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1028,
									"mutability": "mutable",
									"name": "_tasks",
									"nameLocation": "706:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1263,
									"src": "670:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1027,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1025,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "678:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "670:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1026,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "689:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "d7d0cdf0b13669cab92566615f9093d52f6d2c34cc92561e500dddd3ae918de8",
									"id": 1034,
									"name": "TaskAdd",
									"nameLocation": "757:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "taskAddr",
												"nameLocation": "773:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "765:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "790:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "782:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:33:7"
									},
									"src": "751:47:7"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "953:240:7",
										"statements": [
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "redEnvelopeAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1026:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1053,
														"name": "_redEnvelopeAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "1044:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1026:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1026:34:7"
											},
											{
												"expression": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1056,
														"name": "allowBuyTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "1074:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1057,
														"name": "_allowBuyTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "1091:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1074:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "1074:32:7"
											},
											{
												"expression": {
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1060,
														"name": "allowSendTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1120:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1061,
														"name": "_allowSendTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1138:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1120:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "1120:34:7"
											},
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1064,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "1168:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1065,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1176:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1168:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "1168:14:7"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"expression": {
																"id": 1047,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "932:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "936:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "932:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "924:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1045,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "924:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "924:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1050,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1044,
												"name": "Ownable",
												"nameLocations": [
													"916:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "916:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "916:28:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_redEnvelopeAddr",
												"nameLocation": "828:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "820:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "_allowBuyTicket",
												"nameLocation": "850:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "845:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "_allowSendTicket",
												"nameLocation": "871:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "866:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "866:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "896:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "888:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:84:7"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:0:7"
									},
									"scope": 1263,
									"src": "808:385:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "1344:98:7",
										"statements": [
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1078,
															"name": "_tasks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1358:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1080,
														"indexExpression": {
															"id": 1079,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "1365:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1358:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1081,
														"name": "_weight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "1378:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1358:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "1358:27:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1085,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "1412:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "_weight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "1423:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "TaskAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "1404:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1404:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "EmitStatement",
												"src": "1399:32:7"
											}
										]
									},
									"functionSelector": "082921a5",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1076,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1075,
												"name": "onlyOwner",
												"nameLocations": [
													"1335:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1335:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1335:9:7"
										}
									],
									"name": "setTask",
									"nameLocation": "1284:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "1300:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "1292:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "_weight",
												"nameLocation": "1318:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "1310:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:35:7"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:0:7"
									},
									"scope": 1263,
									"src": "1275:167:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "1553:815:7",
										"statements": [
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "buy",
														"nameLocation": "1572:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1179,
														"src": "1567:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1101,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1567:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1578:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1567:15:7"
											},
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "redEnvelope",
														"nameLocation": "1615:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1179,
														"src": "1596:30:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RedEnvelope_$1302_memory_ptr",
															"typeString": "struct RedEnvelope"
														},
														"typeName": {
															"id": 1106,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1105,
																"name": "RedEnvelope",
																"nameLocations": [
																	"1596:11:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1302,
																"src": "1596:11:7"
															},
															"referencedDeclaration": 1302,
															"src": "1596:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RedEnvelope_$1302_storage_ptr",
																"typeString": "struct RedEnvelope"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"arguments": [
														{
															"id": 1112,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "1675:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1109,
																	"name": "redEnvelopeAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "1642:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1108,
																"name": "IRedEnvelope",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "1629:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1506_$",
																	"typeString": "type(contract IRedEnvelope)"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1629:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRedEnvelope_$1506",
																"typeString": "contract IRedEnvelope"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1659:15:7",
														"memberName": "viewRedEnvelope",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1496,
														"src": "1629:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_RedEnvelope_$1302_memory_ptr_$",
															"typeString": "function (uint256) view external returns (struct RedEnvelope memory)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1629:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RedEnvelope_$1302_memory_ptr",
														"typeString": "struct RedEnvelope memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1596:83:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1115,
															"name": "redEnvelope",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "1697:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RedEnvelope_$1302_memory_ptr",
																"typeString": "struct RedEnvelope memory"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1709:13:7",
														"memberName": "sendAllowAddr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1297,
														"src": "1697:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1734:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1726:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1117,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1726:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1726:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1697:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "2105:229:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1156,
																			"name": "allowSendTicket",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1022,
																			"src": "2131:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2150:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "2131:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "73656e64207469636b6574206e6f20616c6c6f77",
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2156:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0",
																			"typeString": "literal_string \"send ticket no allow\""
																		},
																		"value": "send ticket no allow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_110591969460ec79cc925bf6c276ef9c7113724fec02d378f03c10e1029c64e0",
																			"typeString": "literal_string \"send ticket no allow\""
																		}
																	],
																	"id": 1155,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2123:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2123:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1161,
															"nodeType": "ExpressionStatement",
															"src": "2123:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1166,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "2255:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1167,
																		"name": "_receiveAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "2259:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1168,
																		"name": "_ticketNumbers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "2275:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1163,
																				"name": "redEnvelopeAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1018,
																				"src": "2226:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1162,
																			"name": "IRedEnvelope",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "2213:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1506_$",
																				"typeString": "type(contract IRedEnvelope)"
																			}
																		},
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2213:29:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IRedEnvelope_$1506",
																			"typeString": "contract IRedEnvelope"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2243:11:7",
																	"memberName": "sendTickets",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1450,
																	"src": "2213:41:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256) external"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2213:77:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1170,
															"nodeType": "ExpressionStatement",
															"src": "2213:77:7"
														},
														{
															"expression": {
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1171,
																	"name": "buy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "2308:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2314:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2308:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1174,
															"nodeType": "ExpressionStatement",
															"src": "2308:11:7"
														}
													]
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "1693:641:7",
												"trueBody": {
													"id": 1154,
													"nodeType": "Block",
													"src": "1737:364:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1123,
																			"name": "allowBuyTicket",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "1769:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1787:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "1769:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "627579207469636b6574206e6f20616c6c6f77",
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1793:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78",
																			"typeString": "literal_string \"buy ticket no allow\""
																		},
																		"value": "buy ticket no allow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1f37e8201e7de5c282707fbcb3305e8311e2fcd4af60b8551043b2120db4fb78",
																			"typeString": "literal_string \"buy ticket no allow\""
																		}
																	],
																	"id": 1122,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1761:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1761:54:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1128,
															"nodeType": "ExpressionStatement",
															"src": "1761:54:7"
														},
														{
															"assignments": [
																1130
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1130,
																	"mutability": "mutable",
																	"name": "approveAmount",
																	"nameLocation": "1841:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1154,
																	"src": "1833:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1129,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1833:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1135,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1131,
																		"name": "redEnvelope",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "1857:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RedEnvelope_$1302_memory_ptr",
																			"typeString": "struct RedEnvelope memory"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1869:11:7",
																	"memberName": "ticketPirce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "1857:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1133,
																	"name": "_ticketNumbers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "1883:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1857:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1833:64:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1141,
																		"name": "redEnvelopeAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "1955:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1142,
																		"name": "approveAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "1971:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1137,
																					"name": "redEnvelope",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1107,
																					"src": "1922:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RedEnvelope_$1302_memory_ptr",
																						"typeString": "struct RedEnvelope memory"
																					}
																				},
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1934:11:7",
																				"memberName": "ticketToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1272,
																				"src": "1922:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1136,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "1915:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1915:31:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1947:7:7",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "1915:39:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1915:70:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1144,
															"nodeType": "ExpressionStatement",
															"src": "1915:70:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1149,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "2051:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1150,
																		"name": "_receiveAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "2055:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1151,
																		"name": "_ticketNumbers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "2071:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1146,
																				"name": "redEnvelopeAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1018,
																				"src": "2023:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1145,
																			"name": "IRedEnvelope",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "2010:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IRedEnvelope_$1506_$",
																				"typeString": "type(contract IRedEnvelope)"
																			}
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2010:29:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IRedEnvelope_$1506",
																			"typeString": "contract IRedEnvelope"
																		}
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2040:10:7",
																	"memberName": "buyTickets",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "2010:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256) external"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2010:76:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "2010:76:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1177,
													"name": "buy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1102,
													"src": "2354:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1178,
												"nodeType": "Return",
												"src": "2347:10:7"
											}
										]
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTicket",
									"nameLocation": "1461:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1480:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1472:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "1492:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1484:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "1516:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1508:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:60:7"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "1548:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1548:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:6:7"
									},
									"scope": 1263,
									"src": "1452:916:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1533
									],
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "2480:433:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1192,
																	"name": "_tasks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "2502:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1194,
																"indexExpression": {
																	"id": 1193,
																	"name": "_taskAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "2509:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2502:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2523:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2502:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f20736574206173207461736b",
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2525:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673",
																"typeString": "literal_string \"no set as task\""
															},
															"value": "no set as task"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_327e46201969e8e7e8fcb32a8ed36341b888e957ad564401ceaf86035a0c3673",
																"typeString": "literal_string \"no set as task\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2494:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2494:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "2494:48:7"
											},
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "ticketNumbers",
														"nameLocation": "2632:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1241,
														"src": "2624:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1200,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2624:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1208,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2688:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2692:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2688:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2680:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1206,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2680:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2680:19:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1211,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "2700:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1203,
																			"name": "_taskAddr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1184,
																			"src": "2660:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1202,
																		"name": "ItaskCallee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1546,
																		"src": "2648:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ItaskCallee_$1546_$",
																			"typeString": "type(contract ItaskCallee)"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2648:22:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ItaskCallee_$1546",
																		"typeString": "contract ItaskCallee"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2671:8:7",
																"memberName": "taskCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1545,
																"src": "2648:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (address,bytes memory) external returns (uint256)"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2648:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"baseExpression": {
																"id": 1213,
																"name": "_tasks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "2709:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1215,
															"indexExpression": {
																"id": 1214,
																"name": "_taskAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "2716:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2709:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2648:78:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1217,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "2729:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2648:86:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2624:110:7"
											},
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "buy",
														"nameLocation": "2753:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1241,
														"src": "2748:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2748:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"arguments": [
														{
															"id": 1223,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "2770:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1224,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2774:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "2790:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1222,
														"name": "_getTicket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "2759:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,address,uint256) returns (bool)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2759:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2748:56:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1229,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "2833:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1230,
															"name": "_taskAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "2837:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1233,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2855:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2859:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2855:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2847:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1231,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2847:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2847:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "_receiveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2868:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "ticketNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "2884:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1238,
															"name": "buy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "2898:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1228,
														"name": "TicketGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "2823:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,address,address,uint256,bool)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "EmitStatement",
												"src": "2818:84:7"
											}
										]
									},
									"functionSelector": "14c59b53",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTicket",
									"nameLocation": "2387:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2405:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2397:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "2417:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2409:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "2435:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2427:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2451:20:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2451:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2396:76:7"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:0:7"
									},
									"scope": 1263,
									"src": "2378:535:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "3033:60:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1257,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "3071:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "3075:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1254,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "3054:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1253,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "3047:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3062:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "3047:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3047:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "3047:35:7"
											}
										]
									},
									"functionSelector": "d9caed12",
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1251,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1250,
												"name": "onlyOwner",
												"nameLocations": [
													"3024:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3024:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3024:9:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "2964:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2981:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "2973:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2973:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2996:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "2988:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "3000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2972:43:7"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3033:0:7"
									},
									"scope": 1263,
									"src": "2955:138:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1264,
							"src": "442:2657:7",
							"usedErrors": [
								13,
								18,
								947
							],
							"usedEvents": [
								24,
								1034,
								1522
							]
						}
					],
					"src": "93:3006:7"
				},
				"id": 7
			},
			"contracts/interfaces/IRedEnvelope.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IRedEnvelope.sol",
					"exportedSymbols": {
						"IRedEnvelope": [
							1506
						],
						"RedEnvelope": [
							1302
						],
						"Status": [
							1270
						],
						"Ticket": [
							1309
						]
					},
					"id": 1507,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:8"
						},
						{
							"canonicalName": "Status",
							"id": 1270,
							"members": [
								{
									"id": 1266,
									"name": "Pending",
									"nameLocation": "89:7:8",
									"nodeType": "EnumValue",
									"src": "89:7:8"
								},
								{
									"id": 1267,
									"name": "Open",
									"nameLocation": "103:4:8",
									"nodeType": "EnumValue",
									"src": "103:4:8"
								},
								{
									"id": 1268,
									"name": "Close",
									"nameLocation": "114:5:8",
									"nodeType": "EnumValue",
									"src": "114:5:8"
								},
								{
									"id": 1269,
									"name": "Claimable",
									"nameLocation": "126:9:8",
									"nodeType": "EnumValue",
									"src": "126:9:8"
								}
							],
							"name": "Status",
							"nameLocation": "75:6:8",
							"nodeType": "EnumDefinition",
							"src": "70:68:8"
						},
						{
							"canonicalName": "RedEnvelope",
							"id": 1302,
							"members": [
								{
									"constant": false,
									"id": 1272,
									"mutability": "mutable",
									"name": "ticketToken",
									"nameLocation": "173:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "165:19:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1271,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "165:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1275,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "198:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "191:13:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$1270",
										"typeString": "enum Status"
									},
									"typeName": {
										"id": 1274,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1273,
											"name": "Status",
											"nameLocations": [
												"191:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1270,
											"src": "191:6:8"
										},
										"referencedDeclaration": 1270,
										"src": "191:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$1270",
											"typeString": "enum Status"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1277,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "219:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "211:15:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "211:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1279,
									"mutability": "mutable",
									"name": "maxTickets",
									"nameLocation": "241:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "233:18:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1281,
									"mutability": "mutable",
									"name": "maxPrizeNum",
									"nameLocation": "266:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "258:19:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1280,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1283,
									"mutability": "mutable",
									"name": "buyTickets",
									"nameLocation": "313:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "305:18:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "305:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1285,
									"mutability": "mutable",
									"name": "sendTickets",
									"nameLocation": "365:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "357:19:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1284,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "357:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1287,
									"mutability": "mutable",
									"name": "injectTickets",
									"nameLocation": "419:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "411:21:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1289,
									"mutability": "mutable",
									"name": "userAddrNum",
									"nameLocation": "460:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "452:19:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "452:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1291,
									"mutability": "mutable",
									"name": "userTxNum",
									"nameLocation": "486:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "478:17:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1293,
									"mutability": "mutable",
									"name": "injectAddrNum",
									"nameLocation": "510:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "502:21:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1292,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "502:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1295,
									"mutability": "mutable",
									"name": "ticketPirce",
									"nameLocation": "538:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "530:19:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "530:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1297,
									"mutability": "mutable",
									"name": "sendAllowAddr",
									"nameLocation": "564:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "556:21:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1296,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "556:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1299,
									"mutability": "mutable",
									"name": "secret",
									"nameLocation": "697:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "689:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1298,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1301,
									"mutability": "mutable",
									"name": "autoClaim",
									"nameLocation": "715:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1302,
									"src": "710:14:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1300,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "710:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedEnvelope",
							"nameLocation": "147:11:8",
							"nodeType": "StructDefinition",
							"scope": 1507,
							"src": "140:589:8",
							"visibility": "public"
						},
						{
							"canonicalName": "Ticket",
							"id": 1309,
							"members": [
								{
									"constant": false,
									"id": 1304,
									"mutability": "mutable",
									"name": "totalNumbers",
									"nameLocation": "761:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "753:20:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1303,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "753:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1306,
									"mutability": "mutable",
									"name": "receiveAddress",
									"nameLocation": "788:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "780:22:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1305,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "780:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1308,
									"mutability": "mutable",
									"name": "buy",
									"nameLocation": "814:3:8",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "809:8:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1307,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "809:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Ticket",
							"nameLocation": "740:6:8",
							"nodeType": "StructDefinition",
							"scope": 1507,
							"src": "733:88:8",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRedEnvelope",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1506,
							"linearizedBaseContracts": [
								1506
							],
							"name": "IRedEnvelope",
							"nameLocation": "835:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "d1e3ee1889517a916aeecc9d0b214ca142fce1f8562cd5e9071876b998ec7eea",
									"id": 1327,
									"name": "RedEnvelopeCreated",
									"nameLocation": "857:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "902:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "886:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "923:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "915:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxTickets",
												"nameLocation": "949:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "941:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxPrizeNum",
												"nameLocation": "979:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "971:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketPirce",
												"nameLocation": "1009:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1001:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketToken",
												"nameLocation": "1039:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1031:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": false,
												"mutability": "mutable",
												"name": "sendAllowAddr",
												"nameLocation": "1069:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1061:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "1098:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1093:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:239:8"
									},
									"src": "851:264:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8e8517d306c35510333dea682099e81a1454bbf42be03c51d19d593ad811bb70",
									"id": 1339,
									"name": "RedEnvelopeClosed",
									"nameLocation": "1129:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1173:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1157:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1194:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1186:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyTickets",
												"nameLocation": "1220:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1212:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"indexed": false,
												"mutability": "mutable",
												"name": "sendTickets",
												"nameLocation": "1249:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1241:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": false,
												"mutability": "mutable",
												"name": "injectTickets",
												"nameLocation": "1279:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1271:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:153:8"
									},
									"src": "1123:177:8"
								},
								{
									"anonymous": false,
									"eventSelector": "66f6b4cd34444af165fb78bce3996496528b37af161c26f737b7341cc37063bb",
									"id": 1345,
									"name": "RedEnvelopeClaimable",
									"nameLocation": "1314:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1361:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "1345:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1382:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "1374:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:62:8"
									},
									"src": "1308:89:8"
								},
								{
									"anonymous": false,
									"eventSelector": "2f21f7ec4c4f5661e7ee11613bb65b35b597763197b0d487352af168e7689653",
									"id": 1357,
									"name": "TicketsPurchase",
									"nameLocation": "1604:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1646:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1630:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1675:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1659:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "1708:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1692:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketIndex",
												"nameLocation": "1741:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1733:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "1775:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1767:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:176:8"
									},
									"src": "1598:198:8"
								},
								{
									"anonymous": false,
									"eventSelector": "044a018626111fd20a3d6ed65f4bf175632a5877b08c4aa033d87b2c7b6318b5",
									"id": 1369,
									"name": "TicketsGet",
									"nameLocation": "1810:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1847:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1831:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1876:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1860:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "1909:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1893:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketIndex",
												"nameLocation": "1942:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1934:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "1972:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "1964:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:172:8"
									},
									"src": "1804:189:8"
								},
								{
									"anonymous": false,
									"eventSelector": "a95519638524dcea0d5d0102c719d77dc3d8b1ae68d2d1e37c79be21bc7b113b",
									"id": 1377,
									"name": "TicketsInject",
									"nameLocation": "2007:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2047:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2031:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2076:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2060:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "2101:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2093:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:101:8"
									},
									"src": "2001:121:8"
								},
								{
									"anonymous": false,
									"eventSelector": "927546e38b674f5e5dff7edce9c7afdcf21a35ac03ba70fe8e341f61f2c73ded",
									"id": 1389,
									"name": "PrizeDrawn",
									"nameLocation": "2138:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2175:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2159:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2204:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2188:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2237:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2221:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2261:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2253:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "2283:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2278:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:151:8"
									},
									"src": "2132:168:8"
								},
								{
									"anonymous": false,
									"eventSelector": "268ef67ed0490cc273925a4865e6fbdb4dcf7e0802aad957aa682a78c7618bef",
									"id": 1399,
									"name": "ClaimPrize",
									"nameLocation": "2314:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2351:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2335:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2380:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2364:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "2405:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2397:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoClaim",
												"nameLocation": "2432:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "2427:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2427:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:124:8"
									},
									"src": "2308:141:8"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "2455:398:8",
										"text": " @notice create the RedEnvelope，采用默认代币地址及配置，默认为仅支持buyTickets模式\n @dev Callable by operator\n @param _endTime: endTime of the RedEnvelope，0 = no limit\n @param _maxTickets: max ticket of the RedEnvelope，0 = no limit\n @param _maxPrizeNum: prize num of the RedEnvelope，0为100%中奖\n @param _secret: "
									},
									"functionSelector": "0e9e1262",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createRedEnvelope",
									"nameLocation": "2868:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "2904:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2896:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2896:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "_maxTickets",
												"nameLocation": "2931:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2923:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2923:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "_maxPrizeNum",
												"nameLocation": "2961:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2953:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "_secret",
												"nameLocation": "2992:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2984:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:121:8"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3014:0:8"
									},
									"scope": 1506,
									"src": "2859:156:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a42c8f6",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createRedEnvelopeDetail",
									"nameLocation": "3116:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "3158:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3150:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3150:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "_ticketPirce",
												"nameLocation": "3206:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3198:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3198:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "3237:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3229:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "_maxTickets",
												"nameLocation": "3264:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3256:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3256:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "_maxPrizeNum",
												"nameLocation": "3294:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3286:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_injectAddress",
												"nameLocation": "3325:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3317:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "_injectTicketNum",
												"nameLocation": "3438:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3430:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "_sendAllowAddr",
												"nameLocation": "3518:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3510:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "_secret",
												"nameLocation": "3741:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3733:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "_autoClaim",
												"nameLocation": "3764:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3759:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3759:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3139:738:8"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3885:0:8"
									},
									"scope": 1506,
									"src": "3107:779:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "559f24bc",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "injectTickets",
									"nameLocation": "4002:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4024:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4016:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4036:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4028:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:36:8"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4059:0:8"
									},
									"scope": 1506,
									"src": "3993:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c42e0c5",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendTickets",
									"nameLocation": "4166:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4186:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "4178:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "4198:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "4190:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4222:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "4214:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:60:8"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4245:0:8"
									},
									"scope": 1506,
									"src": "4157:89:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5e7bb33",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyTickets",
									"nameLocation": "4339:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4358:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "4350:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "4370:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "4362:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "_ticketNumbers",
												"nameLocation": "4394:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "4386:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:60:8"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4417:0:8"
									},
									"scope": 1506,
									"src": "4330:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3834efe1",
									"id": 1464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "endRedEnvelope",
									"nameLocation": "4523:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4546:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "4538:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4538:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4537:13:8"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4558:0:8"
									},
									"scope": 1506,
									"src": "4514:45:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bce3468d",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "drawPrize",
									"nameLocation": "4646:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4664:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "4656:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "4676:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "4668:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4655:28:8"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4691:0:8"
									},
									"scope": 1506,
									"src": "4637:55:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d7098154",
									"id": 1476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimPrize",
									"nameLocation": "4798:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4817:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "4809:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4809:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4808:13:8"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4829:0:8"
									},
									"scope": 1506,
									"src": "4789:41:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe5c5976",
									"id": 1483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelopeStatus",
									"nameLocation": "4879:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "4909:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4901:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:13:8"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4937:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4937:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4936:6:8"
									},
									"scope": 1506,
									"src": "4870:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94456fa4",
									"id": 1488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCurrentRedEnvelopeId",
									"nameLocation": "4986:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5010:2:8"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "5035:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5034:9:8"
									},
									"scope": 1506,
									"src": "4977:67:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f91cd17",
									"id": 1496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelope",
									"nameLocation": "5085:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5109:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "5101:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5101:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5100:13:8"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "5136:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RedEnvelope_$1302_memory_ptr",
													"typeString": "struct RedEnvelope"
												},
												"typeName": {
													"id": 1493,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1492,
														"name": "RedEnvelope",
														"nameLocations": [
															"5136:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1302,
														"src": "5136:11:8"
													},
													"referencedDeclaration": 1302,
													"src": "5136:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RedEnvelope_$1302_storage_ptr",
														"typeString": "struct RedEnvelope"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:20:8"
									},
									"scope": 1506,
									"src": "5076:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dc912a81",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewRedEnvelopeClaimPrize",
									"nameLocation": "5221:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "5255:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "5247:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5267:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "5259:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5259:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:27:8"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "5295:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5294:9:8"
									},
									"scope": 1506,
									"src": "5212:92:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1507,
							"src": "825:4484:8",
							"usedErrors": [],
							"usedEvents": [
								1327,
								1339,
								1345,
								1357,
								1369,
								1377,
								1389,
								1399
							]
						}
					],
					"src": "38:5271:8"
				},
				"id": 8
			},
			"contracts/interfaces/ITaskControlDirect.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ITaskControlDirect.sol",
					"exportedSymbols": {
						"ITaskControlDirect": [
							1534
						]
					},
					"id": 1535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "93:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITaskControlDirect",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1534,
							"linearizedBaseContracts": [
								1534
							],
							"name": "ITaskControlDirect",
							"nameLocation": "133:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e9136042b7047d621d8d2ecf0455dfb179c78142db852170867e7fd65455995c",
									"id": 1522,
									"name": "TicketGet",
									"nameLocation": "169:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "187:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "179:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"indexed": false,
												"mutability": "mutable",
												"name": "taskAddr",
												"nameLocation": "198:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "190:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"indexed": false,
												"mutability": "mutable",
												"name": "fromAddress",
												"nameLocation": "216:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "208:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAddress",
												"nameLocation": "236:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "228:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"indexed": false,
												"mutability": "mutable",
												"name": "ticketNumbers",
												"nameLocation": "259:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "251:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"indexed": false,
												"mutability": "mutable",
												"name": "buy",
												"nameLocation": "278:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "273:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "273:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:104:9"
									},
									"src": "163:120:9"
								},
								{
									"functionSelector": "14c59b53",
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTicket",
									"nameLocation": "366:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "384:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "376:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "_taskAddr",
												"nameLocation": "396:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "388:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "_receiveAddress",
												"nameLocation": "414:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "406:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "445:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "430:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "430:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:75:9"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:0:9"
									},
									"scope": 1534,
									"src": "357:102:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1535,
							"src": "123:342:9",
							"usedErrors": [],
							"usedEvents": [
								1522
							]
						}
					],
					"src": "93:372:9"
				},
				"id": 9
			},
			"contracts/interfaces/ItaskCallee.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ItaskCallee.sol",
					"exportedSymbols": {
						"ItaskCallee": [
							1546
						]
					},
					"id": 1547,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1536,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ItaskCallee",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1546,
							"linearizedBaseContracts": [
								1546
							],
							"name": "ItaskCallee",
							"nameLocation": "73:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e1ac8d26",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "taskCall",
									"nameLocation": "130:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "147:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "139:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "169:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "154:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "154:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:36:10"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "193:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:9:10"
									},
									"scope": 1546,
									"src": "121:81:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1547,
							"src": "63:141:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:168:10"
				},
				"id": 10
			}
		}
	}
}